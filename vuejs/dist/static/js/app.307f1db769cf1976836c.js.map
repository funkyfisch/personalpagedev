{"version":3,"sources":["webpack:///./src/App.vue?0966","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///src/components/PlanetOrbits.vue","webpack:///./src/components/PlanetOrbits.vue?f888","webpack:///./src/components/PlanetOrbits.vue","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./lib/twojs/two.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","ssrContext","PlanetOrbits","drawSky","drawSystem","el","r","g","play","orbit","makeGroup","noFill","earthOrbit","moonOrbit","x","y","components_PlanetOrbits","_m","staticStyle","position","width","height","_v","color","src_components_PlanetOrbits","PlanetOrbits_normalizeComponent","vue_esm","use","vue_router_esm","router","routes","path","name","component","config","productionTip","components","App","template","__WEBPACK_AMD_DEFINE_RESULT__","Two","_","Registry","previousTwo","root","window","global","toString","Object","prototype","_indexAmount","natural","slice","Array","indexOf","keys","bind","Function","create","identity","value","isArguments","obj","call","isFunction","isString","isNumber","isDate","isRegExp","isError","isFinite","isNaN","parseFloat","isBoolean","isNull","isUndefined","isEmpty","isArrayLike","isArray","length","isElement","nodeType","isObject","type","toArray","map","values","range","start","stop","step","Math","max","ceil","idx","list","item","i","has","key","hasOwnProperty","func","ctx","apply","arguments","args","extend","base","sources","k","defaults","push","each","iteratee","context","result","once","init","after","times","uniqueId","prefix","sin","cos","atan2","sqrt","PI","round","abs","HALF_PI","pow","min","count","perf","performance","now","Date","MAX_ARRAY_INDEX","collection","dom","temp","document","createElement","hasEventListeners","addEventListener","elem","event","bool","attachEvent","unbind","removeEventListeners","detachEvent","getRequestAnimationFrame","cancel","lastTime","vendors","request","requestAnimationFrame","callback","element","currTime","getTime","timeToCall","setTimeout","loop","options","params","fullscreen","Types","svg","autostart","v","domElement","tagName","toLowerCase","test","renderer","Utils","setPlaying","frameCount","fitted","fitToWindow","body","style","overflow","margin","padding","top","left","right","bottom","display","setSize","ratio","scene","Instances","raf","Float32Array","webgl","canvas","Version","Identifier","Properties","hierarchy","demotion","Events","pause","update","resize","change","remove","insert","order","load","Commands","move","line","curve","close","Resolution","noConflict","defineProperty","property","secret","flag","charAt","toUpperCase","enumerable","get","set","release","vertices","children","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","send","Curve","CollinearityEpsilon","RecursionLimit","CuspLimit","Tolerance","distance","angle","epsilon","abscissas","weights","devicePixelRatio","getBackingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","getRatio","b","playing","getComputedMatrix","object","matrix","Matrix","parent","matrices","_matrix","reverse","m","e","elements","multiply","deltaTransformPoint","dx","a","c","dy","d","Vector","decomposeMatrix","px","py","skewX","skewY","translateX","translateY","f","scaleX","scaleY","rotation","applySvgAttributes","node","attr","attributes","styles","getComputedStyle","computedStyles","undefined","nodeName","opacity","visible","visibility","getCTM","transforms","translation","scale","replace","cap","join","miter","linewidth","getById","classList","split","read","group","Group","l","childNodes","n","tag","o","add","polygon","verts","getAttribute","match","p1","p2","Anchor","poly","Path","noStroke","fill","polyline","control","coords","coord","closed","relative","commands","last","command","bin","lower","items","trim","j","ct","concat","points","x1","y1","x2","y2","x3","y3","x4","y4","reflection","n1","n2","addSelf","getReflection","controls","AppendCurveProperties","isZero","rx","ry","xAxisRotation","largeArcFlag","sweepFlag","mx","my","_x","_y","rx2","ry2","_x2","_y2","amp","_cx","_cy","cx","cy","u","t1","acos","dt","mod","projection","translate","rotate","theta","projected","rect","getBoundingClientRect","centroid","subSelf","circle","Circle","ellipse","Ellipse","w2","h2","Rectangle","Line","lineargradient","ox","oy","stops","matches","child","offset","Gradient","Stop","gradient","LinearGradient","radialgradient","fx","fy","RadialGradient","subdivide","limit","amount","t","getPointOnCubicBezier","getCurveLength","ax","bx","ay","by","integrate","w","A","B","sum","Ax","getCurveFromPoints","point","prev","next","getControlPoints","_command","a1","angleBetween","a2","d1","distanceBetween","d2","mid","_relative","copy","getAnchorsFromArcData","center","ts","td","ccw","pct","anchor","ratioBetween","distanceBetweenSquared","lerp","toFixed","floor","Collection","Error","message","on","_events","off","names","events","ev","trigger","listen","bound","ignore","method","constructor","pop","popped","shift","shifted","pushed","unshift","unshifted","splice","inserted","spliced","sort","solveSegmentIntersection","decoupleShapes","wr","appendTo","appendChild","animated","_lastFrame","timeDelta","objects","clear","makeLine","makeRectangle","makeRoundedRectangle","sides","RoundedRectangle","makeCircle","makeEllipse","makeStar","or","ir","star","Star","makeCurve","p","makePolygon","Polygon","makeArcSegment","sa","ea","res","arcSegment","ArcSegment","makePath","makeText","text","Text","makeLinearGradient","makeRadialGradient","makeSprite","cols","rows","frameRate","sprite","Sprite","makeImageSequence","paths","imageSequence","ImageSequence","makeTexture","Texture","interpret","svgNode","shallow","nodes","data","innerHTML","exports","module","contains","zero","clone","v1","v2","sub","multiplySelf","multiplyScalar","s","divideScalar","negate","dot","lengthSquared","normalize","distanceTo","distanceToSquared","setLength","equals","eps","toObject","radians","BoundProto","xgs","ygs","_bound","ux","uy","vx","vy","_broadcast","AnchorProto","tan","Identity","Multiply","C","z","A0","A1","A2","A3","A4","A5","A6","A7","A8","B0","B1","B2","B3","B4","B5","B6","B7","B8","h","inverse","out","a00","a01","a02","a10","a11","a12","a20","a21","a22","b01","b11","b21","det","sx","sy","fullMatrix","output","hasOutput","version","ns","xlink","alignments","createElementNS","setAttributes","setAttributeNS","setAttribute","removeAttributes","removeAttribute","ret","ar","bl","br","cl","getClip","shape","clip","_renderer","defs","_clip","removeChild","parentNode","orderChild","renderChild","_update","_opacity","_flagOpacity","flagMatrix","manual","_flagMatrix","_flagAdditions","additions","forEach","_flagSubtractions","subtractions","_flagOrder","_flagMask","_mask","flagReset","changed","transform","_flagVertices","_vertices","_closed","_fill","_flagFill","_stroke","_flagStroke","stroke","_flagLinewidth","_linewidth","_flagVisible","_visible","_flagCap","_cap","_flagJoin","_join","_flagMiter","_miter","_flagClip","_flagFamily","_family","_flagSize","_size","_flagLeading","_leading","_flagAlignment","_alignment","_flagBaseline","_baseline","_flagStyle","_style","_flagWeight","_weight","_flagDecoration","_decoration","_flagValue","textContent","_value","linear-gradient","silent","_flagEndPoints","_flagSpread","spreadMethod","_spread","gradientUnits","_flagStops","lengthChanged","_flagOffset","_offset","_flagColor","_color","radial-gradient","_flagCenter","_flagFocal","focal","_flagRadius","_radius","texture","image","_flagLoaded","loaded","href","toDataURL","src","_flagScale","_scale","_flagRepeat","_repeat","patternUnits","appended","Renderer","isDefaultMatrix","isHidden","middle","shim","defaultMatrix","mask","save","restore","forced","parentClipped","isOffset","fillStyle","effect","strokeStyle","lineWidth","miterLimit","lineJoin","lineCap","globalAlpha","beginPath","closePath","bezierCurveTo","lineTo","moveTo","font","textAlign","textBaseline","fillText","strokeText","createLinearGradient","addColorStop","createRadialGradient","_flagImage","_flagVideo","createPattern","smoothing","getContext","overdraw","imageSmoothingEnabled","isOne","clearRect","multiplyMatrix","transformation","uv","gl","deleteTexture","program","flagParentMatrix","enable","STENCIL_TEST","stencilFunc","ALWAYS","colorMask","stencilOp","KEEP","INCR","NOTEQUAL","DECR","disable","updateCanvas","border","Infinity","cr","forcedParent","flagTexture","triangles","getTriangles","updateBuffer","updateTexture","bindBuffer","ARRAY_BUFFER","textureCoordsBuffer","vertexAttribPointer","textureCoords","FLOAT","bindTexture","TEXTURE_2D","uniformMatrix3fv","buffer","drawArrays","TRIANGLES","measureText","_texture","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","texImage2D","RGBA","UNSIGNED_BYTE","deleteBuffer","createBuffer","enableVertexAttribArray","bufferData","STATIC_DRAW","shaders","error","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","types","vertex","fragment","TextureRegistry","vs","fs","antialias","alpha","premultipliedAlpha","stencil","preserveDrawingBuffer","useProgram","getAttribLocation","getUniformLocation","DEPTH_TEST","BLEND","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","viewport","resolutionLocation","uniform2f","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","Shape","FlagMatrix","isShape","MakeObservable","_translation","_rotation","addTo","deep","RegExp","curved","flagVertices","FlagVertices","bindVertices","BindVertices","unbindVertices","UnbindVertices","flagFill","FlagFill","flagStroke","FlagStroke","_curved","beginning","ending","automatic","getSubdivisions","_flagLength","_updateLength","_length","_automatic","_beginning","_ending","_collection","corner","getPointAt","ia","ib","target","_lengths","plot","_width","_height","_flagWidth","_flagHeight","xr","yr","TWO_PI","radius","_sides","_flagSides","innerRadius","outerRadius","startAngle","endAngle","_flagStartAngle","_flagEndAngle","_flagInnerRadius","_flagOuterRadius","_startAngle","_endAngle","_innerRadius","_outerRadius","connected","punctured","_flagOpaicty","Index","flagStops","FlagStops","bindStops","BindStops","unbindStops","UnbindStops","spread","_stops","flagEndPoints","FlagEndPoints","_flatCenter","regex","video","flagOffset","FlagOffset","flagScale","FlagScale","ImageRegistry","getAbsoluteURL","getImage","absoluteSrc","crossOrigin","Register","_src","img","removeEventListener","videoWidth","videoHeight","_flagSrc","_image","index","_loaded","columns","_flagTexture","_flagColumns","_flagRows","_flagFrameRate","flagIndex","_amount","_duration","_startTime","_playing","_firstFrame","_loop","_columns","_rows","_frameRate","_index","firstFrame","lastFrame","onLastFrame","_onLastFrame","elapsed","duration","iw","ih","frames","flagTextures","FlagTextures","bindTextures","BindTextures","unbindTextures","UnbindTextures","textures","GenerateTexture","DefaultFrameRate","_flagTextures","_textures","_flagIndex","effects","Children","ids","attach","detach","replaceParent","newParent","InsertChildren","RemoveChildren","OrderChildren","properties","oi","MakeGetterSetters","_children","insertChildren","removeChildren","orderChildren","MakeGetterSetter","search","found","getByClassName","getByType","grandparent"],"mappings":"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","file":"static/js/app.307f1db769cf1976836c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b1bcf7c0\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b1bcf7c0\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b1bcf7c0\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","<template>\n  <div style=\"position:absolute;width:100%;height:100%\">\n    <div id=\"bg-sky\">\n      </div>\n    <div style=\"position:relative;\" id=\"solar-system\">\n    </div>\n    <p style=\"color:red;\"> Coming soon...</p>\n  </div>\n</template>\n\n<script>\nimport Two from '@/../lib/twojs/two.js'\nexport default {\n  name: 'PlanetOrbits',\n  data () {\n    return {\n      msg: 'Welcome to Your Vue.js App'\n    }\n  },\n  mounted: function () {\n    this.drawSky()\n    this.drawSystem()\n  },\n  methods: {\n    drawSky () {\n      var el = document.getElementById('bg-sky')\n      var two = new Two({fullscreen: true}).appendTo(el)\n      var sky = two.makeRectangle(0, 0, 100, 100)\n      var r = 2\n      var g = 2\n      var b = 2\n      sky.fill = 'rgb(' + r + ',' + g + ',' + b + ')'\n      sky.scale = 100\n      two.bind('update', function (frameCount) {\n        if (sky.fill === 'rgb(30,30,58)') {\n          r = 6\n          g = 6\n          b = 10\n        }\n        if (frameCount % 10 === 0) {\n          r++\n          g++\n          b += 2\n        }\n        sky.fill = 'rgb(' + r + ',' + g + ',' + b + ')'\n      })\n      two.play()\n    },\n    drawSystem () {\n      var el = document.getElementById('solar-system')\n      var two = new Two({fullscreen: true}).appendTo(el)\n\n      function getEarthPosition (angle, orbit) {\n        return {\n          x: Math.sin(angle * Math.PI / 180) * orbit,\n          y: Math.cos(angle * Math.PI / 180) * orbit\n        }\n      }\n      function getMoonPosition (angle, orbit) {\n        return {\n          x: Math.sin(angle * Math.PI / 180) * orbit,\n          y: Math.cos(angle * Math.PI / 180) * orbit\n        }\n      }\n\n      var earthAngle = 0\n      var moonAngle = 0\n      var distance = 30\n      var radius = 35\n      var padding = 200\n      var orbit = 200\n      var offset = orbit + padding\n      var orbits = two.makeGroup()\n\n      var text = two.makeText('Coming soon', offset * 1.8 - 70, 100)\n      text.size = 22\n      text.fill = '#ccc'\n      text.family = 'Courier'\n      text.alignment = 'left'\n\n      var sol = two.makeCircle(offset * 1.8, offset, 40)\n      sol.linewidth = 0\n      sol.fill = 'yellow'\n\n      var earthPos = getEarthPosition(earthAngle++, orbit)\n      var earth = two.makeCircle(earthPos.x + offset * 1.8, earthPos.y + offset, 30)\n      earth.fill = '#194878'\n      earth.stroke = ''\n\n      var earthOrbit = two.makeCircle(offset * 1.8, offset, orbit)\n      earthOrbit.noFill()\n      earthOrbit.linewidth = 2\n      earthOrbit.stroke = '#ccc'\n      orbits.add(earthOrbit)\n\n      var moonPos = getMoonPosition(moonAngle, radius + distance)\n      var moon = two.makeCircle(earth.translation.x + moonPos.x, earth.translation.y + moonPos.y, radius / 4)\n      moon.fill = '#cfcfcf'\n      moon.stroke = ''\n\n      var moonOrbit = two.makeCircle(earth.translation.x, earth.translation.y, radius + distance)\n      moonOrbit.noFill()\n      moonOrbit.linewidth = 2\n      moonOrbit.stroke = '#ccc'\n      orbits.add(moonOrbit)\n\n      var coeff = 2\n      two.bind('update', function (frameCount) {\n        // updateWorld()\n        // updateSun()\n        // updateEarth()\n        // updateMoon()\n        if (frameCount % 60 === 1) {\n          text.value += '.'\n        }\n        if (text.value === 'Coming soon.....') {\n          text.value = 'Coming soon'\n        }\n        coeff += 0.01\n        var pos = getEarthPosition(earthAngle++, orbit)\n        moonOrbit.translation.x = earth.translation.x = pos.x + offset * 1.8\n        moonOrbit.translation.y = earth.translation.y = pos.y + offset\n\n        var moonPos = getMoonPosition(moonAngle -= 4, radius + distance)\n        moon.translation.x = earth.translation.x - moonPos.x\n        moon.translation.y = earth.translation.y - moonPos.y\n        sol.scale += Math.sin(Math.PI * coeff) / 100\n        sol.opacity -= Math.sin(Math.PI * coeff) / 100\n      })\n      two.play()\n    }\n  }\n}\n</script>\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/PlanetOrbits.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"position\":\"absolute\",\"width\":\"100%\",\"height\":\"100%\"}},[_c('div',{attrs:{\"id\":\"bg-sky\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"position\":\"relative\"},attrs:{\"id\":\"solar-system\"}}),_vm._v(\" \"),_c('p',{staticStyle:{\"color\":\"red\"}},[_vm._v(\" Coming soon...\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3ec834c6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/PlanetOrbits.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3ec834c6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./PlanetOrbits.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./PlanetOrbits.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./PlanetOrbits.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3ec834c6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./PlanetOrbits.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3ec834c6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/PlanetOrbits.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport HelloWorld from '@/components/PlanetOrbits'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'PlanetOrbits',\n      component: HelloWorld\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","/**\n * two.js\n * a two-dimensional drawing api meant for modern browsers. It is renderer\n * agnostic enabling the same api for rendering in multiple contexts: webgl,\n * canvas2d, and svg.\n *\n * Copyright (c) 2012 - 2017 jonobr1 / http://jonobr1.com\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\nthis.Two = (function(previousTwo) {\n\n  var root = typeof window != 'undefined' ? window : typeof global != 'undefined' ? global : null;\n  var toString = Object.prototype.toString;\n  var _ = {\n    // http://underscorejs.org/ • 1.8.3\n    _indexAmount: 0,\n    natural: {\n      slice: Array.prototype.slice,\n      indexOf: Array.prototype.indexOf,\n      keys: Object.keys,\n      bind: Function.prototype.bind,\n      create: Object.create\n    },\n    identity: function(value) {\n      return value;\n    },\n    isArguments: function(obj) {\n      return toString.call(obj) === '[object Arguments]';\n    },\n    isFunction: function(obj) {\n      return toString.call(obj) === '[object Function]';\n    },\n    isString: function(obj) {\n      return toString.call(obj) === '[object String]';\n    },\n    isNumber: function(obj) {\n      return toString.call(obj) === '[object Number]';\n    },\n    isDate: function(obj) {\n      return toString.call(obj) === '[object Date]';\n    },\n    isRegExp: function(obj) {\n      return toString.call(obj) === '[object RegExp]';\n    },\n    isError: function(obj) {\n      return toString.call(obj) === '[object Error]';\n    },\n    isFinite: function(obj) {\n      return isFinite(obj) && !isNaN(parseFloat(obj));\n    },\n    isNaN: function(obj) {\n      return _.isNumber(obj) && obj !== +obj;\n    },\n    isBoolean: function(obj) {\n      return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n    },\n    isNull: function(obj) {\n      return obj === null;\n    },\n    isUndefined: function(obj) {\n      return obj === void 0;\n    },\n    isEmpty: function(obj) {\n      if (obj == null) return true;\n      if (isArrayLike && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n      return _.keys(obj).length === 0;\n    },\n    isElement: function(obj) {\n      return !!(obj && obj.nodeType === 1);\n    },\n    isArray: Array.isArray || function(obj) {\n      return toString.call(obj) === '[object Array]';\n    },\n    isObject: function(obj) {\n      var type = typeof obj;\n      return type === 'function' || type === 'object' && !!obj;\n    },\n    toArray: function(obj) {\n      if (!obj) {\n        return [];\n      }\n      if (_.isArray(obj)) {\n        return slice.call(obj);\n      }\n      if (isArrayLike(obj)) {\n        return _.map(obj, _.identity);\n      }\n      return _.values(obj);\n    },\n    range: function(start, stop, step) {\n      if (stop == null) {\n        stop = start || 0;\n        start = 0;\n      }\n      step = step || 1;\n\n      var length = Math.max(Math.ceil((stop - start) / step), 0);\n      var range = Array(length);\n\n      for (var idx = 0; idx < length; idx++, start += step) {\n        range[idx] = start;\n      }\n\n      return range;\n    },\n    indexOf: function(list, item) {\n      if (!!_.natural.indexOf) {\n        return _.natural.indexOf.call(list, item);\n      }\n      for (var i = 0; i < list.length; i++) {\n        if (list[i] === item) {\n          return i;\n        }\n      }\n      return -1;\n    },\n    has: function(obj, key) {\n      return obj != null && hasOwnProperty.call(obj, key);\n    },\n    bind: function(func, ctx) {\n      var natural = _.natural.bind;\n      if (natural && func.bind === natural) {\n        return natural.apply(func, slice.call(arguments, 1));\n      }\n      var args = slice.call(arguments, 2);\n      return function() {\n        func.apply(ctx, args);\n      };\n    },\n    extend: function(base) {\n      var sources = slice.call(arguments, 1);\n      for (var i = 0; i < sources.length; i++) {\n        var obj = sources[i];\n        for (var k in obj) {\n          base[k] = obj[k];\n        }\n      }\n      return base;\n    },\n    defaults: function(base) {\n      var sources = slice.call(arguments, 1);\n      for (var i = 0; i < sources.length; i++) {\n        var obj = sources[i];\n        for (var k in obj) {\n          if (base[k] === void 0) {\n            base[k] = obj[k];\n          }\n        }\n      }\n      return base;\n    },\n    keys: function(obj) {\n      if (!_.isObject(obj)) {\n        return [];\n      }\n      if (_.natural.keys) {\n        return _.natural.keys(obj);\n      }\n      var keys = [];\n      for (var k in obj) {\n        if (_.has(obj, k)) {\n          keys.push(k);\n        }\n      }\n      return keys;\n    },\n    values: function(obj) {\n      var keys = _.keys(obj);\n      var values = [];\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        values.push(obj[k]);\n      }\n      return values;\n    },\n    each: function(obj, iteratee, context) {\n      var ctx = context || this;\n      var keys = !isArrayLike(obj) && _.keys(obj);\n      var length = (keys || obj).length;\n      for (var i = 0; i < length; i++) {\n        var k = keys ? keys[i] : i;\n        iteratee.call(ctx, obj[k], k, obj);\n      }\n      return obj;\n    },\n    map: function(obj, iteratee, context) {\n      var ctx = context || this;\n      var keys = !isArrayLike(obj) && _.keys(obj);\n      var length = (keys || obj).length;\n      var result = [];\n      for (var i = 0; i < length; i++) {\n        var k = keys ? keys[i] : i;\n        result[i] = iteratee.call(ctx, obj[k], k, obj);\n      }\n      return result;\n    },\n    once: function(func) {\n      var init = false;\n      return function() {\n        if (!!init) {\n          return func;\n        }\n        init = true;\n        return func.apply(this, arguments);\n      }\n    },\n    after: function(times, func) {\n      return function() {\n        while (--times < 1) {\n          return func.apply(this, arguments);\n        }\n      }\n    },\n    uniqueId: function(prefix) {\n      var id = ++_._indexAmount + '';\n      return prefix ? prefix + id : id;\n    }\n  };\n\n  /**\n   * Constants\n   */\n\n  var sin = Math.sin,\n    cos = Math.cos,\n    atan2 = Math.atan2,\n    sqrt = Math.sqrt,\n    round = Math.round,\n    abs = Math.abs,\n    PI = Math.PI,\n    TWO_PI = PI * 2,\n    HALF_PI = PI / 2,\n    pow = Math.pow,\n    min = Math.min,\n    max = Math.max;\n\n  /**\n   * Localized variables\n   */\n\n  var count = 0;\n  var slice = _.natural.slice;\n  var perf = ((root.performance && root.performance.now) ? root.performance : Date);\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = function(obj) {\n    return obj == null ? void 0 : obj['length'];\n  };\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  /**\n   * Cross browser dom events.\n   */\n  var dom = {\n\n    temp: (root.document ? root.document.createElement('div') : {}),\n\n    hasEventListeners: _.isFunction(root.addEventListener),\n\n    bind: function(elem, event, func, bool) {\n      if (this.hasEventListeners) {\n        elem.addEventListener(event, func, !!bool);\n      } else {\n        elem.attachEvent('on' + event, func);\n      }\n      return dom;\n    },\n\n    unbind: function(elem, event, func, bool) {\n      if (dom.hasEventListeners) {\n        elem.removeEventListeners(event, func, !!bool);\n      } else {\n        elem.detachEvent('on' + event, func);\n      }\n      return dom;\n    },\n\n    getRequestAnimationFrame: function() {\n\n      var lastTime = 0;\n      var vendors = ['ms', 'moz', 'webkit', 'o'];\n      var request = root.requestAnimationFrame, cancel;\n\n      if(!request) {\n        for (var i = 0; i < vendors.length; i++) {\n          request = root[vendors[i] + 'RequestAnimationFrame'] || request;\n          cancel = root[vendors[i] + 'CancelAnimationFrame']\n            || root[vendors[i] + 'CancelRequestAnimationFrame'] || cancel;\n        }\n\n        request = request || function(callback, element) {\n          var currTime = new Date().getTime();\n          var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n          var id = root.setTimeout(function() { callback(currTime + timeToCall); }, timeToCall);\n          lastTime = currTime + timeToCall;\n          return id;\n        };\n        // cancel = cancel || function(id) {\n        //   clearTimeout(id);\n        // };\n      }\n\n      request.init = _.once(loop);\n\n      return request;\n\n    }\n\n  };\n\n  /**\n   * @class\n   */\n  var Two = root.Two = function(options) {\n\n    // Determine what Renderer to use and setup a scene.\n\n    var params = _.defaults(options || {}, {\n      fullscreen: false,\n      width: 640,\n      height: 480,\n      type: Two.Types.svg,\n      autostart: false\n    });\n\n    _.each(params, function(v, k) {\n      if (k === 'fullscreen' || k === 'autostart') {\n        return;\n      }\n      this[k] = v;\n    }, this);\n\n    // Specified domElement overrides type declaration only if the element does not support declared renderer type.\n    if (_.isElement(params.domElement)) {\n      var tagName = params.domElement.tagName.toLowerCase();\n      // TODO: Reconsider this if statement's logic.\n      if (!/^(CanvasRenderer-canvas|WebGLRenderer-canvas|SVGRenderer-svg)$/.test(this.type+'-'+tagName)) {\n        this.type = Two.Types[tagName];\n      }\n    }\n\n    this.renderer = new Two[this.type](this);\n    Two.Utils.setPlaying.call(this, params.autostart);\n    this.frameCount = 0;\n\n    if (params.fullscreen) {\n\n      var fitted = _.bind(fitToWindow, this);\n      _.extend(document.body.style, {\n        overflow: 'hidden',\n        margin: 0,\n        padding: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        position: 'fixed'\n      });\n      _.extend(this.renderer.domElement.style, {\n        display: 'block',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        position: 'fixed'\n      });\n      dom.bind(root, 'resize', fitted);\n      fitted();\n\n\n    } else if (!_.isElement(params.domElement)) {\n\n      this.renderer.setSize(params.width, params.height, this.ratio);\n      this.width = params.width;\n      this.height = params.height;\n\n    }\n\n    this.scene = this.renderer.scene;\n\n    Two.Instances.push(this);\n    raf.init();\n\n  };\n\n  _.extend(Two, {\n\n    /**\n     * Access to root in other files.\n     */\n\n    root: root,\n\n    /**\n     * Primitive\n     */\n\n    Array: root.Float32Array || Array,\n\n    Types: {\n      webgl: 'WebGLRenderer',\n      svg: 'SVGRenderer',\n      canvas: 'CanvasRenderer'\n    },\n\n    Version: 'v0.7.0',\n\n    Identifier: 'two_',\n\n    Properties: {\n      hierarchy: 'hierarchy',\n      demotion: 'demotion'\n    },\n\n    Events: {\n      play: 'play',\n      pause: 'pause',\n      update: 'update',\n      render: 'render',\n      resize: 'resize',\n      change: 'change',\n      remove: 'remove',\n      insert: 'insert',\n      order: 'order',\n      load: 'load'\n    },\n\n    Commands: {\n      move: 'M',\n      line: 'L',\n      curve: 'C',\n      close: 'Z'\n    },\n\n    Resolution: 8,\n\n    Instances: [],\n\n    noConflict: function() {\n      root.Two = previousTwo;\n      return this;\n    },\n\n    uniqueId: function() {\n      var id = count;\n      count++;\n      return id;\n    },\n\n    Utils: _.extend(_, {\n\n      performance: perf,\n\n      defineProperty: function(property) {\n\n        var object = this;\n        var secret = '_' + property;\n        var flag = '_flag' + property.charAt(0).toUpperCase() + property.slice(1);\n\n        Object.defineProperty(object, property, {\n          enumerable: true,\n          get: function() {\n            return this[secret];\n          },\n          set: function(v) {\n            this[secret] = v;\n            this[flag] = true;\n          }\n        });\n\n      },\n\n      /**\n       * Release an arbitrary class' events from the two.js corpus and recurse\n       * through its children and or vertices.\n       */\n      release: function(obj) {\n\n        if (!_.isObject(obj)) {\n          return;\n        }\n\n        if (_.isFunction(obj.unbind)) {\n          obj.unbind();\n        }\n\n        if (obj.vertices) {\n          if (_.isFunction(obj.vertices.unbind)) {\n            obj.vertices.unbind();\n          }\n          _.each(obj.vertices, function(v) {\n            if (_.isFunction(v.unbind)) {\n              v.unbind();\n            }\n          });\n        }\n\n        if (obj.children) {\n          _.each(obj.children, function(obj) {\n            Two.Utils.release(obj);\n          });\n        }\n\n      },\n\n      xhr: function(path, callback) {\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', path);\n\n        xhr.onreadystatechange = function() {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            callback(xhr.responseText);\n          }\n        };\n\n        xhr.send();\n        return xhr;\n\n      },\n\n      Curve: {\n\n        CollinearityEpsilon: pow(10, -30),\n\n        RecursionLimit: 16,\n\n        CuspLimit: 0,\n\n        Tolerance: {\n          distance: 0.25,\n          angle: 0,\n          epsilon: 0.01\n        },\n\n        // Lookup tables for abscissas and weights with values for n = 2 .. 16.\n        // As values are symmetric, only store half of them and adapt algorithm\n        // to factor in symmetry.\n        abscissas: [\n          [  0.5773502691896257645091488],\n          [0,0.7745966692414833770358531],\n          [  0.3399810435848562648026658,0.8611363115940525752239465],\n          [0,0.5384693101056830910363144,0.9061798459386639927976269],\n          [  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n          [0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n          [  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n          [0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n          [  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n          [0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n          [  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n          [0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n          [  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n          [0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n          [  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n        ],\n\n        weights: [\n          [1],\n          [0.8888888888888888888888889,0.5555555555555555555555556],\n          [0.6521451548625461426269361,0.3478548451374538573730639],\n          [0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n          [0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n          [0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n          [0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n          [0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n          [0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n          [0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n          [0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n          [0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n          [0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n          [0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n          [0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n        ]\n\n      },\n\n      /**\n       * Account for high dpi rendering.\n       * http://www.html5rocks.com/en/tutorials/canvas/hidpi/\n       */\n\n      devicePixelRatio: root.devicePixelRatio || 1,\n\n      getBackingStoreRatio: function(ctx) {\n        return ctx.webkitBackingStorePixelRatio ||\n          ctx.mozBackingStorePixelRatio ||\n          ctx.msBackingStorePixelRatio ||\n          ctx.oBackingStorePixelRatio ||\n          ctx.backingStorePixelRatio || 1;\n      },\n\n      getRatio: function(ctx) {\n        return Two.Utils.devicePixelRatio / getBackingStoreRatio(ctx);\n      },\n\n      /**\n       * Properly defer play calling until after all objects\n       * have been updated with their newest styles.\n       */\n      setPlaying: function(b) {\n\n        this.playing = !!b;\n        return this;\n\n      },\n\n      /**\n       * Return the computed matrix of a nested object.\n       * TODO: Optimize traversal.\n       */\n      getComputedMatrix: function(object, matrix) {\n\n        matrix = (matrix && matrix.identity()) || new Two.Matrix();\n        var parent = object, matrices = [];\n\n        while (parent && parent._matrix) {\n          matrices.push(parent._matrix);\n          parent = parent.parent;\n        }\n\n        matrices.reverse();\n\n        _.each(matrices, function(m) {\n\n          var e = m.elements;\n          matrix.multiply(\n            e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9]);\n\n        });\n\n        return matrix;\n\n      },\n\n      deltaTransformPoint: function(matrix, x, y) {\n\n        var dx = x * matrix.a + y * matrix.c + 0;\n        var dy = x * matrix.b + y * matrix.d + 0;\n\n        return new Two.Vector(dx, dy);\n\n      },\n\n      /**\n       * https://gist.github.com/2052247\n       */\n      decomposeMatrix: function(matrix) {\n\n        // calculate delta transform point\n        var px = Two.Utils.deltaTransformPoint(matrix, 0, 1);\n        var py = Two.Utils.deltaTransformPoint(matrix, 1, 0);\n\n        // calculate skew\n        var skewX = ((180 / Math.PI) * Math.atan2(px.y, px.x) - 90);\n        var skewY = ((180 / Math.PI) * Math.atan2(py.y, py.x));\n\n        return {\n            translateX: matrix.e,\n            translateY: matrix.f,\n            scaleX: Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b),\n            scaleY: Math.sqrt(matrix.c * matrix.c + matrix.d * matrix.d),\n            skewX: skewX,\n            skewY: skewY,\n            rotation: skewX // rotation is the same as skew x\n        };\n\n      },\n\n      /**\n       * Walk through item properties and pick the ones of interest.\n       * Will try to resolve styles applied via CSS\n       *\n       * TODO: Reverse calculate `Two.Gradient`s for fill / stroke\n       * of any given path.\n       */\n      applySvgAttributes: function(node, elem) {\n\n        var attributes = {}, styles = {}, i, key, value, attr;\n\n        // Not available in non browser environments\n        if (getComputedStyle) {\n          // Convert CSSStyleDeclaration to a normal object\n          var computedStyles = getComputedStyle(node);\n          i = computedStyles.length;\n\n          while (i--) {\n            key = computedStyles[i];\n            value = computedStyles[key];\n            // Gecko returns undefined for unset properties\n            // Webkit returns the default value\n            if (value !== undefined) {\n              styles[key] = value;\n            }\n          }\n        }\n\n        // Convert NodeMap to a normal object\n        i = node.attributes.length;\n        while (i--) {\n          attr = node.attributes[i];\n          attributes[attr.nodeName] = attr.value;\n        }\n\n        // Getting the correct opacity is a bit tricky, since SVG path elements don't\n        // support opacity as an attribute, but you can apply it via CSS.\n        // So we take the opacity and set (stroke/fill)-opacity to the same value.\n        if (!_.isUndefined(styles.opacity)) {\n          styles['stroke-opacity'] = styles.opacity;\n          styles['fill-opacity'] = styles.opacity;\n        }\n\n        // Merge attributes and applied styles (attributes take precedence)\n        _.extend(styles, attributes);\n\n        // Similarly visibility is influenced by the value of both display and visibility.\n        // Calculate a unified value here which defaults to `true`.\n        styles.visible = !(_.isUndefined(styles.display) && styles.display === 'none')\n          || (_.isUndefined(styles.visibility) && styles.visibility === 'hidden');\n\n        // Now iterate the whole thing\n        for (key in styles) {\n          value = styles[key];\n\n          switch (key) {\n            case 'transform':\n              // TODO: Check this out https://github.com/paperjs/paper.js/blob/master/src/svg/SVGImport.js#L313\n              if (value === 'none') break;\n              var m = node.getCTM ? node.getCTM() : null;\n\n              // Might happen when transform string is empty or not valid.\n              if (m === null) break;\n\n              // // Option 1: edit the underlying matrix and don't force an auto calc.\n              // var m = node.getCTM();\n              // elem._matrix.manual = true;\n              // elem._matrix.set(m.a, m.b, m.c, m.d, m.e, m.f);\n\n              // Option 2: Decompose and infer Two.js related properties.\n              var transforms = Two.Utils.decomposeMatrix(node.getCTM());\n\n              elem.translation.set(transforms.translateX, transforms.translateY);\n              elem.rotation = transforms.rotation;\n              // Warning: Two.js elements only support uniform scalars...\n              elem.scale = transforms.scaleX;\n\n              var x = parseFloat((styles.x + '').replace('px'));\n              var y = parseFloat((styles.y + '').replace('px'));\n\n              // Override based on attributes.\n              if (x) {\n                elem.translation.x = x;\n              }\n\n              if (y) {\n                elem.translation.y = y;\n              }\n\n              break;\n            case 'visible':\n              elem.visible = value;\n              break;\n            case 'stroke-linecap':\n              elem.cap = value;\n              break;\n            case 'stroke-linejoin':\n              elem.join = value;\n              break;\n            case 'stroke-miterlimit':\n              elem.miter = value;\n              break;\n            case 'stroke-width':\n              elem.linewidth = parseFloat(value);\n              break;\n            case 'stroke-opacity':\n            case 'fill-opacity':\n            case 'opacity':\n              elem.opacity = parseFloat(value);\n              break;\n            case 'fill':\n            case 'stroke':\n              if (/url\\(\\#.*\\)/i.test(value)) {\n                elem[key] = this.getById(\n                  value.replace(/url\\(\\#(.*)\\)/i, '$1'));\n              } else {\n                elem[key] = (value === 'none') ? 'transparent' : value;\n              }\n              break;\n            case 'id':\n              elem.id = value;\n              break;\n            case 'class':\n              elem.classList = value.split(' ');\n              break;\n          }\n        }\n\n        return elem;\n\n      },\n\n      /**\n       * Read any number of SVG node types and create Two equivalents of them.\n       */\n      read: {\n\n        svg: function() {\n          return Two.Utils.read.g.apply(this, arguments);\n        },\n\n        g: function(node) {\n\n          var group = new Two.Group();\n\n          // Switched up order to inherit more specific styles\n          Two.Utils.applySvgAttributes.call(this, node, group);\n\n          for (var i = 0, l = node.childNodes.length; i < l; i++) {\n            var n = node.childNodes[i];\n            var tag = n.nodeName;\n            if (!tag) return;\n\n            var tagName = tag.replace(/svg\\:/ig, '').toLowerCase();\n\n            if (tagName in Two.Utils.read) {\n              var o = Two.Utils.read[tagName].call(group, n);\n              group.add(o);\n            }\n          }\n\n          return group;\n\n        },\n\n        polygon: function(node, open) {\n\n          var points = node.getAttribute('points');\n\n          var verts = [];\n          points.replace(/(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g, function(match, p1, p2) {\n            verts.push(new Two.Anchor(parseFloat(p1), parseFloat(p2)));\n          });\n\n          var poly = new Two.Path(verts, !open).noStroke();\n          poly.fill = 'black';\n\n          return Two.Utils.applySvgAttributes.call(this, node, poly);\n\n        },\n\n        polyline: function(node) {\n          return Two.Utils.read.polygon.call(this, node, true);\n        },\n\n        path: function(node) {\n\n          var path = node.getAttribute('d');\n\n          // Create a Two.Path from the paths.\n\n          var coord = new Two.Anchor();\n          var control, coords;\n          var closed = false, relative = false;\n          var commands = path.match(/[a-df-z][^a-df-z]*/ig);\n          var last = commands.length - 1;\n\n          // Split up polybeziers\n\n          _.each(commands.slice(0), function(command, i) {\n\n            var type = command[0];\n            var lower = type.toLowerCase();\n            var items = command.slice(1).trim().split(/[\\s,]+|(?=\\s?[+\\-])/);\n            var pre, post, result = [], bin;\n\n            if (i <= 0) {\n              commands = [];\n            }\n\n            switch (lower) {\n              case 'h':\n              case 'v':\n                if (items.length > 1) {\n                  bin = 1;\n                }\n                break;\n              case 'm':\n              case 'l':\n              case 't':\n                if (items.length > 2) {\n                  bin = 2;\n                }\n                break;\n              case 's':\n              case 'q':\n                if (items.length > 4) {\n                  bin = 4;\n                }\n                break;\n              case 'c':\n                if (items.length > 6) {\n                  bin = 6;\n                }\n                break;\n              case 'a':\n                // TODO: Handle Ellipses\n                break;\n            }\n\n            if (bin) {\n\n              for (var j = 0, l = items.length, times = 0; j < l; j+=bin) {\n\n                var ct = type;\n                if (times > 0) {\n\n                  switch (type) {\n                    case 'm':\n                      ct = 'l';\n                      break;\n                    case 'M':\n                      ct = 'L';\n                      break;\n                  }\n\n                }\n\n                result.push([ct].concat(items.slice(j, j + bin)).join(' '));\n                times++;\n\n              }\n\n              commands = Array.prototype.concat.apply(commands, result);\n\n            } else {\n\n              commands.push(command);\n\n            }\n\n          });\n\n          // Create the vertices for our Two.Path\n\n          var points = [];\n          _.each(commands, function(command, i) {\n\n            var result, x, y;\n            var type = command[0];\n            var lower = type.toLowerCase();\n\n            coords = command.slice(1).trim();\n            coords = coords.replace(/(-?\\d+(?:\\.\\d*)?)[eE]([+\\-]?\\d+)/g, function(match, n1, n2) {\n              return parseFloat(n1) * pow(10, n2);\n            });\n            coords = coords.split(/[\\s,]+|(?=\\s?[+\\-])/);\n            relative = type === lower;\n\n            var x1, y1, x2, y2, x3, y3, x4, y4, reflection;\n\n            switch (lower) {\n\n              case 'z':\n                if (i >= last) {\n                  closed = true;\n                } else {\n                  x = coord.x;\n                  y = coord.y;\n                  result = new Two.Anchor(\n                    x, y,\n                    undefined, undefined,\n                    undefined, undefined,\n                    Two.Commands.close\n                  );\n                }\n                break;\n\n              case 'm':\n              case 'l':\n\n                x = parseFloat(coords[0]);\n                y = parseFloat(coords[1]);\n\n                result = new Two.Anchor(\n                  x, y,\n                  undefined, undefined,\n                  undefined, undefined,\n                  lower === 'm' ? Two.Commands.move : Two.Commands.line\n                );\n\n                if (relative) {\n                  result.addSelf(coord);\n                }\n\n                // result.controls.left.copy(result);\n                // result.controls.right.copy(result);\n\n                coord = result;\n                break;\n\n              case 'h':\n              case 'v':\n\n                var a = lower === 'h' ? 'x' : 'y';\n                var b = a === 'x' ? 'y' : 'x';\n\n                result = new Two.Anchor(\n                  undefined, undefined,\n                  undefined, undefined,\n                  undefined, undefined,\n                  Two.Commands.line\n                );\n                result[a] = parseFloat(coords[0]);\n                result[b] = coord[b];\n\n                if (relative) {\n                  result[a] += coord[a];\n                }\n\n                // result.controls.left.copy(result);\n                // result.controls.right.copy(result);\n\n                coord = result;\n                break;\n\n              case 'c':\n              case 's':\n\n                x1 = coord.x;\n                y1 = coord.y;\n\n                if (!control) {\n                  control = new Two.Vector();//.copy(coord);\n                }\n\n                if (lower === 'c') {\n\n                  x2 = parseFloat(coords[0]);\n                  y2 = parseFloat(coords[1]);\n                  x3 = parseFloat(coords[2]);\n                  y3 = parseFloat(coords[3]);\n                  x4 = parseFloat(coords[4]);\n                  y4 = parseFloat(coords[5]);\n\n                } else {\n\n                  // Calculate reflection control point for proper x2, y2\n                  // inclusion.\n\n                  reflection = getReflection(coord, control, relative);\n\n                  x2 = reflection.x;\n                  y2 = reflection.y;\n                  x3 = parseFloat(coords[0]);\n                  y3 = parseFloat(coords[1]);\n                  x4 = parseFloat(coords[2]);\n                  y4 = parseFloat(coords[3]);\n\n                }\n\n                if (relative) {\n                  x2 += x1;\n                  y2 += y1;\n                  x3 += x1;\n                  y3 += y1;\n                  x4 += x1;\n                  y4 += y1;\n                }\n\n                if (!_.isObject(coord.controls)) {\n                  Two.Anchor.AppendCurveProperties(coord);\n                }\n\n                coord.controls.right.set(x2 - coord.x, y2 - coord.y);\n                result = new Two.Anchor(\n                  x4, y4,\n                  x3 - x4, y3 - y4,\n                  undefined, undefined,\n                  Two.Commands.curve\n                );\n\n                coord = result;\n                control = result.controls.left;\n\n                break;\n\n              case 't':\n              case 'q':\n\n                x1 = coord.x;\n                y1 = coord.y;\n\n                if (!control) {\n                  control = new Two.Vector();//.copy(coord);\n                }\n\n                if (control.isZero()) {\n                  x2 = x1;\n                  y2 = y1;\n                } else {\n                  x2 = control.x;\n                  y1 = control.y;\n                }\n\n                if (lower === 'q') {\n\n                  x3 = parseFloat(coords[0]);\n                  y3 = parseFloat(coords[1]);\n                  x4 = parseFloat(coords[1]);\n                  y4 = parseFloat(coords[2]);\n\n                } else {\n\n                  reflection = getReflection(coord, control, relative);\n\n                  x3 = reflection.x;\n                  y3 = reflection.y;\n                  x4 = parseFloat(coords[0]);\n                  y4 = parseFloat(coords[1]);\n\n                }\n\n                if (relative) {\n                  x2 += x1;\n                  y2 += y1;\n                  x3 += x1;\n                  y3 += y1;\n                  x4 += x1;\n                  y4 += y1;\n                }\n\n                if (!_.isObject(coord.controls)) {\n                  Two.Anchor.AppendCurveProperties(coord);\n                }\n\n                coord.controls.right.set(x2 - coord.x, y2 - coord.y);\n                result = new Two.Anchor(\n                  x4, y4,\n                  x3 - x4, y3 - y4,\n                  undefined, undefined,\n                  Two.Commands.curve\n                );\n\n                coord = result;\n                control = result.controls.left;\n\n                break;\n\n              case 'a':\n\n                // throw new Two.Utils.Error('not yet able to interpret Elliptical Arcs.');\n                x1 = coord.x;\n                y1 = coord.y;\n\n                var rx = parseFloat(coords[0]);\n                var ry = parseFloat(coords[1]);\n                var xAxisRotation = parseFloat(coords[2]) * Math.PI / 180;\n                var largeArcFlag = parseFloat(coords[3]);\n                var sweepFlag = parseFloat(coords[4]);\n\n                x4 = parseFloat(coords[5]);\n                y4 = parseFloat(coords[6]);\n\n                if (relative) {\n                  x4 += x1;\n                  y4 += y1;\n                }\n\n                // http://www.w3.org/TR/SVG/implnote.html#ArcConversionEndpointToCenter\n\n                // Calculate midpoint mx my\n                var mx = (x4 - x1) / 2;\n                var my = (y4 - y1) / 2;\n\n                // Calculate x1' y1' F.6.5.1\n                var _x = mx * Math.cos(xAxisRotation) + my * Math.sin(xAxisRotation);\n                var _y = - mx * Math.sin(xAxisRotation) + my * Math.cos(xAxisRotation);\n\n                var rx2 = rx * rx;\n                var ry2 = ry * ry;\n                var _x2 = _x * _x;\n                var _y2 = _y * _y;\n\n                // adjust radii\n                var l = _x2 / rx2 + _y2 / ry2;\n                if (l > 1) {\n                  rx *= Math.sqrt(l);\n                  ry *= Math.sqrt(l);\n                }\n\n                var amp = Math.sqrt((rx2 * ry2 - rx2 * _y2 - ry2 * _x2) / (rx2 * _y2 + ry2 * _x2));\n\n                if (_.isNaN(amp)) {\n                  amp = 0;\n                } else if (largeArcFlag != sweepFlag && amp > 0) {\n                  amp *= -1;\n                }\n\n                // Calculate cx' cy' F.6.5.2\n                var _cx = amp * rx * _y / ry;\n                var _cy = - amp * ry * _x / rx;\n\n                // Calculate cx cy F.6.5.3\n                var cx = _cx * Math.cos(xAxisRotation) - _cy * Math.sin(xAxisRotation) + (x1 + x4) / 2;\n                var cy = _cx * Math.sin(xAxisRotation) + _cy * Math.cos(xAxisRotation) + (y1 + y4) / 2;\n\n                // vector magnitude\n                var m = function(v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); }\n                // ratio between two vectors\n                var r = function(u, v) { return (u[0] * v[0] + u[1] * v[1]) / (m(u) * m(v)) }\n                // angle between two vectors\n                var a = function(u, v) { return (u[0] * v[1] < u[1] * v[0] ? - 1 : 1) * Math.acos(r(u,v)); }\n\n                // Calculate theta1 and delta theta F.6.5.4 + F.6.5.5\n                var t1 = a([1, 0], [(_x - _cx) / rx, (_y - _cy) / ry]);\n                var u = [(_x - _cx) / rx, (_y - _cy) / ry];\n                var v = [( - _x - _cx) / rx, ( - _y - _cy) / ry];\n                var dt = a(u, v);\n\n                if (r(u, v) <= -1) dt = Math.PI;\n                if (r(u, v) >= 1) dt = 0;\n\n                // F.6.5.6\n                if (largeArcFlag)  {\n                  dt = mod(dt, Math.PI * 2);\n                }\n\n                if (sweepFlag && dt > 0) {\n                  dt -= Math.PI * 2;\n                }\n\n                var length = Two.Resolution;\n\n                // Save a projection of our rotation and translation to apply\n                // to the set of points.\n                var projection = new Two.Matrix()\n                  .translate(cx, cy)\n                  .rotate(xAxisRotation);\n\n                // Create a resulting array of Two.Anchor's to export to the\n                // the path.\n                result = _.map(_.range(length), function(i) {\n                  var pct = 1 - (i / (length - 1));\n                  var theta = pct * dt + t1;\n                  var x = rx * Math.cos(theta);\n                  var y = ry * Math.sin(theta);\n                  var projected = projection.multiply(x, y, 1);\n                  return new Two.Anchor(projected.x, projected.y, false, false, false, false, Two.Commands.line);;\n                });\n\n                result.push(new Two.Anchor(x4, y4, false, false, false, false, Two.Commands.line));\n\n                coord = result[result.length - 1];\n                control = coord.controls.left;\n\n                break;\n\n            }\n\n            if (result) {\n              if (_.isArray(result)) {\n                points = points.concat(result);\n              } else {\n                points.push(result);\n              }\n            }\n\n          });\n\n          if (points.length <= 1) {\n            return;\n          }\n\n          var path = new Two.Path(points, closed, undefined, true).noStroke();\n          path.fill = 'black';\n\n          var rect = path.getBoundingClientRect(true);\n\n          // Center objects to stay consistent\n          // with the rest of the Two.js API.\n          rect.centroid = {\n            x: rect.left + rect.width / 2,\n            y: rect.top + rect.height / 2\n          };\n\n          _.each(path.vertices, function(v) {\n            v.subSelf(rect.centroid);\n          });\n\n          path.translation.addSelf(rect.centroid);\n\n          return Two.Utils.applySvgAttributes.call(this, node, path);\n\n        },\n\n        circle: function(node) {\n\n          var x = parseFloat(node.getAttribute('cx'));\n          var y = parseFloat(node.getAttribute('cy'));\n          var r = parseFloat(node.getAttribute('r'));\n\n          var circle = new Two.Circle(x, y, r).noStroke();\n          circle.fill = 'black';\n\n          return Two.Utils.applySvgAttributes.call(this, node, circle);\n\n        },\n\n        ellipse: function(node) {\n\n          var x = parseFloat(node.getAttribute('cx'));\n          var y = parseFloat(node.getAttribute('cy'));\n          var width = parseFloat(node.getAttribute('rx'));\n          var height = parseFloat(node.getAttribute('ry'));\n\n          var ellipse = new Two.Ellipse(x, y, width, height).noStroke();\n          ellipse.fill = 'black';\n\n          return Two.Utils.applySvgAttributes.call(this, node, ellipse);\n\n        },\n\n        rect: function(node) {\n\n          var x = parseFloat(node.getAttribute('x')) || 0;\n          var y = parseFloat(node.getAttribute('y')) || 0;\n          var width = parseFloat(node.getAttribute('width'));\n          var height = parseFloat(node.getAttribute('height'));\n\n          var w2 = width / 2;\n          var h2 = height / 2;\n\n          var rect = new Two.Rectangle(x + w2, y + h2, width, height)\n            .noStroke();\n          rect.fill = 'black';\n\n          return Two.Utils.applySvgAttributes.call(this, node, rect);\n\n        },\n\n        line: function(node) {\n\n          var x1 = parseFloat(node.getAttribute('x1'));\n          var y1 = parseFloat(node.getAttribute('y1'));\n          var x2 = parseFloat(node.getAttribute('x2'));\n          var y2 = parseFloat(node.getAttribute('y2'));\n\n          var line = new Two.Line(x1, y1, x2, y2).noFill();\n\n          return Two.Utils.applySvgAttributes.call(this, node, line);\n\n        },\n\n        lineargradient: function(node) {\n\n          var x1 = parseFloat(node.getAttribute('x1'));\n          var y1 = parseFloat(node.getAttribute('y1'));\n          var x2 = parseFloat(node.getAttribute('x2'));\n          var y2 = parseFloat(node.getAttribute('y2'));\n\n          var ox = (x2 + x1) / 2;\n          var oy = (y2 + y1) / 2;\n\n          var stops = [];\n          for (var i = 0; i < node.children.length; i++) {\n\n            var child = node.children[i];\n\n            var offset = parseFloat(child.getAttribute('offset'));\n            var color = child.getAttribute('stop-color');\n            var opacity = child.getAttribute('stop-opacity');\n            var style = child.getAttribute('style');\n\n            if (_.isNull(color)) {\n              var matches = style ? style.match(/stop\\-color\\:\\s?([\\#a-fA-F0-9]*)/) : false;\n              color = matches && matches.length > 1 ? matches[1] : undefined;\n            }\n\n            if (_.isNull(opacity)) {\n              var matches = style ? style.match(/stop\\-opacity\\:\\s?([0-9\\.\\-]*)/) : false;\n              opacity = matches && matches.length > 1 ? parseFloat(matches[1]) : 1;\n            }\n\n            stops.push(new Two.Gradient.Stop(offset, color, opacity));\n\n          }\n\n          var gradient = new Two.LinearGradient(x1 - ox, y1 - oy, x2 - ox,\n            y2 - oy, stops);\n\n          return Two.Utils.applySvgAttributes.call(this, node, gradient);\n\n        },\n\n        radialgradient: function(node) {\n\n          var cx = parseFloat(node.getAttribute('cx')) || 0;\n          var cy = parseFloat(node.getAttribute('cy')) || 0;\n          var r = parseFloat(node.getAttribute('r'));\n\n          var fx = parseFloat(node.getAttribute('fx'));\n          var fy = parseFloat(node.getAttribute('fy'));\n\n          if (_.isNaN(fx)) {\n            fx = cx;\n          }\n\n          if (_.isNaN(fy)) {\n            fy = cy;\n          }\n\n          var ox = Math.abs(cx + fx) / 2;\n          var oy = Math.abs(cy + fy) / 2;\n\n          var stops = [];\n          for (var i = 0; i < node.children.length; i++) {\n\n            var child = node.children[i];\n\n            var offset = parseFloat(child.getAttribute('offset'));\n            var color = child.getAttribute('stop-color');\n            var opacity = child.getAttribute('stop-opacity');\n            var style = child.getAttribute('style');\n\n            if (_.isNull(color)) {\n              var matches = style ? style.match(/stop\\-color\\:\\s?([\\#a-fA-F0-9]*)/) : false;\n              color = matches && matches.length > 1 ? matches[1] : undefined;\n            }\n\n            if (_.isNull(opacity)) {\n              var matches = style ? style.match(/stop\\-opacity\\:\\s?([0-9\\.\\-]*)/) : false;\n              opacity = matches && matches.length > 1 ? parseFloat(matches[1]) : 1;\n            }\n\n            stops.push(new Two.Gradient.Stop(offset, color, opacity));\n\n          }\n\n          var gradient = new Two.RadialGradient(cx - ox, cy - oy, r,\n            stops, fx - ox, fy - oy);\n\n          return Two.Utils.applySvgAttributes.call(this, node, gradient);\n\n        }\n\n      },\n\n      /**\n       * Given 2 points (a, b) and corresponding control point for each\n       * return an array of points that represent points plotted along\n       * the curve. Number points determined by limit.\n       */\n      subdivide: function(x1, y1, x2, y2, x3, y3, x4, y4, limit) {\n\n        limit = limit || Two.Utils.Curve.RecursionLimit;\n        var amount = limit + 1;\n\n        // TODO: Issue 73\n        // Don't recurse if the end points are identical\n        if (x1 === x4 && y1 === y4) {\n          return [new Two.Anchor(x4, y4)];\n        }\n\n        return _.map(_.range(0, amount), function(i) {\n\n          var t = i / amount;\n          var x = getPointOnCubicBezier(t, x1, x2, x3, x4);\n          var y = getPointOnCubicBezier(t, y1, y2, y3, y4);\n\n          return new Two.Anchor(x, y);\n\n        });\n\n      },\n\n      getPointOnCubicBezier: function(t, a, b, c, d) {\n        var k = 1 - t;\n        return (k * k * k * a) + (3 * k * k * t * b) + (3 * k * t * t * c) +\n           (t * t * t * d);\n      },\n\n      /**\n       * Given 2 points (a, b) and corresponding control point for each\n       * return a float that represents the length of the curve using\n       * Gauss-Legendre algorithm. Limit iterations of calculation by `limit`.\n       */\n      getCurveLength: function(x1, y1, x2, y2, x3, y3, x4, y4, limit) {\n\n        // TODO: Better / fuzzier equality check\n        // Linear calculation\n        if (x1 === x2 && y1 === y2 && x3 === x4 && y3 === y4) {\n          var dx = x4 - x1;\n          var dy = y4 - y1;\n          return sqrt(dx * dx + dy * dy);\n        }\n\n        // Calculate the coefficients of a Bezier derivative.\n        var ax = 9 * (x2 - x3) + 3 * (x4 - x1),\n          bx = 6 * (x1 + x3) - 12 * x2,\n          cx = 3 * (x2 - x1),\n\n          ay = 9 * (y2 - y3) + 3 * (y4 - y1),\n          by = 6 * (y1 + y3) - 12 * y2,\n          cy = 3 * (y2 - y1);\n\n        var integrand = function(t) {\n          // Calculate quadratic equations of derivatives for x and y\n          var dx = (ax * t + bx) * t + cx,\n            dy = (ay * t + by) * t + cy;\n          return sqrt(dx * dx + dy * dy);\n        };\n\n        return integrate(\n          integrand, 0, 1, limit || Two.Utils.Curve.RecursionLimit\n        );\n\n      },\n\n      /**\n       * Integration for `getCurveLength` calculations. Referenced from\n       * Paper.js: https://github.com/paperjs/paper.js/blob/master/src/util/Numerical.js#L101\n       */\n      integrate: function(f, a, b, n) {\n        var x = Two.Utils.Curve.abscissas[n - 2],\n          w = Two.Utils.Curve.weights[n - 2],\n          A = 0.5 * (b - a),\n          B = A + a,\n          i = 0,\n          m = (n + 1) >> 1,\n          sum = n & 1 ? w[i++] * f(B) : 0; // Handle odd n\n        while (i < m) {\n          var Ax = A * x[i];\n          sum += w[i++] * (f(B + Ax) + f(B - Ax));\n        }\n        return A * sum;\n      },\n\n      /**\n       * Creates a set of points that have u, v values for anchor positions\n       */\n      getCurveFromPoints: function(points, closed) {\n\n        var l = points.length, last = l - 1;\n\n        for (var i = 0; i < l; i++) {\n\n          var point = points[i];\n\n          if (!_.isObject(point.controls)) {\n            Two.Anchor.AppendCurveProperties(point);\n          }\n\n          var prev = closed ? mod(i - 1, l) : max(i - 1, 0);\n          var next = closed ? mod(i + 1, l) : min(i + 1, last);\n\n          var a = points[prev];\n          var b = point;\n          var c = points[next];\n          getControlPoints(a, b, c);\n\n          b._command = i === 0 ? Two.Commands.move : Two.Commands.curve;\n\n          b.controls.left.x = _.isNumber(b.controls.left.x) ? b.controls.left.x : b.x;\n          b.controls.left.y = _.isNumber(b.controls.left.y) ? b.controls.left.y : b.y;\n\n          b.controls.right.x = _.isNumber(b.controls.right.x) ? b.controls.right.x : b.x;\n          b.controls.right.y = _.isNumber(b.controls.right.y) ? b.controls.right.y : b.y;\n\n        }\n\n      },\n\n      /**\n       * Given three coordinates return the control points for the middle, b,\n       * vertex.\n       */\n      getControlPoints: function(a, b, c) {\n\n        var a1 = angleBetween(a, b);\n        var a2 = angleBetween(c, b);\n\n        var d1 = distanceBetween(a, b);\n        var d2 = distanceBetween(c, b);\n\n        var mid = (a1 + a2) / 2;\n\n        // So we know which angle corresponds to which side.\n\n        b.u = _.isObject(b.controls.left) ? b.controls.left : new Two.Vector(0, 0);\n        b.v = _.isObject(b.controls.right) ? b.controls.right : new Two.Vector(0, 0);\n\n        // TODO: Issue 73\n        if (d1 < 0.0001 || d2 < 0.0001) {\n          if (!b._relative) {\n            b.controls.left.copy(b);\n            b.controls.right.copy(b);\n          }\n          return b;\n        }\n\n        d1 *= 0.33; // Why 0.33?\n        d2 *= 0.33;\n\n        if (a2 < a1) {\n          mid += HALF_PI;\n        } else {\n          mid -= HALF_PI;\n        }\n\n        b.controls.left.x = cos(mid) * d1;\n        b.controls.left.y = sin(mid) * d1;\n\n        mid -= PI;\n\n        b.controls.right.x = cos(mid) * d2;\n        b.controls.right.y = sin(mid) * d2;\n\n        if (!b._relative) {\n          b.controls.left.x += b.x;\n          b.controls.left.y += b.y;\n          b.controls.right.x += b.x;\n          b.controls.right.y += b.y;\n        }\n\n        return b;\n\n      },\n\n      /**\n       * Get the reflection of a point \"b\" about point \"a\". Where \"a\" is in\n       * absolute space and \"b\" is relative to \"a\".\n       *\n       * http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes\n       */\n      getReflection: function(a, b, relative) {\n\n        return new Two.Vector(\n          2 * a.x - (b.x + a.x) - (relative ? a.x : 0),\n          2 * a.y - (b.y + a.y) - (relative ? a.y : 0)\n        );\n\n      },\n\n      getAnchorsFromArcData: function(center, xAxisRotation, rx, ry, ts, td, ccw) {\n\n        var matrix = new Two.Matrix()\n          .translate(center.x, center.y)\n          .rotate(xAxisRotation);\n\n        var l = Two.Resolution;\n\n        return _.map(_.range(l), function(i) {\n\n          var pct = (i + 1) / l;\n          if (!!ccw) {\n            pct = 1 - pct;\n          }\n\n          var theta = pct * td + ts;\n          var x = rx * Math.cos(theta);\n          var y = ry * Math.sin(theta);\n\n          // x += center.x;\n          // y += center.y;\n\n          var anchor = new Two.Anchor(x, y);\n          Two.Anchor.AppendCurveProperties(anchor);\n          anchor.command = Two.Commands.line;\n\n          // TODO: Calculate control points here...\n\n          return anchor;\n\n        });\n\n      },\n\n      ratioBetween: function(A, B) {\n\n        return (A.x * B.x + A.y * B.y) / (A.length() * B.length());\n\n      },\n\n      angleBetween: function(A, B) {\n\n        var dx, dy;\n\n        if (arguments.length >= 4) {\n\n          dx = arguments[0] - arguments[2];\n          dy = arguments[1] - arguments[3];\n\n          return atan2(dy, dx);\n\n        }\n\n        dx = A.x - B.x;\n        dy = A.y - B.y;\n\n        return atan2(dy, dx);\n\n      },\n\n      distanceBetweenSquared: function(p1, p2) {\n\n        var dx = p1.x - p2.x;\n        var dy = p1.y - p2.y;\n\n        return dx * dx + dy * dy;\n\n      },\n\n      distanceBetween: function(p1, p2) {\n\n        return sqrt(distanceBetweenSquared(p1, p2));\n\n      },\n\n      lerp: function(a, b, t) {\n        return t * (b - a) + a;\n      },\n\n      // A pretty fast toFixed(3) alternative\n      // See http://jsperf.com/parsefloat-tofixed-vs-math-round/18\n      toFixed: function(v) {\n        return Math.floor(v * 1000) / 1000;\n      },\n\n      mod: function(v, l) {\n\n        while (v < 0) {\n          v += l;\n        }\n\n        return v % l;\n\n      },\n\n      /**\n       * Array like collection that triggers inserted and removed events\n       * removed : pop / shift / splice\n       * inserted : push / unshift / splice (with > 2 arguments)\n       */\n      Collection: function() {\n\n        Array.call(this);\n\n        if (arguments.length > 1) {\n          Array.prototype.push.apply(this, arguments);\n        } else if (arguments[0] && Array.isArray(arguments[0])) {\n          Array.prototype.push.apply(this, arguments[0]);\n        }\n\n      },\n\n      // Custom Error Throwing for Two.js\n\n      Error: function(message) {\n        this.name = 'two.js';\n        this.message = message;\n      },\n\n      Events: {\n\n        on: function(name, callback) {\n\n          this._events || (this._events = {});\n          var list = this._events[name] || (this._events[name] = []);\n\n          list.push(callback);\n\n          return this;\n\n        },\n\n        off: function(name, callback) {\n\n          if (!this._events) {\n            return this;\n          }\n          if (!name && !callback) {\n            this._events = {};\n            return this;\n          }\n\n          var names = name ? [name] : _.keys(this._events);\n          for (var i = 0, l = names.length; i < l; i++) {\n\n            var name = names[i];\n            var list = this._events[name];\n\n            if (!!list) {\n              var events = [];\n              if (callback) {\n                for (var j = 0, k = list.length; j < k; j++) {\n                  var ev = list[j];\n                  ev = ev.callback ? ev.callback : ev;\n                  if (callback && callback !== ev) {\n                    events.push(ev);\n                  }\n                }\n              }\n              this._events[name] = events;\n            }\n          }\n\n          return this;\n        },\n\n        trigger: function(name) {\n          if (!this._events) return this;\n          var args = slice.call(arguments, 1);\n          var events = this._events[name];\n          if (events) trigger(this, events, args);\n          return this;\n        },\n\n        listen: function (obj, name, callback) {\n\n          var bound = this;\n\n          if (obj) {\n            var ev = function () {\n              callback.apply(bound, arguments);\n            };\n\n            // add references about the object that assigned this listener\n            ev.obj = obj;\n            ev.name = name;\n            ev.callback = callback;\n\n            obj.on(name, ev);\n          }\n\n          return this;\n\n        },\n\n        ignore: function (obj, name, callback) {\n\n          obj.off(name, callback);\n\n          return this;\n\n        }\n\n      }\n\n    })\n\n  });\n\n  Two.Utils.Events.bind = Two.Utils.Events.on;\n  Two.Utils.Events.unbind = Two.Utils.Events.off;\n\n  var trigger = function(obj, events, args) {\n    var method;\n    switch (args.length) {\n    case 0:\n      method = function(i) {\n        events[i].call(obj, args[0]);\n      };\n      break;\n    case 1:\n      method = function(i) {\n        events[i].call(obj, args[0], args[1]);\n      };\n      break;\n    case 2:\n      method = function(i) {\n        events[i].call(obj, args[0], args[1], args[2]);\n      };\n      break;\n    case 3:\n      method = function(i) {\n        events[i].call(obj, args[0], args[1], args[2], args[3]);\n      };\n      break;\n    default:\n      method = function(i) {\n        events[i].apply(obj, args);\n      };\n    }\n    for (var i = 0; i < events.length; i++) {\n      method(i);\n    }\n  };\n\n  Two.Utils.Error.prototype = new Error();\n  Two.Utils.Error.prototype.constructor = Two.Utils.Error;\n\n  Two.Utils.Collection.prototype = new Array();\n  Two.Utils.Collection.prototype.constructor = Two.Utils.Collection;\n\n  _.extend(Two.Utils.Collection.prototype, Two.Utils.Events, {\n\n    pop: function() {\n      var popped = Array.prototype.pop.apply(this, arguments);\n      this.trigger(Two.Events.remove, [popped]);\n      return popped;\n    },\n\n    shift: function() {\n      var shifted = Array.prototype.shift.apply(this, arguments);\n      this.trigger(Two.Events.remove, [shifted]);\n      return shifted;\n    },\n\n    push: function() {\n      var pushed = Array.prototype.push.apply(this, arguments);\n      this.trigger(Two.Events.insert, arguments);\n      return pushed;\n    },\n\n    unshift: function() {\n      var unshifted = Array.prototype.unshift.apply(this, arguments);\n      this.trigger(Two.Events.insert, arguments);\n      return unshifted;\n    },\n\n    splice: function() {\n      var spliced = Array.prototype.splice.apply(this, arguments);\n      var inserted;\n\n      this.trigger(Two.Events.remove, spliced);\n\n      if (arguments.length > 2) {\n        inserted = this.slice(arguments[0], arguments[0] + arguments.length - 2);\n        this.trigger(Two.Events.insert, inserted);\n        this.trigger(Two.Events.order);\n      }\n      return spliced;\n    },\n\n    sort: function() {\n      Array.prototype.sort.apply(this, arguments);\n      this.trigger(Two.Events.order);\n      return this;\n    },\n\n    reverse: function() {\n      Array.prototype.reverse.apply(this, arguments);\n      this.trigger(Two.Events.order);\n      return this;\n    }\n\n  });\n\n  // Localize utils\n\n  var distanceBetween = Two.Utils.distanceBetween,\n    getAnchorsFromArcData = Two.Utils.getAnchorsFromArcData,\n    distanceBetweenSquared = Two.Utils.distanceBetweenSquared,\n    ratioBetween = Two.Utils.ratioBetween,\n    angleBetween = Two.Utils.angleBetween,\n    getControlPoints = Two.Utils.getControlPoints,\n    getCurveFromPoints = Two.Utils.getCurveFromPoints,\n    solveSegmentIntersection = Two.Utils.solveSegmentIntersection,\n    decoupleShapes = Two.Utils.decoupleShapes,\n    mod = Two.Utils.mod,\n    getBackingStoreRatio = Two.Utils.getBackingStoreRatio,\n    getPointOnCubicBezier = Two.Utils.getPointOnCubicBezier,\n    getCurveLength = Two.Utils.getCurveLength,\n    integrate = Two.Utils.integrate,\n    getReflection = Two.Utils.getReflection;\n\n  _.extend(Two.prototype, Two.Utils.Events, {\n\n    appendTo: function(elem) {\n\n      elem.appendChild(this.renderer.domElement);\n      return this;\n\n    },\n\n    play: function() {\n\n      Two.Utils.setPlaying.call(this, true);\n      return this.trigger(Two.Events.play);\n\n    },\n\n    pause: function() {\n\n      this.playing = false;\n      return this.trigger(Two.Events.pause);\n\n    },\n\n    /**\n     * Update positions and calculations in one pass before rendering.\n     */\n    update: function() {\n\n      var animated = !!this._lastFrame;\n      var now = perf.now();\n\n      this.frameCount++;\n\n      if (animated) {\n        this.timeDelta = parseFloat((now - this._lastFrame).toFixed(3));\n      }\n      this._lastFrame = now;\n\n      var width = this.width;\n      var height = this.height;\n      var renderer = this.renderer;\n\n      // Update width / height for the renderer\n      if (width !== renderer.width || height !== renderer.height) {\n        renderer.setSize(width, height, this.ratio);\n      }\n\n      this.trigger(Two.Events.update, this.frameCount, this.timeDelta);\n\n      return this.render();\n\n    },\n\n    /**\n     * Render all drawable - visible objects of the scene.\n     */\n    render: function() {\n\n      this.renderer.render();\n      return this.trigger(Two.Events.render, this.frameCount);\n\n    },\n\n    /**\n     * Convenience Methods\n     */\n\n    add: function(o) {\n\n      var objects = o;\n      if (!(objects instanceof Array)) {\n        objects = _.toArray(arguments);\n      }\n\n      this.scene.add(objects);\n      return this;\n\n    },\n\n    remove: function(o) {\n\n      var objects = o;\n      if (!(objects instanceof Array)) {\n        objects = _.toArray(arguments);\n      }\n\n      this.scene.remove(objects);\n\n      return this;\n\n    },\n\n    clear: function() {\n\n      this.scene.remove(_.toArray(this.scene.children));\n      return this;\n\n    },\n\n    makeLine: function(x1, y1, x2, y2) {\n\n      var line = new Two.Line(x1, y1, x2, y2);\n      this.scene.add(line);\n\n      return line;\n\n    },\n\n    makeRectangle: function(x, y, width, height) {\n\n      var rect = new Two.Rectangle(x, y, width, height);\n      this.scene.add(rect);\n\n      return rect;\n\n    },\n\n    makeRoundedRectangle: function(x, y, width, height, sides) {\n\n      var rect = new Two.RoundedRectangle(x, y, width, height, sides);\n      this.scene.add(rect);\n\n      return rect;\n\n    },\n\n    makeCircle: function(ox, oy, r) {\n\n      var circle = new Two.Circle(ox, oy, r);\n      this.scene.add(circle);\n\n      return circle;\n\n    },\n\n    makeEllipse: function(ox, oy, rx, ry) {\n\n      var ellipse = new Two.Ellipse(ox, oy, rx, ry);\n      this.scene.add(ellipse);\n\n      return ellipse;\n\n    },\n\n    makeStar: function(ox, oy, or, ir, sides) {\n\n      var star = new Two.Star(ox, oy, or, ir, sides);\n      this.scene.add(star);\n\n      return star;\n\n    },\n\n    makeCurve: function(p) {\n\n      var l = arguments.length, points = p;\n      if (!_.isArray(p)) {\n        points = [];\n        for (var i = 0; i < l; i+=2) {\n          var x = arguments[i];\n          if (!_.isNumber(x)) {\n            break;\n          }\n          var y = arguments[i + 1];\n          points.push(new Two.Anchor(x, y));\n        }\n      }\n\n      var last = arguments[l - 1];\n      var curve = new Two.Path(points, !(_.isBoolean(last) ? last : undefined), true);\n      var rect = curve.getBoundingClientRect();\n      curve.center().translation\n        .set(rect.left + rect.width / 2, rect.top + rect.height / 2);\n\n      this.scene.add(curve);\n\n      return curve;\n\n    },\n\n    makePolygon: function(ox, oy, r, sides) {\n\n      var poly = new Two.Polygon(ox, oy, r, sides);\n      this.scene.add(poly);\n\n      return poly;\n\n    },\n\n    /*\n    * Make an Arc Segment\n    */\n\n    makeArcSegment: function(ox, oy, ir, or, sa, ea, res) {\n      var arcSegment = new Two.ArcSegment(ox, oy, ir, or, sa, ea, res);\n      this.scene.add(arcSegment);\n      return arcSegment;\n    },\n\n    /**\n     * Convenience method to make and draw a Two.Path.\n     */\n    makePath: function(p) {\n\n      var l = arguments.length, points = p;\n      if (!_.isArray(p)) {\n        points = [];\n        for (var i = 0; i < l; i+=2) {\n          var x = arguments[i];\n          if (!_.isNumber(x)) {\n            break;\n          }\n          var y = arguments[i + 1];\n          points.push(new Two.Anchor(x, y));\n        }\n      }\n\n      var last = arguments[l - 1];\n      var path = new Two.Path(points, !(_.isBoolean(last) ? last : undefined));\n      var rect = path.getBoundingClientRect();\n      path.center().translation\n        .set(rect.left + rect.width / 2, rect.top + rect.height / 2);\n\n      this.scene.add(path);\n\n      return path;\n\n    },\n\n    /**\n     * Convenience method to make and add a Two.Text.\n     */\n    makeText: function(message, x, y, styles) {\n      var text = new Two.Text(message, x, y, styles);\n      this.add(text);\n      return text;\n    },\n\n    /**\n     * Convenience method to make and add a Two.LinearGradient.\n     */\n    makeLinearGradient: function(x1, y1, x2, y2 /* stops */) {\n\n      var stops = slice.call(arguments, 4);\n      var gradient = new Two.LinearGradient(x1, y1, x2, y2, stops);\n\n      this.add(gradient);\n\n      return gradient;\n\n    },\n\n    /**\n     * Convenience method to make and add a Two.RadialGradient.\n     */\n    makeRadialGradient: function(x1, y1, r /* stops */) {\n\n      var stops = slice.call(arguments, 3);\n      var gradient = new Two.RadialGradient(x1, y1, r, stops);\n\n      this.add(gradient);\n\n      return gradient;\n\n    },\n\n    makeSprite: function(path, x, y, cols, rows, frameRate, autostart) {\n\n      var sprite = new Two.Sprite(path, x, y, cols, rows, frameRate);\n      if (!!autostart) {\n        sprite.play();\n      }\n      this.add(sprite);\n\n      return sprite;\n\n    },\n\n    makeImageSequence: function(paths, x, y, frameRate, autostart) {\n\n      var imageSequence = new Two.ImageSequence(paths, x, y, frameRate);\n      if (!!autostart) {\n        imageSequence.play();\n      }\n      this.add(imageSequence);\n\n      return imageSequence;\n\n    },\n\n    makeTexture: function(path, callback) {\n\n      var texture = new Two.Texture(path, callback);\n      return texture;\n\n    },\n\n    makeGroup: function(o) {\n\n      var objects = o;\n      if (!(objects instanceof Array)) {\n        objects = _.toArray(arguments);\n      }\n\n      var group = new Two.Group();\n      this.scene.add(group);\n      group.add(objects);\n\n      return group;\n\n    },\n\n    /**\n     * Interpret an SVG Node and add it to this instance's scene. The\n     * distinction should be made that this doesn't `import` svg's, it solely\n     * interprets them into something compatible for Two.js — this is slightly\n     * different than a direct transcription.\n     *\n     * @param {Object} svgNode - The node to be parsed\n     * @param {Boolean} shallow - Don't create a top-most group but\n     *                                    append all contents directly\n     */\n    interpret: function(svgNode, shallow) {\n\n      var tag = svgNode.tagName.toLowerCase();\n\n      if (!(tag in Two.Utils.read)) {\n        return null;\n      }\n\n      var node = Two.Utils.read[tag].call(this, svgNode);\n\n      if (shallow && node instanceof Two.Group) {\n        this.add(node.children);\n      } else {\n        this.add(node);\n      }\n\n      return node;\n\n    },\n\n    /**\n     * Load an SVG file / text and interpret.\n     */\n    load: function(text, callback) {\n\n      var nodes = [], elem, i;\n\n      if (/.*\\.svg/ig.test(text)) {\n\n        Two.Utils.xhr(text, _.bind(function(data) {\n\n          dom.temp.innerHTML = data;\n          for (i = 0; i < dom.temp.children.length; i++) {\n            elem = dom.temp.children[i];\n            nodes.push(this.interpret(elem));\n          }\n\n          callback(nodes.length <= 1 ? nodes[0] : nodes,\n            dom.temp.children.length <= 1 ? dom.temp.children[0] : dom.temp.children);\n\n        }, this));\n\n        return this;\n\n      }\n\n      dom.temp.innerHTML = text;\n      for (i = 0; i < dom.temp.children.length; i++) {\n        elem = dom.temp.children[i];\n        nodes.push(this.interpret(elem));\n      }\n\n      callback(nodes.length <= 1 ? nodes[0] : nodes,\n        dom.temp.children.length <= 1 ? dom.temp.children[0] : dom.temp.children);\n\n      return this;\n\n    }\n\n  });\n\n  function fitToWindow() {\n\n    var wr = document.body.getBoundingClientRect();\n\n    var width = this.width = wr.width;\n    var height = this.height = wr.height;\n\n    this.renderer.setSize(width, height, this.ratio);\n    this.trigger(Two.Events.resize, width, height);\n\n  }\n\n  // Request Animation Frame\n\n  var raf = dom.getRequestAnimationFrame();\n\n  function loop() {\n\n    raf(loop);\n\n    for (var i = 0; i < Two.Instances.length; i++) {\n      var t = Two.Instances[i];\n      if (t.playing) {\n        t.update();\n      }\n    }\n\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define('two', [], function() {\n      return Two;\n    });\n  } else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Two;\n  }\n\n  return Two;\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var _ = Two.Utils;\n\n  var Registry = Two.Registry = function() {\n\n    this.map = {};\n\n  };\n\n  _.extend(Registry, {\n\n  });\n\n  _.extend(Registry.prototype, {\n\n    add: function(id, obj) {\n      this.map[id] = obj;\n      return this;\n    },\n\n    remove: function(id) {\n      delete this.map[id];\n      return this;\n    },\n\n    get: function(id) {\n      return this.map[id];\n    },\n\n    contains: function(id) {\n      return id in this.map;\n    }\n\n  });\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var _ = Two.Utils;\n\n  var Vector = Two.Vector = function(x, y) {\n\n    this.x = x || 0;\n    this.y = y || 0;\n\n  };\n\n  _.extend(Vector, {\n\n    zero: new Two.Vector()\n\n  });\n\n  _.extend(Vector.prototype, Two.Utils.Events, {\n\n    set: function(x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    copy: function(v) {\n      this.x = v.x;\n      this.y = v.y;\n      return this;\n    },\n\n    clear: function() {\n      this.x = 0;\n      this.y = 0;\n      return this;\n    },\n\n    clone: function() {\n      return new Vector(this.x, this.y);\n    },\n\n    add: function(v1, v2) {\n      this.x = v1.x + v2.x;\n      this.y = v1.y + v2.y;\n      return this;\n    },\n\n    addSelf: function(v) {\n      this.x += v.x;\n      this.y += v.y;\n      return this;\n    },\n\n    sub: function(v1, v2) {\n      this.x = v1.x - v2.x;\n      this.y = v1.y - v2.y;\n      return this;\n    },\n\n    subSelf: function(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n      return this;\n    },\n\n    multiplySelf: function(v) {\n      this.x *= v.x;\n      this.y *= v.y;\n      return this;\n    },\n\n    multiplyScalar: function(s) {\n      this.x *= s;\n      this.y *= s;\n      return this;\n    },\n\n    divideScalar: function(s) {\n      if (s) {\n        this.x /= s;\n        this.y /= s;\n      } else {\n        this.set(0, 0);\n      }\n      return this;\n    },\n\n    negate: function() {\n      return this.multiplyScalar(-1);\n    },\n\n    dot: function(v) {\n      return this.x * v.x + this.y * v.y;\n    },\n\n    lengthSquared: function() {\n      return this.x * this.x + this.y * this.y;\n    },\n\n    length: function() {\n      return Math.sqrt(this.lengthSquared());\n    },\n\n    normalize: function() {\n      return this.divideScalar(this.length());\n    },\n\n    distanceTo: function(v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    },\n\n    distanceToSquared: function(v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y;\n      return dx * dx + dy * dy;\n    },\n\n    setLength: function(l) {\n      return this.normalize().multiplyScalar(l);\n    },\n\n    equals: function(v, eps) {\n      eps = (typeof eps === 'undefined') ?  0.0001 : eps;\n      return (this.distanceTo(v) < eps);\n    },\n\n    lerp: function(v, t) {\n      var x = (v.x - this.x) * t + this.x;\n      var y = (v.y - this.y) * t + this.y;\n      return this.set(x, y);\n    },\n\n    isZero: function(eps) {\n      eps = (typeof eps === 'undefined') ?  0.0001 : eps;\n      return (this.length() < eps);\n    },\n\n    toString: function() {\n      return this.x + ', ' + this.y;\n    },\n\n    toObject: function() {\n      return { x: this.x, y: this.y };\n    },\n\n    rotate: function (radians) {\n      var cos = Math.cos(radians);\n      var sin = Math.sin(radians);\n      this.x = this.x * cos - this.y * sin;\n      this.y = this.x * sin + this.y * cos;\n      return this;\n    }\n\n  });\n\n  var BoundProto = {\n\n    set: function(x, y) {\n      this._x = x;\n      this._y = y;\n      return this.trigger(Two.Events.change);\n    },\n\n    copy: function(v) {\n      this._x = v.x;\n      this._y = v.y;\n      return this.trigger(Two.Events.change);\n    },\n\n    clear: function() {\n      this._x = 0;\n      this._y = 0;\n      return this.trigger(Two.Events.change);\n    },\n\n    clone: function() {\n      return new Vector(this._x, this._y);\n    },\n\n    add: function(v1, v2) {\n      this._x = v1.x + v2.x;\n      this._y = v1.y + v2.y;\n      return this.trigger(Two.Events.change);\n    },\n\n    addSelf: function(v) {\n      this._x += v.x;\n      this._y += v.y;\n      return this.trigger(Two.Events.change);\n    },\n\n    sub: function(v1, v2) {\n      this._x = v1.x - v2.x;\n      this._y = v1.y - v2.y;\n      return this.trigger(Two.Events.change);\n    },\n\n    subSelf: function(v) {\n      this._x -= v.x;\n      this._y -= v.y;\n      return this.trigger(Two.Events.change);\n    },\n\n    multiplySelf: function(v) {\n      this._x *= v.x;\n      this._y *= v.y;\n      return this.trigger(Two.Events.change);\n    },\n\n    multiplyScalar: function(s) {\n      this._x *= s;\n      this._y *= s;\n      return this.trigger(Two.Events.change);\n    },\n\n    divideScalar: function(s) {\n      if (s) {\n        this._x /= s;\n        this._y /= s;\n        return this.trigger(Two.Events.change);\n      }\n      return this.clear();\n    },\n\n    negate: function() {\n      return this.multiplyScalar(-1);\n    },\n\n    dot: function(v) {\n      return this._x * v.x + this._y * v.y;\n    },\n\n    lengthSquared: function() {\n      return this._x * this._x + this._y * this._y;\n    },\n\n    length: function() {\n      return Math.sqrt(this.lengthSquared());\n    },\n\n    normalize: function() {\n      return this.divideScalar(this.length());\n    },\n\n    distanceTo: function(v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    },\n\n    distanceToSquared: function(v) {\n      var dx = this._x - v.x,\n          dy = this._y - v.y;\n      return dx * dx + dy * dy;\n    },\n\n    setLength: function(l) {\n      return this.normalize().multiplyScalar(l);\n    },\n\n    equals: function(v, eps) {\n      eps = (typeof eps === 'undefined') ?  0.0001 : eps;\n      return (this.distanceTo(v) < eps);\n    },\n\n    lerp: function(v, t) {\n      var x = (v.x - this._x) * t + this._x;\n      var y = (v.y - this._y) * t + this._y;\n      return this.set(x, y);\n    },\n\n    isZero: function(eps) {\n      eps = (typeof eps === 'undefined') ?  0.0001 : eps;\n      return (this.length() < eps);\n    },\n\n    toString: function() {\n      return this._x + ', ' + this._y;\n    },\n\n    toObject: function() {\n      return { x: this._x, y: this._y };\n    },\n\n    rotate: function (radians) {\n      var cos = Math.cos(radians);\n      var sin = Math.sin(radians);\n      this._x = this._x * cos - this._y * sin;\n      this._y = this._x * sin + this._y * cos;\n      return this;\n    }\n\n  };\n\n  var xgs = {\n    enumerable: true,\n    get: function() {\n      return this._x;\n    },\n    set: function(v) {\n      this._x = v;\n      this.trigger(Two.Events.change, 'x');\n    }\n  };\n\n  var ygs = {\n    enumerable: true,\n    get: function() {\n      return this._y;\n    },\n    set: function(v) {\n      this._y = v;\n      this.trigger(Two.Events.change, 'y');\n    }\n  };\n\n  /**\n   * Override Backbone bind / on in order to add properly broadcasting.\n   * This allows Two.Vector to not broadcast events unless event listeners\n   * are explicity bound to it.\n   */\n\n  Two.Vector.prototype.bind = Two.Vector.prototype.on = function() {\n\n    if (!this._bound) {\n      this._x = this.x;\n      this._y = this.y;\n      Object.defineProperty(this, 'x', xgs);\n      Object.defineProperty(this, 'y', ygs);\n      _.extend(this, BoundProto);\n      this._bound = true; // Reserved for event initialization check\n    }\n\n    Two.Utils.Events.bind.apply(this, arguments);\n\n    return this;\n\n  };\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  // Localized variables\n  var commands = Two.Commands;\n  var _ = Two.Utils;\n\n  /**\n   * An object that holds 3 `Two.Vector`s, the anchor point and its\n   * corresponding handles: `left` and `right`.\n   */\n  var Anchor = Two.Anchor = function(x, y, ux, uy, vx, vy, command) {\n\n    Two.Vector.call(this, x, y);\n\n    this._broadcast = _.bind(function() {\n      this.trigger(Two.Events.change);\n    }, this);\n\n    this._command = command || commands.move;\n    this._relative = true;\n\n    if (!command) {\n      return this;\n    }\n\n    Anchor.AppendCurveProperties(this);\n\n    if (_.isNumber(ux)) {\n      this.controls.left.x = ux;\n    }\n    if (_.isNumber(uy)) {\n      this.controls.left.y = uy;\n    }\n    if (_.isNumber(vx)) {\n      this.controls.right.x = vx;\n    }\n    if (_.isNumber(vy)) {\n      this.controls.right.y = vy;\n    }\n\n  };\n\n  _.extend(Anchor, {\n\n    AppendCurveProperties: function(anchor) {\n      anchor.controls = {\n        left: new Two.Vector(0, 0),\n        right: new Two.Vector(0, 0)\n      };\n    }\n\n  });\n\n  var AnchorProto = {\n\n    listen: function() {\n\n      if (!_.isObject(this.controls)) {\n        Anchor.AppendCurveProperties(this);\n      }\n\n      this.controls.left.bind(Two.Events.change, this._broadcast);\n      this.controls.right.bind(Two.Events.change, this._broadcast);\n\n      return this;\n\n    },\n\n    ignore: function() {\n\n      this.controls.left.unbind(Two.Events.change, this._broadcast);\n      this.controls.right.unbind(Two.Events.change, this._broadcast);\n\n      return this;\n\n    },\n\n    clone: function() {\n\n      var controls = this.controls;\n\n      var clone = new Two.Anchor(\n        this.x,\n        this.y,\n        controls && controls.left.x,\n        controls && controls.left.y,\n        controls && controls.right.x,\n        controls && controls.right.y,\n        this.command\n      );\n      clone.relative = this._relative;\n      return clone;\n\n    },\n\n    toObject: function() {\n      var o = {\n        x: this.x,\n        y: this.y\n      };\n      if (this._command) {\n        o.command = this._command;\n      }\n      if (this._relative) {\n        o.relative = this._relative;\n      }\n      if (this.controls) {\n        o.controls = {\n          left: this.controls.left.toObject(),\n          right: this.controls.right.toObject()\n        };\n      }\n      return o;\n    },\n\n    toString: function() {\n      if (!this.controls) {\n        return [this._x, this._y].join(', ');\n      }\n      return [this._x, this._y, this.controls.left.x, this.controls.left.y,\n        this.controls.right.x, this.controls.right.y].join(', ');\n    }\n\n  };\n\n  Object.defineProperty(Anchor.prototype, 'command', {\n\n    enumerable: true,\n\n    get: function() {\n      return this._command;\n    },\n\n    set: function(c) {\n      this._command = c;\n      if (this._command === commands.curve && !_.isObject(this.controls)) {\n        Anchor.AppendCurveProperties(this);\n      }\n      return this.trigger(Two.Events.change);\n    }\n\n  });\n\n  Object.defineProperty(Anchor.prototype, 'relative', {\n\n    enumerable: true,\n\n    get: function() {\n      return this._relative;\n    },\n\n    set: function(b) {\n      if (this._relative == b) {\n        return this;\n      }\n      this._relative = !!b;\n      return this.trigger(Two.Events.change);\n    }\n\n  });\n\n  _.extend(Anchor.prototype, Two.Vector.prototype, AnchorProto);\n\n  // Make it possible to bind and still have the Anchor specific\n  // inheritance from Two.Vector\n  Two.Anchor.prototype.bind = Two.Anchor.prototype.on = function() {\n    Two.Vector.prototype.bind.apply(this, arguments);\n    _.extend(this, AnchorProto);\n  };\n\n  Two.Anchor.prototype.unbind = Two.Anchor.prototype.off = function() {\n    Two.Vector.prototype.unbind.apply(this, arguments);\n    _.extend(this, AnchorProto);\n  };\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  /**\n   * Constants\n   */\n  var cos = Math.cos, sin = Math.sin, tan = Math.tan;\n  var _ = Two.Utils;\n\n  /**\n   * Two.Matrix contains an array of elements that represent\n   * the two dimensional 3 x 3 matrix as illustrated below:\n   *\n   * =====\n   * a b c\n   * d e f\n   * g h i  // this row is not really used in 2d transformations\n   * =====\n   *\n   * String order is for transform strings: a, d, b, e, c, f\n   *\n   * @class\n   */\n  var Matrix = Two.Matrix = function(a, b, c, d, e, f) {\n\n    this.elements = new Two.Array(9);\n\n    var elements = a;\n    if (!_.isArray(elements)) {\n      elements = _.toArray(arguments);\n    }\n\n    // initialize the elements with default values.\n\n    this.identity().set(elements);\n\n  };\n\n  _.extend(Matrix, {\n\n    Identity: [\n      1, 0, 0,\n      0, 1, 0,\n      0, 0, 1\n    ],\n\n    /**\n     * Multiply two matrix 3x3 arrays\n     */\n    Multiply: function(A, B, C) {\n\n      if (B.length <= 3) { // Multiply Vector\n\n        var x, y, z, e = A;\n\n        var a = B[0] || 0,\n            b = B[1] || 0,\n            c = B[2] || 0;\n\n        // Go down rows first\n        // a, d, g, b, e, h, c, f, i\n\n        x = e[0] * a + e[1] * b + e[2] * c;\n        y = e[3] * a + e[4] * b + e[5] * c;\n        z = e[6] * a + e[7] * b + e[8] * c;\n\n        return { x: x, y: y, z: z };\n\n      }\n\n      var A0 = A[0], A1 = A[1], A2 = A[2];\n      var A3 = A[3], A4 = A[4], A5 = A[5];\n      var A6 = A[6], A7 = A[7], A8 = A[8];\n\n      var B0 = B[0], B1 = B[1], B2 = B[2];\n      var B3 = B[3], B4 = B[4], B5 = B[5];\n      var B6 = B[6], B7 = B[7], B8 = B[8];\n\n      C = C || new Two.Array(9);\n\n      C[0] = A0 * B0 + A1 * B3 + A2 * B6;\n      C[1] = A0 * B1 + A1 * B4 + A2 * B7;\n      C[2] = A0 * B2 + A1 * B5 + A2 * B8;\n      C[3] = A3 * B0 + A4 * B3 + A5 * B6;\n      C[4] = A3 * B1 + A4 * B4 + A5 * B7;\n      C[5] = A3 * B2 + A4 * B5 + A5 * B8;\n      C[6] = A6 * B0 + A7 * B3 + A8 * B6;\n      C[7] = A6 * B1 + A7 * B4 + A8 * B7;\n      C[8] = A6 * B2 + A7 * B5 + A8 * B8;\n\n      return C;\n\n    }\n\n  });\n\n  _.extend(Matrix.prototype, Two.Utils.Events, {\n\n    /**\n     * Takes an array of elements or the arguments list itself to\n     * set and update the current matrix's elements. Only updates\n     * specified values.\n     */\n    set: function(a) {\n\n      var elements = a;\n      if (!_.isArray(elements)) {\n        elements = _.toArray(arguments);\n      }\n\n      _.extend(this.elements, elements);\n\n      return this.trigger(Two.Events.change);\n\n    },\n\n    /**\n     * Turn matrix to identity, like resetting.\n     */\n    identity: function() {\n\n      this.set(Matrix.Identity);\n\n      return this;\n\n    },\n\n    /**\n     * Multiply scalar or multiply by another matrix.\n     */\n    multiply: function(a, b, c, d, e, f, g, h, i) {\n\n      var elements = arguments, l = elements.length;\n\n      // Multiply scalar\n\n      if (l <= 1) {\n\n        _.each(this.elements, function(v, i) {\n          this.elements[i] = v * a;\n        }, this);\n\n        return this.trigger(Two.Events.change);\n\n      }\n\n      if (l <= 3) { // Multiply Vector\n\n        var x, y, z;\n        a = a || 0;\n        b = b || 0;\n        c = c || 0;\n        e = this.elements;\n\n        // Go down rows first\n        // a, d, g, b, e, h, c, f, i\n\n        x = e[0] * a + e[1] * b + e[2] * c;\n        y = e[3] * a + e[4] * b + e[5] * c;\n        z = e[6] * a + e[7] * b + e[8] * c;\n\n        return { x: x, y: y, z: z };\n\n      }\n\n      // Multiple matrix\n\n      var A = this.elements;\n      var B = elements;\n\n      var A0 = A[0], A1 = A[1], A2 = A[2];\n      var A3 = A[3], A4 = A[4], A5 = A[5];\n      var A6 = A[6], A7 = A[7], A8 = A[8];\n\n      var B0 = B[0], B1 = B[1], B2 = B[2];\n      var B3 = B[3], B4 = B[4], B5 = B[5];\n      var B6 = B[6], B7 = B[7], B8 = B[8];\n\n      this.elements[0] = A0 * B0 + A1 * B3 + A2 * B6;\n      this.elements[1] = A0 * B1 + A1 * B4 + A2 * B7;\n      this.elements[2] = A0 * B2 + A1 * B5 + A2 * B8;\n\n      this.elements[3] = A3 * B0 + A4 * B3 + A5 * B6;\n      this.elements[4] = A3 * B1 + A4 * B4 + A5 * B7;\n      this.elements[5] = A3 * B2 + A4 * B5 + A5 * B8;\n\n      this.elements[6] = A6 * B0 + A7 * B3 + A8 * B6;\n      this.elements[7] = A6 * B1 + A7 * B4 + A8 * B7;\n      this.elements[8] = A6 * B2 + A7 * B5 + A8 * B8;\n\n      return this.trigger(Two.Events.change);\n\n    },\n\n    inverse: function(out) {\n\n      var a = this.elements;\n      out = out || new Two.Matrix();\n\n      var a00 = a[0], a01 = a[1], a02 = a[2];\n      var a10 = a[3], a11 = a[4], a12 = a[5];\n      var a20 = a[6], a21 = a[7], a22 = a[8];\n\n      var b01 = a22 * a11 - a12 * a21;\n      var b11 = -a22 * a10 + a12 * a20;\n      var b21 = a21 * a10 - a11 * a20;\n\n      // Calculate the determinant\n      var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n      if (!det) {\n        return null;\n      }\n\n      det = 1.0 / det;\n\n      out.elements[0] = b01 * det;\n      out.elements[1] = (-a22 * a01 + a02 * a21) * det;\n      out.elements[2] = (a12 * a01 - a02 * a11) * det;\n      out.elements[3] = b11 * det;\n      out.elements[4] = (a22 * a00 - a02 * a20) * det;\n      out.elements[5] = (-a12 * a00 + a02 * a10) * det;\n      out.elements[6] = b21 * det;\n      out.elements[7] = (-a21 * a00 + a01 * a20) * det;\n      out.elements[8] = (a11 * a00 - a01 * a10) * det;\n\n      return out;\n\n    },\n\n    /**\n     * Set a scalar onto the matrix.\n     */\n    scale: function(sx, sy) {\n\n      var l = arguments.length;\n      if (l <= 1) {\n        sy = sx;\n      }\n\n      return this.multiply(sx, 0, 0, 0, sy, 0, 0, 0, 1);\n\n    },\n\n    /**\n     * Rotate the matrix.\n     */\n    rotate: function(radians) {\n\n      var c = cos(radians);\n      var s = sin(radians);\n\n      return this.multiply(c, -s, 0, s, c, 0, 0, 0, 1);\n\n    },\n\n    /**\n     * Translate the matrix.\n     */\n    translate: function(x, y) {\n\n      return this.multiply(1, 0, x, 0, 1, y, 0, 0, 1);\n\n    },\n\n    /*\n     * Skew the matrix by an angle in the x axis direction.\n     */\n    skewX: function(radians) {\n\n      var a = tan(radians);\n\n      return this.multiply(1, a, 0, 0, 1, 0, 0, 0, 1);\n\n    },\n\n    /*\n     * Skew the matrix by an angle in the y axis direction.\n     */\n    skewY: function(radians) {\n\n      var a = tan(radians);\n\n      return this.multiply(1, 0, 0, a, 1, 0, 0, 0, 1);\n\n    },\n\n    /**\n     * Create a transform string to be used with rendering apis.\n     */\n    toString: function(fullMatrix) {\n      var temp = [];\n\n      this.toArray(fullMatrix, temp);\n\n      return temp.join(' ');\n\n    },\n\n    /**\n     * Create a transform array to be used with rendering apis.\n     */\n    toArray: function(fullMatrix, output) {\n\n     var elements = this.elements;\n     var hasOutput = !!output;\n\n     var a = parseFloat(elements[0].toFixed(3));\n     var b = parseFloat(elements[1].toFixed(3));\n     var c = parseFloat(elements[2].toFixed(3));\n     var d = parseFloat(elements[3].toFixed(3));\n     var e = parseFloat(elements[4].toFixed(3));\n     var f = parseFloat(elements[5].toFixed(3));\n\n      if (!!fullMatrix) {\n\n        var g = parseFloat(elements[6].toFixed(3));\n        var h = parseFloat(elements[7].toFixed(3));\n        var i = parseFloat(elements[8].toFixed(3));\n\n        if (hasOutput) {\n          output[0] = a;\n          output[1] = d;\n          output[2] = g;\n          output[3] = b;\n          output[4] = e;\n          output[5] = h;\n          output[6] = c;\n          output[7] = f;\n          output[8] = i;\n          return;\n        }\n\n        return [\n          a, d, g, b, e, h, c, f, i\n        ];\n      }\n\n      if (hasOutput) {\n        output[0] = a;\n        output[1] = d;\n        output[2] = b;\n        output[3] = e;\n        output[4] = c;\n        output[5] = f;\n        return;\n      }\n\n      return [\n        a, d, b, e, c, f  // Specific format see LN:19\n      ];\n\n    },\n\n    /**\n     * Clone the current matrix.\n     */\n    clone: function() {\n      var a, b, c, d, e, f, g, h, i;\n\n      a = this.elements[0];\n      b = this.elements[1];\n      c = this.elements[2];\n      d = this.elements[3];\n      e = this.elements[4];\n      f = this.elements[5];\n      g = this.elements[6];\n      h = this.elements[7];\n      i = this.elements[8];\n\n      return new Two.Matrix(a, b, c, d, e, f, g, h, i);\n\n    }\n\n  });\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  // Localize variables\n  var mod = Two.Utils.mod, toFixed = Two.Utils.toFixed;\n  var _ = Two.Utils;\n\n  var svg = {\n\n    version: 1.1,\n\n    ns: 'http://www.w3.org/2000/svg',\n    xlink: 'http://www.w3.org/1999/xlink',\n\n    alignments: {\n      left: 'start',\n      center: 'middle',\n      right: 'end'\n    },\n\n    /**\n     * Create an svg namespaced element.\n     */\n    createElement: function(name, attrs) {\n      var tag = name;\n      var elem = document.createElementNS(svg.ns, tag);\n      if (tag === 'svg') {\n        attrs = _.defaults(attrs || {}, {\n          version: svg.version\n        });\n      }\n      if (!_.isEmpty(attrs)) {\n        svg.setAttributes(elem, attrs);\n      }\n      return elem;\n    },\n\n    /**\n     * Add attributes from an svg element.\n     */\n    setAttributes: function(elem, attrs) {\n      var keys = Object.keys(attrs);\n      for (var i = 0; i < keys.length; i++) {\n        if (/href/.test(keys[i])) {\n          elem.setAttributeNS(svg.xlink, keys[i], attrs[keys[i]]);\n        } else {\n          elem.setAttribute(keys[i], attrs[keys[i]]);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Remove attributes from an svg element.\n     */\n    removeAttributes: function(elem, attrs) {\n      for (var key in attrs) {\n        elem.removeAttribute(key);\n      }\n      return this;\n    },\n\n    /**\n     * Turn a set of vertices into a string for the d property of a path\n     * element. It is imperative that the string collation is as fast as\n     * possible, because this call will be happening multiple times a\n     * second.\n     */\n    toString: function(points, closed) {\n\n      var l = points.length,\n        last = l - 1,\n        d, // The elusive last Two.Commands.move point\n        ret = '';\n\n      for (var i = 0; i < l; i++) {\n        var b = points[i];\n        var command;\n        var prev = closed ? mod(i - 1, l) : Math.max(i - 1, 0);\n        var next = closed ? mod(i + 1, l) : Math.min(i + 1, last);\n\n        var a = points[prev];\n        var c = points[next];\n\n        var vx, vy, ux, uy, ar, bl, br, cl;\n\n        // Access x and y directly,\n        // bypassing the getter\n        var x = toFixed(b._x);\n        var y = toFixed(b._y);\n\n        switch (b._command) {\n\n          case Two.Commands.close:\n            command = Two.Commands.close;\n            break;\n\n          case Two.Commands.curve:\n\n            ar = (a.controls && a.controls.right) || Two.Vector.zero;\n            bl = (b.controls && b.controls.left) || Two.Vector.zero;\n\n            if (a._relative) {\n              vx = toFixed((ar.x + a.x));\n              vy = toFixed((ar.y + a.y));\n            } else {\n              vx = toFixed(ar.x);\n              vy = toFixed(ar.y);\n            }\n\n            if (b._relative) {\n              ux = toFixed((bl.x + b.x));\n              uy = toFixed((bl.y + b.y));\n            } else {\n              ux = toFixed(bl.x);\n              uy = toFixed(bl.y);\n            }\n\n            command = ((i === 0) ? Two.Commands.move : Two.Commands.curve) +\n              ' ' + vx + ' ' + vy + ' ' + ux + ' ' + uy + ' ' + x + ' ' + y;\n            break;\n\n          case Two.Commands.move:\n            d = b;\n            command = Two.Commands.move + ' ' + x + ' ' + y;\n            break;\n\n          default:\n            command = b._command + ' ' + x + ' ' + y;\n\n        }\n\n        // Add a final point and close it off\n\n        if (i >= last && closed) {\n\n          if (b._command === Two.Commands.curve) {\n\n            // Make sure we close to the most previous Two.Commands.move\n            c = d;\n\n            br = (b.controls && b.controls.right) || b;\n            cl = (c.controls && c.controls.left) || c;\n\n            if (b._relative) {\n              vx = toFixed((br.x + b.x));\n              vy = toFixed((br.y + b.y));\n            } else {\n              vx = toFixed(br.x);\n              vy = toFixed(br.y);\n            }\n\n            if (c._relative) {\n              ux = toFixed((cl.x + c.x));\n              uy = toFixed((cl.y + c.y));\n            } else {\n              ux = toFixed(cl.x);\n              uy = toFixed(cl.y);\n            }\n\n            x = toFixed(c.x);\n            y = toFixed(c.y);\n\n            command +=\n              ' C ' + vx + ' ' + vy + ' ' + ux + ' ' + uy + ' ' + x + ' ' + y;\n          }\n\n          command += ' Z';\n\n        }\n\n        ret += command + ' ';\n\n      }\n\n      return ret;\n\n    },\n\n    getClip: function(shape) {\n\n      var clip = shape._renderer.clip;\n\n      if (!clip) {\n\n        var root = shape;\n\n        while (root.parent) {\n          root = root.parent;\n        }\n\n        clip = shape._renderer.clip = svg.createElement('clipPath');\n        root.defs.appendChild(clip);\n\n      }\n\n      return clip;\n\n    },\n\n    group: {\n\n      // TODO: Can speed up.\n      // TODO: How does this effect a f\n      appendChild: function(object) {\n\n        var elem = object._renderer.elem;\n\n        if (!elem) {\n          return;\n        }\n\n        var tag = elem.nodeName;\n\n        if (!tag || /(radial|linear)gradient/i.test(tag) || object._clip) {\n          return;\n        }\n\n        this.elem.appendChild(elem);\n\n      },\n\n      removeChild: function(object) {\n\n        var elem = object._renderer.elem;\n\n        if (!elem || elem.parentNode != this.elem) {\n          return;\n        }\n\n        var tag = elem.nodeName;\n\n        if (!tag) {\n          return;\n        }\n\n        // Defer subtractions while clipping.\n        if (object._clip) {\n          return;\n        }\n\n        this.elem.removeChild(elem);\n\n      },\n\n      orderChild: function(object) {\n        this.elem.appendChild(object._renderer.elem);\n      },\n\n      renderChild: function(child) {\n        svg[child._renderer.type].render.call(child, this);\n      },\n\n      render: function(domElement) {\n\n        this._update();\n\n        // Shortcut for hidden objects.\n        // Doesn't reset the flags, so changes are stored and\n        // applied once the object is visible again\n        if (this._opacity === 0 && !this._flagOpacity) {\n          return this;\n        }\n\n        if (!this._renderer.elem) {\n          this._renderer.elem = svg.createElement('g', {\n            id: this.id\n          });\n          domElement.appendChild(this._renderer.elem);\n        }\n\n        // _Update styles for the <g>\n        var flagMatrix = this._matrix.manual || this._flagMatrix;\n        var context = {\n          domElement: domElement,\n          elem: this._renderer.elem\n        };\n\n        if (flagMatrix) {\n          this._renderer.elem.setAttribute('transform', 'matrix(' + this._matrix.toString() + ')');\n        }\n\n        for (var i = 0; i < this.children.length; i++) {\n          var child = this.children[i];\n          svg[child._renderer.type].render.call(child, domElement);\n        }\n\n        if (this._flagOpacity) {\n          this._renderer.elem.setAttribute('opacity', this._opacity);\n        }\n\n        if (this._flagAdditions) {\n          this.additions.forEach(svg.group.appendChild, context);\n        }\n\n        if (this._flagSubtractions) {\n          this.subtractions.forEach(svg.group.removeChild, context);\n        }\n\n        if (this._flagOrder) {\n          this.children.forEach(svg.group.orderChild, context);\n        }\n\n        /**\n         * Commented two-way functionality of clips / masks with groups and\n         * polygons. Uncomment when this bug is fixed:\n         * https://code.google.com/p/chromium/issues/detail?id=370951\n         */\n\n        // if (this._flagClip) {\n\n        //   clip = svg.getClip(this);\n        //   elem = this._renderer.elem;\n\n        //   if (this._clip) {\n        //     elem.removeAttribute('id');\n        //     clip.setAttribute('id', this.id);\n        //     clip.appendChild(elem);\n        //   } else {\n        //     clip.removeAttribute('id');\n        //     elem.setAttribute('id', this.id);\n        //     this.parent._renderer.elem.appendChild(elem); // TODO: should be insertBefore\n        //   }\n\n        // }\n\n        if (this._flagMask) {\n          if (this._mask) {\n            this._renderer.elem.setAttribute('clip-path', 'url(#' + this._mask.id + ')');\n          } else {\n            this._renderer.elem.removeAttribute('clip-path');\n          }\n        }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    path: {\n\n      render: function(domElement) {\n\n        this._update();\n\n        // Shortcut for hidden objects.\n        // Doesn't reset the flags, so changes are stored and\n        // applied once the object is visible again\n        if (this._opacity === 0 && !this._flagOpacity) {\n          return this;\n        }\n\n        // Collect any attribute that needs to be changed here\n        var changed = {};\n\n        var flagMatrix = this._matrix.manual || this._flagMatrix;\n\n        if (flagMatrix) {\n          changed.transform = 'matrix(' + this._matrix.toString() + ')';\n        }\n\n        if (this._flagVertices) {\n          var vertices = svg.toString(this._vertices, this._closed);\n          changed.d = vertices;\n        }\n\n        if (this._fill && this._fill._renderer) {\n          this._fill._update();\n          svg[this._fill._renderer.type].render.call(this._fill, domElement, true);\n        }\n\n        if (this._flagFill) {\n          changed.fill = this._fill && this._fill.id\n            ? 'url(#' + this._fill.id + ')' : this._fill;\n        }\n\n        if (this._stroke && this._stroke._renderer) {\n          this._stroke._update();\n          svg[this._stroke._renderer.type].render.call(this._stroke, domElement, true);\n        }\n\n        if (this._flagStroke) {\n          changed.stroke = this._stroke && this._stroke.id\n            ? 'url(#' + this._stroke.id + ')' : this._stroke;\n        }\n\n        if (this._flagLinewidth) {\n          changed['stroke-width'] = this._linewidth;\n        }\n\n        if (this._flagOpacity) {\n          changed['stroke-opacity'] = this._opacity;\n          changed['fill-opacity'] = this._opacity;\n        }\n\n        if (this._flagVisible) {\n          changed.visibility = this._visible ? 'visible' : 'hidden';\n        }\n\n        if (this._flagCap) {\n          changed['stroke-linecap'] = this._cap;\n        }\n\n        if (this._flagJoin) {\n          changed['stroke-linejoin'] = this._join;\n        }\n\n        if (this._flagMiter) {\n          changed['stroke-miterlimit'] = this._miter;\n        }\n\n        // If there is no attached DOM element yet,\n        // create it with all necessary attributes.\n        if (!this._renderer.elem) {\n\n          changed.id = this.id;\n          this._renderer.elem = svg.createElement('path', changed);\n          domElement.appendChild(this._renderer.elem);\n\n        // Otherwise apply all pending attributes\n        } else {\n          svg.setAttributes(this._renderer.elem, changed);\n        }\n\n        if (this._flagClip) {\n\n          var clip = svg.getClip(this);\n          var elem = this._renderer.elem;\n\n          if (this._clip) {\n            elem.removeAttribute('id');\n            clip.setAttribute('id', this.id);\n            clip.appendChild(elem);\n          } else {\n            clip.removeAttribute('id');\n            elem.setAttribute('id', this.id);\n            this.parent._renderer.elem.appendChild(elem); // TODO: should be insertBefore\n          }\n\n        }\n\n        /**\n         * Commented two-way functionality of clips / masks with groups and\n         * polygons. Uncomment when this bug is fixed:\n         * https://code.google.com/p/chromium/issues/detail?id=370951\n         */\n\n        // if (this._flagMask) {\n        //   if (this._mask) {\n        //     elem.setAttribute('clip-path', 'url(#' + this._mask.id + ')');\n        //   } else {\n        //     elem.removeAttribute('clip-path');\n        //   }\n        // }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    text: {\n\n      render: function(domElement) {\n\n        this._update();\n\n        var changed = {};\n\n        var flagMatrix = this._matrix.manual || this._flagMatrix;\n\n        if (flagMatrix) {\n          changed.transform = 'matrix(' + this._matrix.toString() + ')';\n        }\n\n        if (this._flagFamily) {\n          changed['font-family'] = this._family;\n        }\n        if (this._flagSize) {\n          changed['font-size'] = this._size;\n        }\n        if (this._flagLeading) {\n          changed['line-height'] = this._leading;\n        }\n        if (this._flagAlignment) {\n          changed['text-anchor'] = svg.alignments[this._alignment] || this._alignment;\n        }\n        if (this._flagBaseline) {\n          changed['alignment-baseline'] = changed['dominant-baseline'] = this._baseline;\n        }\n        if (this._flagStyle) {\n          changed['font-style'] = this._style;\n        }\n        if (this._flagWeight) {\n          changed['font-weight'] = this._weight;\n        }\n        if (this._flagDecoration) {\n          changed['text-decoration'] = this._decoration;\n        }\n        if (this._fill && this._fill._renderer) {\n          this._fill._update();\n          svg[this._fill._renderer.type].render.call(this._fill, domElement, true);\n        }\n        if (this._flagFill) {\n          changed.fill = this._fill && this._fill.id\n            ? 'url(#' + this._fill.id + ')' : this._fill;\n        }\n        if (this._stroke && this._stroke._renderer) {\n          this._stroke._update();\n          svg[this._stroke._renderer.type].render.call(this._stroke, domElement, true);\n        }\n        if (this._flagStroke) {\n          changed.stroke = this._stroke && this._stroke.id\n            ? 'url(#' + this._stroke.id + ')' : this._stroke;\n        }\n        if (this._flagLinewidth) {\n          changed['stroke-width'] = this._linewidth;\n        }\n        if (this._flagOpacity) {\n          changed.opacity = this._opacity;\n        }\n        if (this._flagVisible) {\n          changed.visibility = this._visible ? 'visible' : 'hidden';\n        }\n\n        if (!this._renderer.elem) {\n\n          changed.id = this.id;\n\n          this._renderer.elem = svg.createElement('text', changed);\n          domElement.defs.appendChild(this._renderer.elem);\n\n        } else {\n\n          svg.setAttributes(this._renderer.elem, changed);\n\n        }\n\n        if (this._flagClip) {\n\n          var clip = svg.getClip(this);\n          var elem = this._renderer.elem;\n\n          if (this._clip) {\n            elem.removeAttribute('id');\n            clip.setAttribute('id', this.id);\n            clip.appendChild(elem);\n          } else {\n            clip.removeAttribute('id');\n            elem.setAttribute('id', this.id);\n            this.parent._renderer.elem.appendChild(elem); // TODO: should be insertBefore\n          }\n\n        }\n\n        if (this._flagValue) {\n          this._renderer.elem.textContent = this._value;\n        }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    'linear-gradient': {\n\n      render: function(domElement, silent) {\n\n        if (!silent) {\n          this._update();\n        }\n\n        var changed = {};\n\n        if (this._flagEndPoints) {\n          changed.x1 = this.left._x;\n          changed.y1 = this.left._y;\n          changed.x2 = this.right._x;\n          changed.y2 = this.right._y;\n        }\n\n        if (this._flagSpread) {\n          changed.spreadMethod = this._spread;\n        }\n\n        // If there is no attached DOM element yet,\n        // create it with all necessary attributes.\n        if (!this._renderer.elem) {\n\n          changed.id = this.id;\n          changed.gradientUnits = 'userSpaceOnUse';\n          this._renderer.elem = svg.createElement('linearGradient', changed);\n          domElement.defs.appendChild(this._renderer.elem);\n\n        // Otherwise apply all pending attributes\n        } else {\n\n          svg.setAttributes(this._renderer.elem, changed);\n\n        }\n\n        if (this._flagStops) {\n\n          var lengthChanged = this._renderer.elem.childNodes.length\n            !== this.stops.length;\n\n          if (lengthChanged) {\n            this._renderer.elem.childNodes.length = 0;\n          }\n\n          for (var i = 0; i < this.stops.length; i++) {\n\n            var stop = this.stops[i];\n            var attrs = {};\n\n            if (stop._flagOffset) {\n              attrs.offset = 100 * stop._offset + '%';\n            }\n            if (stop._flagColor) {\n              attrs['stop-color'] = stop._color;\n            }\n            if (stop._flagOpacity) {\n              attrs['stop-opacity'] = stop._opacity;\n            }\n\n            if (!stop._renderer.elem) {\n              stop._renderer.elem = svg.createElement('stop', attrs);\n            } else {\n              svg.setAttributes(stop._renderer.elem, attrs);\n            }\n\n            if (lengthChanged) {\n              this._renderer.elem.appendChild(stop._renderer.elem);\n            }\n            stop.flagReset();\n\n          }\n\n        }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    'radial-gradient': {\n\n      render: function(domElement, silent) {\n\n        if (!silent) {\n          this._update();\n        }\n\n        var changed = {};\n\n        if (this._flagCenter) {\n          changed.cx = this.center._x;\n          changed.cy = this.center._y;\n        }\n        if (this._flagFocal) {\n          changed.fx = this.focal._x;\n          changed.fy = this.focal._y;\n        }\n\n        if (this._flagRadius) {\n          changed.r = this._radius;\n        }\n\n        if (this._flagSpread) {\n          changed.spreadMethod = this._spread;\n        }\n\n        // If there is no attached DOM element yet,\n        // create it with all necessary attributes.\n        if (!this._renderer.elem) {\n\n          changed.id = this.id;\n          changed.gradientUnits = 'userSpaceOnUse';\n          this._renderer.elem = svg.createElement('radialGradient', changed);\n          domElement.defs.appendChild(this._renderer.elem);\n\n        // Otherwise apply all pending attributes\n        } else {\n\n          svg.setAttributes(this._renderer.elem, changed);\n\n        }\n\n        if (this._flagStops) {\n\n          var lengthChanged = this._renderer.elem.childNodes.length\n            !== this.stops.length;\n\n          if (lengthChanged) {\n            this._renderer.elem.childNodes.length = 0;\n          }\n\n          for (var i = 0; i < this.stops.length; i++) {\n\n            var stop = this.stops[i];\n            var attrs = {};\n\n            if (stop._flagOffset) {\n              attrs.offset = 100 * stop._offset + '%';\n            }\n            if (stop._flagColor) {\n              attrs['stop-color'] = stop._color;\n            }\n            if (stop._flagOpacity) {\n              attrs['stop-opacity'] = stop._opacity;\n            }\n\n            if (!stop._renderer.elem) {\n              stop._renderer.elem = svg.createElement('stop', attrs);\n            } else {\n              svg.setAttributes(stop._renderer.elem, attrs);\n            }\n\n            if (lengthChanged) {\n              this._renderer.elem.appendChild(stop._renderer.elem);\n            }\n            stop.flagReset();\n\n          }\n\n        }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    texture: {\n\n      render: function(domElement, silent) {\n\n        if (!silent) {\n          this._update();\n        }\n\n        var changed = {};\n        var styles = { x: 0, y: 0 };\n        var image = this.image;\n\n        if (this._flagLoaded && this.loaded) {\n\n          switch (image.nodeName.toLowerCase()) {\n\n            case 'canvas':\n              styles.href = styles['xlink:href'] = image.toDataURL('image/png');\n              break;\n            case 'img':\n            case 'image':\n              styles.href = styles['xlink:href'] = this.src;\n              break;\n\n          }\n\n        }\n\n        if (this._flagOffset || this._flagLoaded || this._flagScale) {\n\n          changed.x = this._offset.x;\n          changed.y = this._offset.y;\n\n          if (image) {\n\n            changed.x -= image.width / 2;\n            changed.y -= image.height / 2;\n\n            if (this._scale instanceof Two.Vector) {\n              changed.x *= this._scale.x;\n              changed.y *= this._scale.y;\n            } else {\n              changed.x *= this._scale;\n              changed.y *= this._scale;\n            }\n          }\n\n          if (changed.x > 0) {\n            changed.x *= - 1;\n          }\n          if (changed.y > 0) {\n            changed.y *= - 1;\n          }\n\n        }\n\n        if (this._flagScale || this._flagLoaded || this._flagRepeat) {\n\n          changed.width = 0;\n          changed.height = 0;\n\n          if (image) {\n\n            styles.width = changed.width = image.width;\n            styles.height = changed.height = image.height;\n\n            // TODO: Hack / Bandaid\n            switch (this._repeat) {\n              case 'no-repeat':\n                changed.width += 1;\n                changed.height += 1;\n                break;\n            }\n\n            if (this._scale instanceof Two.Vector) {\n              changed.width *= this._scale.x;\n              changed.height *= this._scale.y;\n            } else {\n              changed.width *= this._scale;\n              changed.height *= this._scale;\n            }\n          }\n\n        }\n\n        if (this._flagScale || this._flagLoaded) {\n          if (!this._renderer.image) {\n            this._renderer.image = svg.createElement('image', styles);\n          } else if (!_.isEmpty(styles)) {\n            svg.setAttributes(this._renderer.image, styles);\n          }\n        }\n\n        if (!this._renderer.elem) {\n\n          changed.id = this.id;\n          changed.patternUnits = 'userSpaceOnUse';\n          this._renderer.elem = svg.createElement('pattern', changed);\n          domElement.defs.appendChild(this._renderer.elem);\n\n        } else if (!_.isEmpty(changed)) {\n\n          svg.setAttributes(this._renderer.elem, changed);\n\n        }\n\n        if (this._renderer.elem && this._renderer.image && !this._renderer.appended) {\n          this._renderer.elem.appendChild(this._renderer.image);\n          this._renderer.appended = true;\n        }\n\n        return this.flagReset();\n\n      }\n\n    }\n\n  };\n\n  /**\n   * @class\n   */\n  var Renderer = Two[Two.Types.svg] = function(params) {\n\n    this.domElement = params.domElement || svg.createElement('svg');\n\n    this.scene = new Two.Group();\n    this.scene.parent = this;\n\n    this.defs = svg.createElement('defs');\n    this.domElement.appendChild(this.defs);\n    this.domElement.defs = this.defs;\n    this.domElement.style.overflow = 'hidden';\n\n  };\n\n  _.extend(Renderer, {\n\n    Utils: svg\n\n  });\n\n  _.extend(Renderer.prototype, Two.Utils.Events, {\n\n    setSize: function(width, height) {\n\n      this.width = width;\n      this.height = height;\n\n      svg.setAttributes(this.domElement, {\n        width: width,\n        height: height\n      });\n\n      return this;\n\n    },\n\n    render: function() {\n\n      svg.group.render.call(this.scene, this.domElement);\n\n      return this;\n\n    }\n\n  });\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  /**\n   * Constants\n   */\n  var mod = Two.Utils.mod, toFixed = Two.Utils.toFixed;\n  var getRatio = Two.Utils.getRatio;\n  var _ = Two.Utils;\n\n  // Returns true if this is a non-transforming matrix\n  var isDefaultMatrix = function (m) {\n    return (m[0] == 1 && m[3] == 0 && m[1] == 0 && m[4] == 1 && m[2] == 0 && m[5] == 0);\n  };\n\n  var canvas = {\n\n    isHidden: /(none|transparent)/i,\n\n    alignments: {\n      left: 'start',\n      middle: 'center',\n      right: 'end'\n    },\n\n    shim: function(elem) {\n      elem.tagName = 'canvas';\n      elem.nodeType = 1;\n      return elem;\n    },\n\n    group: {\n\n      renderChild: function(child) {\n        canvas[child._renderer.type].render.call(child, this.ctx, true, this.clip);\n      },\n\n      render: function(ctx) {\n\n        // TODO: Add a check here to only invoke _update if need be.\n        this._update();\n\n        var matrix = this._matrix.elements;\n        var parent = this.parent;\n        this._renderer.opacity = this._opacity * (parent && parent._renderer ? parent._renderer.opacity : 1);\n\n        var defaultMatrix = isDefaultMatrix(matrix);\n\n        var mask = this._mask;\n        // var clip = this._clip;\n\n        if (!this._renderer.context) {\n          this._renderer.context = {};\n        }\n\n        this._renderer.context.ctx = ctx;\n        // this._renderer.context.clip = clip;\n\n        if (!defaultMatrix) {\n          ctx.save();\n          ctx.transform(matrix[0], matrix[3], matrix[1], matrix[4], matrix[2], matrix[5]);\n        }\n\n        if (mask) {\n          canvas[mask._renderer.type].render.call(mask, ctx, true);\n        }\n\n        if (this.opacity > 0 && this.scale !== 0) {\n          for (var i = 0; i < this.children.length; i++) {\n            var child = this.children[i];\n            canvas[child._renderer.type].render.call(child, ctx);\n          }\n        }\n\n        if (!defaultMatrix) {\n          ctx.restore();\n        }\n\n       /**\n         * Commented two-way functionality of clips / masks with groups and\n         * polygons. Uncomment when this bug is fixed:\n         * https://code.google.com/p/chromium/issues/detail?id=370951\n         */\n\n        // if (clip) {\n        //   ctx.clip();\n        // }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    path: {\n\n      render: function(ctx, forced, parentClipped) {\n\n        var matrix, stroke, linewidth, fill, opacity, visible, cap, join, miter,\n            closed, commands, length, last, next, prev, a, b, c, d, ux, uy, vx, vy,\n            ar, bl, br, cl, x, y, mask, clip, defaultMatrix, isOffset;\n\n        // TODO: Add a check here to only invoke _update if need be.\n        this._update();\n\n        matrix = this._matrix.elements;\n        stroke = this._stroke;\n        linewidth = this._linewidth;\n        fill = this._fill;\n        opacity = this._opacity * this.parent._renderer.opacity;\n        visible = this._visible;\n        cap = this._cap;\n        join = this._join;\n        miter = this._miter;\n        closed = this._closed;\n        commands = this._vertices; // Commands\n        length = commands.length;\n        last = length - 1;\n        defaultMatrix = isDefaultMatrix(matrix);\n\n        // mask = this._mask;\n        clip = this._clip;\n\n        if (!forced && (!visible || clip)) {\n          return this;\n        }\n\n        // Transform\n        if (!defaultMatrix) {\n          ctx.save();\n          ctx.transform(matrix[0], matrix[3], matrix[1], matrix[4], matrix[2], matrix[5]);\n        }\n\n       /**\n         * Commented two-way functionality of clips / masks with groups and\n         * polygons. Uncomment when this bug is fixed:\n         * https://code.google.com/p/chromium/issues/detail?id=370951\n         */\n\n        // if (mask) {\n        //   canvas[mask._renderer.type].render.call(mask, ctx, true);\n        // }\n\n        // Styles\n        if (fill) {\n          if (_.isString(fill)) {\n            ctx.fillStyle = fill;\n          } else {\n            canvas[fill._renderer.type].render.call(fill, ctx);\n            ctx.fillStyle = fill._renderer.effect;\n          }\n        }\n        if (stroke) {\n          if (_.isString(stroke)) {\n            ctx.strokeStyle = stroke;\n          } else {\n            canvas[stroke._renderer.type].render.call(stroke, ctx);\n            ctx.strokeStyle = stroke._renderer.effect;\n          }\n        }\n        if (linewidth) {\n          ctx.lineWidth = linewidth;\n        }\n        if (miter) {\n          ctx.miterLimit = miter;\n        }\n        if (join) {\n          ctx.lineJoin = join;\n        }\n        if (cap) {\n          ctx.lineCap = cap;\n        }\n        if (_.isNumber(opacity)) {\n          ctx.globalAlpha = opacity;\n        }\n\n        ctx.beginPath();\n\n        for (var i = 0; i < commands.length; i++) {\n\n          b = commands[i];\n\n          x = toFixed(b._x);\n          y = toFixed(b._y);\n\n          switch (b._command) {\n\n            case Two.Commands.close:\n              ctx.closePath();\n              break;\n\n            case Two.Commands.curve:\n\n              prev = closed ? mod(i - 1, length) : Math.max(i - 1, 0);\n              next = closed ? mod(i + 1, length) : Math.min(i + 1, last);\n\n              a = commands[prev];\n              c = commands[next];\n              ar = (a.controls && a.controls.right) || Two.Vector.zero;\n              bl = (b.controls && b.controls.left) || Two.Vector.zero;\n\n              if (a._relative) {\n                vx = (ar.x + toFixed(a._x));\n                vy = (ar.y + toFixed(a._y));\n              } else {\n                vx = toFixed(ar.x);\n                vy = toFixed(ar.y);\n              }\n\n              if (b._relative) {\n                ux = (bl.x + toFixed(b._x));\n                uy = (bl.y + toFixed(b._y));\n              } else {\n                ux = toFixed(bl.x);\n                uy = toFixed(bl.y);\n              }\n\n              ctx.bezierCurveTo(vx, vy, ux, uy, x, y);\n\n              if (i >= last && closed) {\n\n                c = d;\n\n                br = (b.controls && b.controls.right) || Two.Vector.zero;\n                cl = (c.controls && c.controls.left) || Two.Vector.zero;\n\n                if (b._relative) {\n                  vx = (br.x + toFixed(b._x));\n                  vy = (br.y + toFixed(b._y));\n                } else {\n                  vx = toFixed(br.x);\n                  vy = toFixed(br.y);\n                }\n\n                if (c._relative) {\n                  ux = (cl.x + toFixed(c._x));\n                  uy = (cl.y + toFixed(c._y));\n                } else {\n                  ux = toFixed(cl.x);\n                  uy = toFixed(cl.y);\n                }\n\n                x = toFixed(c._x);\n                y = toFixed(c._y);\n\n                ctx.bezierCurveTo(vx, vy, ux, uy, x, y);\n\n              }\n\n              break;\n\n            case Two.Commands.line:\n              ctx.lineTo(x, y);\n              break;\n\n            case Two.Commands.move:\n              d = b;\n              ctx.moveTo(x, y);\n              break;\n\n          }\n        }\n\n        // Loose ends\n\n        if (closed) {\n          ctx.closePath();\n        }\n\n        if (!clip && !parentClipped) {\n          if (!canvas.isHidden.test(fill)) {\n            isOffset = fill._renderer && fill._renderer.offset\n            if (isOffset) {\n              ctx.save();\n              ctx.translate(\n                - fill._renderer.offset.x, - fill._renderer.offset.y);\n              ctx.scale(fill._renderer.scale.x, fill._renderer.scale.y);\n            }\n            ctx.fill();\n            if (isOffset) {\n              ctx.restore();\n            }\n          }\n          if (!canvas.isHidden.test(stroke)) {\n            isOffset = stroke._renderer && stroke._renderer.offset;\n            if (isOffset) {\n              ctx.save();\n              ctx.translate(\n                - stroke._renderer.offset.x, - stroke._renderer.offset.y);\n              ctx.scale(stroke._renderer.scale.x, stroke._renderer.scale.y);\n              ctx.lineWidth = linewidth / stroke._renderer.scale.x;\n            }\n            ctx.stroke();\n            if (isOffset) {\n              ctx.restore();\n            }\n          }\n        }\n\n        if (!defaultMatrix) {\n          ctx.restore();\n        }\n\n        if (clip && !parentClipped) {\n          ctx.clip();\n        }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    text: {\n\n      render: function(ctx, forced, parentClipped) {\n\n        // TODO: Add a check here to only invoke _update if need be.\n        this._update();\n\n        var matrix = this._matrix.elements;\n        var stroke = this._stroke;\n        var linewidth = this._linewidth;\n        var fill = this._fill;\n        var opacity = this._opacity * this.parent._renderer.opacity;\n        var visible = this._visible;\n        var defaultMatrix = isDefaultMatrix(matrix);\n        var isOffset = fill._renderer && fill._renderer.offset\n          && stroke._renderer && stroke._renderer.offset;\n\n        var a, b, c, d, e, sx, sy;\n\n        // mask = this._mask;\n        var clip = this._clip;\n\n        if (!forced && (!visible || clip)) {\n          return this;\n        }\n\n        // Transform\n        if (!defaultMatrix) {\n          ctx.save();\n          ctx.transform(matrix[0], matrix[3], matrix[1], matrix[4], matrix[2], matrix[5]);\n        }\n\n       /**\n         * Commented two-way functionality of clips / masks with groups and\n         * polygons. Uncomment when this bug is fixed:\n         * https://code.google.com/p/chromium/issues/detail?id=370951\n         */\n\n        // if (mask) {\n        //   canvas[mask._renderer.type].render.call(mask, ctx, true);\n        // }\n\n        if (!isOffset) {\n          ctx.font = [this._style, this._weight, this._size + 'px/' +\n            this._leading + 'px', this._family].join(' ');\n        }\n\n        ctx.textAlign = canvas.alignments[this._alignment] || this._alignment;\n        ctx.textBaseline = this._baseline;\n\n        // Styles\n        if (fill) {\n          if (_.isString(fill)) {\n            ctx.fillStyle = fill;\n          } else {\n            canvas[fill._renderer.type].render.call(fill, ctx);\n            ctx.fillStyle = fill._renderer.effect;\n          }\n        }\n        if (stroke) {\n          if (_.isString(stroke)) {\n            ctx.strokeStyle = stroke;\n          } else {\n            canvas[stroke._renderer.type].render.call(stroke, ctx);\n            ctx.strokeStyle = stroke._renderer.effect;\n          }\n        }\n        if (linewidth) {\n          ctx.lineWidth = linewidth;\n        }\n        if (_.isNumber(opacity)) {\n          ctx.globalAlpha = opacity;\n        }\n\n        if (!clip && !parentClipped) {\n\n          if (!canvas.isHidden.test(fill)) {\n\n            if (fill._renderer && fill._renderer.offset) {\n\n              sx = toFixed(fill._renderer.scale.x);\n              sy = toFixed(fill._renderer.scale.y);\n\n              ctx.save();\n              ctx.translate( - toFixed(fill._renderer.offset.x),\n                - toFixed(fill._renderer.offset.y));\n              ctx.scale(sx, sy);\n\n              a = this._size / fill._renderer.scale.y;\n              b = this._leading / fill._renderer.scale.y;\n              ctx.font = [this._style, this._weight, toFixed(a) + 'px/',\n                toFixed(b) + 'px', this._family].join(' ');\n\n              c = fill._renderer.offset.x / fill._renderer.scale.x;\n              d = fill._renderer.offset.y / fill._renderer.scale.y;\n\n              ctx.fillText(this.value, toFixed(c), toFixed(d));\n              ctx.restore();\n\n            } else {\n              ctx.fillText(this.value, 0, 0);\n            }\n\n          }\n\n          if (!canvas.isHidden.test(stroke)) {\n\n            if (stroke._renderer && stroke._renderer.offset) {\n\n              sx = toFixed(stroke._renderer.scale.x);\n              sy = toFixed(stroke._renderer.scale.y);\n\n              ctx.save();\n              ctx.translate(- toFixed(stroke._renderer.offset.x),\n                - toFixed(stroke._renderer.offset.y));\n              ctx.scale(sx, sy);\n\n              a = this._size / stroke._renderer.scale.y;\n              b = this._leading / stroke._renderer.scale.y;\n              ctx.font = [this._style, this._weight, toFixed(a) + 'px/',\n                toFixed(b) + 'px', this._family].join(' ');\n\n              c = stroke._renderer.offset.x / stroke._renderer.scale.x;\n              d = stroke._renderer.offset.y / stroke._renderer.scale.y;\n              e = linewidth / stroke._renderer.scale.x;\n\n              ctx.lineWidth = toFixed(e);\n              ctx.strokeText(this.value, toFixed(c), toFixed(d));\n              ctx.restore();\n\n            } else {\n              ctx.strokeText(this.value, 0, 0);\n            }\n          }\n        }\n\n        if (!defaultMatrix) {\n          ctx.restore();\n        }\n\n        // TODO: Test for text\n        if (clip && !parentClipped) {\n          ctx.clip();\n        }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    'linear-gradient': {\n\n      render: function(ctx) {\n\n        this._update();\n\n        if (!this._renderer.effect || this._flagEndPoints || this._flagStops) {\n\n          this._renderer.effect = ctx.createLinearGradient(\n            this.left._x, this.left._y,\n            this.right._x, this.right._y\n          );\n\n          for (var i = 0; i < this.stops.length; i++) {\n            var stop = this.stops[i];\n            this._renderer.effect.addColorStop(stop._offset, stop._color);\n          }\n\n        }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    'radial-gradient': {\n\n      render: function(ctx) {\n\n        this._update();\n\n        if (!this._renderer.effect || this._flagCenter || this._flagFocal\n            || this._flagRadius || this._flagStops) {\n\n          this._renderer.effect = ctx.createRadialGradient(\n            this.center._x, this.center._y, 0,\n            this.focal._x, this.focal._y, this._radius\n          );\n\n          for (var i = 0; i < this.stops.length; i++) {\n            var stop = this.stops[i];\n            this._renderer.effect.addColorStop(stop._offset, stop._color);\n          }\n\n        }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    texture: {\n\n      render: function(ctx) {\n\n        this._update();\n\n        var image = this.image;\n        var repeat;\n\n        if (!this._renderer.effect || ((this._flagLoaded || this._flagImage || this._flagVideo || this._flagRepeat) && this.loaded)) {\n          this._renderer.effect = ctx.createPattern(this.image, this._repeat);\n        }\n\n        if (this._flagOffset || this._flagLoaded || this._flagScale) {\n\n          if (!(this._renderer.offset instanceof Two.Vector)) {\n            this._renderer.offset = new Two.Vector();\n          }\n\n          this._renderer.offset.x = - this._offset.x;\n          this._renderer.offset.y = - this._offset.y;\n\n          if (image) {\n\n            this._renderer.offset.x += image.width / 2;\n            this._renderer.offset.y += image.height / 2;\n\n            if (this._scale instanceof Two.Vector) {\n              this._renderer.offset.x *= this._scale.x;\n              this._renderer.offset.y *= this._scale.y;\n            } else {\n              this._renderer.offset.x *= this._scale;\n              this._renderer.offset.y *= this._scale;\n            }\n          }\n\n        }\n\n        if (this._flagScale || this._flagLoaded) {\n\n          if (!(this._renderer.scale instanceof Two.Vector)) {\n            this._renderer.scale = new Two.Vector();\n          }\n\n          if (this._scale instanceof Two.Vector) {\n            this._renderer.scale.copy(this._scale);\n          } else {\n            this._renderer.scale.set(this._scale, this._scale);\n          }\n\n        }\n\n        return this.flagReset();\n\n      }\n\n    }\n\n  };\n\n  var Renderer = Two[Two.Types.canvas] = function(params) {\n    // Smoothing property. Defaults to true\n    // Set it to false when working with pixel art.\n    // false can lead to better performance, since it would use a cheaper interpolation algorithm.\n    // It might not make a big difference on GPU backed canvases.\n    var smoothing = (params.smoothing !== false);\n    this.domElement = params.domElement || document.createElement('canvas');\n    this.ctx = this.domElement.getContext('2d');\n    this.overdraw = params.overdraw || false;\n\n    if (!_.isUndefined(this.ctx.imageSmoothingEnabled)) {\n      this.ctx.imageSmoothingEnabled = smoothing;\n    }\n\n    // Everything drawn on the canvas needs to be added to the scene.\n    this.scene = new Two.Group();\n    this.scene.parent = this;\n  };\n\n\n  _.extend(Renderer, {\n\n    Utils: canvas\n\n  });\n\n  _.extend(Renderer.prototype, Two.Utils.Events, {\n\n    setSize: function(width, height, ratio) {\n\n      this.width = width;\n      this.height = height;\n\n      this.ratio = _.isUndefined(ratio) ? getRatio(this.ctx) : ratio;\n\n      this.domElement.width = width * this.ratio;\n      this.domElement.height = height * this.ratio;\n\n      if (this.domElement.style) {\n        _.extend(this.domElement.style, {\n          width: width + 'px',\n          height: height + 'px'\n        });\n      }\n\n      return this;\n\n    },\n\n    render: function() {\n\n      var isOne = this.ratio === 1;\n\n      if (!isOne) {\n        this.ctx.save();\n        this.ctx.scale(this.ratio, this.ratio);\n      }\n\n      if (!this.overdraw) {\n        this.ctx.clearRect(0, 0, this.width, this.height);\n      }\n\n      canvas.group.render.call(this.scene, this.ctx);\n\n      if (!isOne) {\n        this.ctx.restore();\n      }\n\n      return this;\n\n    }\n\n  });\n\n  function resetTransform(ctx) {\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  /**\n   * Constants\n   */\n\n  var root = Two.root,\n    multiplyMatrix = Two.Matrix.Multiply,\n    mod = Two.Utils.mod,\n    identity = [1, 0, 0, 0, 1, 0, 0, 0, 1],\n    transformation = new Two.Array(9),\n    getRatio = Two.Utils.getRatio,\n    getComputedMatrix = Two.Utils.getComputedMatrix,\n    toFixed = Two.Utils.toFixed,\n    _ = Two.Utils;\n\n  var webgl = {\n\n    isHidden: /(none|transparent)/i,\n\n    canvas: (root.document ? root.document.createElement('canvas') : { getContext: _.identity }),\n\n    alignments: {\n      left: 'start',\n      middle: 'center',\n      right: 'end'\n    },\n\n    matrix: new Two.Matrix(),\n\n    uv: new Two.Array([\n      0, 0,\n      1, 0,\n      0, 1,\n      0, 1,\n      1, 0,\n      1, 1\n    ]),\n\n    group: {\n\n      removeChild: function(child, gl) {\n        if (child.children) {\n          for (var i = 0; i < child.children.length; i++) {\n            webgl.group.removeChild(child.children[i], gl);\n          }\n          return;\n        }\n        // Deallocate texture to free up gl memory.\n        gl.deleteTexture(child._renderer.texture);\n        delete child._renderer.texture;\n      },\n\n      renderChild: function(child) {\n        webgl[child._renderer.type].render.call(child, this.gl, this.program);\n      },\n\n      render: function(gl, program) {\n\n        this._update();\n\n        var parent = this.parent;\n        var flagParentMatrix = (parent._matrix && parent._matrix.manual) || parent._flagMatrix;\n        var flagMatrix = this._matrix.manual || this._flagMatrix;\n\n        if (flagParentMatrix || flagMatrix) {\n\n          if (!this._renderer.matrix) {\n            this._renderer.matrix = new Two.Array(9);\n          }\n\n          // Reduce amount of object / array creation / deletion\n          this._matrix.toArray(true, transformation);\n\n          multiplyMatrix(transformation, parent._renderer.matrix, this._renderer.matrix);\n          this._renderer.scale = this._scale * parent._renderer.scale;\n\n          if (flagParentMatrix) {\n            this._flagMatrix = true;\n          }\n\n        }\n\n        if (this._mask) {\n\n          gl.enable(gl.STENCIL_TEST);\n          gl.stencilFunc(gl.ALWAYS, 1, 1);\n\n          gl.colorMask(false, false, false, true);\n          gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);\n\n          webgl[this._mask._renderer.type].render.call(this._mask, gl, program, this);\n\n          gl.colorMask(true, true, true, true);\n          gl.stencilFunc(gl.NOTEQUAL, 0, 1);\n          gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\n        }\n\n        this._flagOpacity = parent._flagOpacity || this._flagOpacity;\n\n        this._renderer.opacity = this._opacity\n          * (parent && parent._renderer ? parent._renderer.opacity : 1);\n\n        if (this._flagSubtractions) {\n          for (var i = 0; i < this.subtractions.length; i++) {\n            webgl.group.removeChild(this.subtractions[i], gl);\n          }\n        }\n\n        this.children.forEach(webgl.group.renderChild, {\n          gl: gl,\n          program: program\n        });\n\n        if (this._mask) {\n\n          gl.colorMask(false, false, false, false);\n          gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);\n\n          webgl[this._mask._renderer.type].render.call(this._mask, gl, program, this);\n\n          gl.colorMask(true, true, true, true);\n          gl.stencilFunc(gl.NOTEQUAL, 0, 1);\n          gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\n          gl.disable(gl.STENCIL_TEST);\n\n        }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    path: {\n\n      updateCanvas: function(elem) {\n\n        var next, prev, a, c, ux, uy, vx, vy, ar, bl, br, cl, x, y;\n        var isOffset;\n\n        var commands = elem._vertices;\n        var canvas = this.canvas;\n        var ctx = this.ctx;\n\n        // Styles\n        var scale = elem._renderer.scale;\n        var stroke = elem._stroke;\n        var linewidth = elem._linewidth;\n        var fill = elem._fill;\n        var opacity = elem._renderer.opacity || elem._opacity;\n        var cap = elem._cap;\n        var join = elem._join;\n        var miter = elem._miter;\n        var closed = elem._closed;\n        var length = commands.length;\n        var last = length - 1;\n\n        canvas.width = Math.max(Math.ceil(elem._renderer.rect.width * scale), 1);\n        canvas.height = Math.max(Math.ceil(elem._renderer.rect.height * scale), 1);\n\n        var centroid = elem._renderer.rect.centroid;\n        var cx = centroid.x;\n        var cy = centroid.y;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (fill) {\n          if (_.isString(fill)) {\n            ctx.fillStyle = fill;\n          } else {\n            webgl[fill._renderer.type].render.call(fill, ctx, elem);\n            ctx.fillStyle = fill._renderer.effect;\n          }\n        }\n        if (stroke) {\n          if (_.isString(stroke)) {\n            ctx.strokeStyle = stroke;\n          } else {\n            webgl[stroke._renderer.type].render.call(stroke, ctx, elem);\n            ctx.strokeStyle = stroke._renderer.effect;\n          }\n        }\n        if (linewidth) {\n          ctx.lineWidth = linewidth;\n        }\n        if (miter) {\n          ctx.miterLimit = miter;\n        }\n        if (join) {\n          ctx.lineJoin = join;\n        }\n        if (cap) {\n          ctx.lineCap = cap;\n        }\n        if (_.isNumber(opacity)) {\n          ctx.globalAlpha = opacity;\n        }\n\n        var d;\n        ctx.save();\n        ctx.scale(scale, scale);\n        ctx.translate(cx, cy);\n\n        ctx.beginPath();\n        for (var i = 0; i < commands.length; i++) {\n\n          b = commands[i];\n\n          x = toFixed(b._x);\n          y = toFixed(b._y);\n\n          switch (b._command) {\n\n            case Two.Commands.close:\n              ctx.closePath();\n              break;\n\n            case Two.Commands.curve:\n\n              prev = closed ? mod(i - 1, length) : Math.max(i - 1, 0);\n              next = closed ? mod(i + 1, length) : Math.min(i + 1, last);\n\n              a = commands[prev];\n              c = commands[next];\n              ar = (a.controls && a.controls.right) || Two.Vector.zero;\n              bl = (b.controls && b.controls.left) || Two.Vector.zero;\n\n              if (a._relative) {\n                vx = toFixed((ar.x + a._x));\n                vy = toFixed((ar.y + a._y));\n              } else {\n                vx = toFixed(ar.x);\n                vy = toFixed(ar.y);\n              }\n\n              if (b._relative) {\n                ux = toFixed((bl.x + b._x));\n                uy = toFixed((bl.y + b._y));\n              } else {\n                ux = toFixed(bl.x);\n                uy = toFixed(bl.y);\n              }\n\n              ctx.bezierCurveTo(vx, vy, ux, uy, x, y);\n\n              if (i >= last && closed) {\n\n                c = d;\n\n                br = (b.controls && b.controls.right) || Two.Vector.zero;\n                cl = (c.controls && c.controls.left) || Two.Vector.zero;\n\n                if (b._relative) {\n                  vx = toFixed((br.x + b._x));\n                  vy = toFixed((br.y + b._y));\n                } else {\n                  vx = toFixed(br.x);\n                  vy = toFixed(br.y);\n                }\n\n                if (c._relative) {\n                  ux = toFixed((cl.x + c._x));\n                  uy = toFixed((cl.y + c._y));\n                } else {\n                  ux = toFixed(cl.x);\n                  uy = toFixed(cl.y);\n                }\n\n                x = toFixed(c._x);\n                y = toFixed(c._y);\n\n                ctx.bezierCurveTo(vx, vy, ux, uy, x, y);\n\n              }\n\n              break;\n\n            case Two.Commands.line:\n              ctx.lineTo(x, y);\n              break;\n\n            case Two.Commands.move:\n              d = b;\n              ctx.moveTo(x, y);\n              break;\n\n          }\n\n        }\n\n        // Loose ends\n\n        if (closed) {\n          ctx.closePath();\n        }\n\n        if (!webgl.isHidden.test(fill)) {\n          isOffset = fill._renderer && fill._renderer.offset\n          if (isOffset) {\n            ctx.save();\n            ctx.translate(\n              - fill._renderer.offset.x, - fill._renderer.offset.y);\n            ctx.scale(fill._renderer.scale.x, fill._renderer.scale.y);\n          }\n          ctx.fill();\n          if (isOffset) {\n            ctx.restore();\n          }\n        }\n\n        if (!webgl.isHidden.test(stroke)) {\n          isOffset = stroke._renderer && stroke._renderer.offset;\n          if (isOffset) {\n            ctx.save();\n            ctx.translate(\n              - stroke._renderer.offset.x, - stroke._renderer.offset.y);\n            ctx.scale(stroke._renderer.scale.x, stroke._renderer.scale.y);\n            ctx.lineWidth = linewidth / stroke._renderer.scale.x;\n          }\n          ctx.stroke();\n          if (isOffset) {\n            ctx.restore();\n          }\n        }\n\n        ctx.restore();\n\n      },\n\n      /**\n       * Returns the rect of a set of verts. Typically takes vertices that are\n       * \"centered\" around 0 and returns them to be anchored upper-left.\n       */\n      getBoundingClientRect: function(vertices, border, rect) {\n\n        var left = Infinity, right = -Infinity,\n            top = Infinity, bottom = -Infinity,\n            width, height;\n\n        vertices.forEach(function(v) {\n\n          var x = v.x, y = v.y, controls = v.controls;\n          var a, b, c, d, cl, cr;\n\n          top = Math.min(y, top);\n          left = Math.min(x, left);\n          right = Math.max(x, right);\n          bottom = Math.max(y, bottom);\n\n          if (!v.controls) {\n            return;\n          }\n\n          cl = controls.left;\n          cr = controls.right;\n\n          if (!cl || !cr) {\n            return;\n          }\n\n          a = v._relative ? cl.x + x : cl.x;\n          b = v._relative ? cl.y + y : cl.y;\n          c = v._relative ? cr.x + x : cr.x;\n          d = v._relative ? cr.y + y : cr.y;\n\n          if (!a || !b || !c || !d) {\n            return;\n          }\n\n          top = Math.min(b, d, top);\n          left = Math.min(a, c, left);\n          right = Math.max(a, c, right);\n          bottom = Math.max(b, d, bottom);\n\n        });\n\n        // Expand borders\n\n        if (_.isNumber(border)) {\n          top -= border;\n          left -= border;\n          right += border;\n          bottom += border;\n        }\n\n        width = right - left;\n        height = bottom - top;\n\n        rect.top = top;\n        rect.left = left;\n        rect.right = right;\n        rect.bottom = bottom;\n        rect.width = width;\n        rect.height = height;\n\n        if (!rect.centroid) {\n          rect.centroid = {};\n        }\n\n        rect.centroid.x = - left;\n        rect.centroid.y = - top;\n\n      },\n\n      render: function(gl, program, forcedParent) {\n\n        if (!this._visible || !this._opacity) {\n          return this;\n        }\n\n        this._update();\n\n        // Calculate what changed\n\n        var parent = this.parent;\n        var flagParentMatrix = parent._matrix.manual || parent._flagMatrix;\n        var flagMatrix = this._matrix.manual || this._flagMatrix;\n        var flagTexture = this._flagVertices || this._flagFill\n          || (this._fill instanceof Two.LinearGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagEndPoints))\n          || (this._fill instanceof Two.RadialGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagRadius || this._fill._flagCenter || this._fill._flagFocal))\n          || (this._fill instanceof Two.Texture && (this._fill._flagLoaded && this._fill.loaded || this._fill._flagOffset || this._fill._flagScale))\n          || (this._stroke instanceof Two.LinearGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagEndPoints))\n          || (this._stroke instanceof Two.RadialGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagRadius || this._stroke._flagCenter || this._stroke._flagFocal))\n          || (this._stroke instanceof Two.Texture && (this._stroke._flagLoaded && this._stroke.loaded || this._stroke._flagOffset || this._fill._flagScale))\n          || this._flagStroke || this._flagLinewidth || this._flagOpacity\n          || parent._flagOpacity || this._flagVisible || this._flagCap\n          || this._flagJoin || this._flagMiter || this._flagScale\n          || !this._renderer.texture;\n\n        if (flagParentMatrix || flagMatrix) {\n\n          if (!this._renderer.matrix) {\n            this._renderer.matrix = new Two.Array(9);\n          }\n\n          // Reduce amount of object / array creation / deletion\n\n          this._matrix.toArray(true, transformation);\n\n          multiplyMatrix(transformation, parent._renderer.matrix, this._renderer.matrix);\n          this._renderer.scale = this._scale * parent._renderer.scale;\n\n        }\n\n        if (flagTexture) {\n\n          if (!this._renderer.rect) {\n            this._renderer.rect = {};\n          }\n\n          if (!this._renderer.triangles) {\n            this._renderer.triangles = new Two.Array(12);\n          }\n\n          this._renderer.opacity = this._opacity * parent._renderer.opacity;\n\n          webgl.path.getBoundingClientRect(this._vertices, this._linewidth, this._renderer.rect);\n          webgl.getTriangles(this._renderer.rect, this._renderer.triangles);\n\n          webgl.updateBuffer.call(webgl, gl, this, program);\n          webgl.updateTexture.call(webgl, gl, this);\n\n        }\n\n        // if (this._mask) {\n        //   webgl[this._mask._renderer.type].render.call(mask, gl, program, this);\n        // }\n\n        if (this._clip && !forcedParent) {\n          return;\n        }\n\n        // Draw Texture\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._renderer.textureCoordsBuffer);\n\n        gl.vertexAttribPointer(program.textureCoords, 2, gl.FLOAT, false, 0, 0);\n\n        gl.bindTexture(gl.TEXTURE_2D, this._renderer.texture);\n\n\n        // Draw Rect\n\n        gl.uniformMatrix3fv(program.matrix, false, this._renderer.matrix);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._renderer.buffer);\n\n        gl.vertexAttribPointer(program.position, 2, gl.FLOAT, false, 0, 0);\n\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    text: {\n\n      updateCanvas: function(elem) {\n\n        var canvas = this.canvas;\n        var ctx = this.ctx;\n\n        // Styles\n        var scale = elem._renderer.scale;\n        var stroke = elem._stroke;\n        var linewidth = elem._linewidth * scale;\n        var fill = elem._fill;\n        var opacity = elem._renderer.opacity || elem._opacity;\n\n        canvas.width = Math.max(Math.ceil(elem._renderer.rect.width * scale), 1);\n        canvas.height = Math.max(Math.ceil(elem._renderer.rect.height * scale), 1);\n\n        var centroid = elem._renderer.rect.centroid;\n        var cx = centroid.x;\n        var cy = centroid.y;\n\n        var a, b, c, d, e, sx, sy;\n        var isOffset = fill._renderer && fill._renderer.offset\n          && stroke._renderer && stroke._renderer.offset;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (!isOffset) {\n          ctx.font = [elem._style, elem._weight, elem._size + 'px/' +\n            elem._leading + 'px', elem._family].join(' ');\n        }\n\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n\n        // Styles\n        if (fill) {\n          if (_.isString(fill)) {\n            ctx.fillStyle = fill;\n          } else {\n            webgl[fill._renderer.type].render.call(fill, ctx, elem);\n            ctx.fillStyle = fill._renderer.effect;\n          }\n        }\n        if (stroke) {\n          if (_.isString(stroke)) {\n            ctx.strokeStyle = stroke;\n          } else {\n            webgl[stroke._renderer.type].render.call(stroke, ctx, elem);\n            ctx.strokeStyle = stroke._renderer.effect;\n          }\n        }\n        if (linewidth) {\n          ctx.lineWidth = linewidth;\n        }\n        if (_.isNumber(opacity)) {\n          ctx.globalAlpha = opacity;\n        }\n\n        ctx.save();\n        ctx.scale(scale, scale);\n        ctx.translate(cx, cy);\n\n        if (!webgl.isHidden.test(fill)) {\n\n          if (fill._renderer && fill._renderer.offset) {\n\n            sx = toFixed(fill._renderer.scale.x);\n            sy = toFixed(fill._renderer.scale.y);\n\n            ctx.save();\n            ctx.translate( - toFixed(fill._renderer.offset.x),\n              - toFixed(fill._renderer.offset.y));\n            ctx.scale(sx, sy);\n\n            a = elem._size / fill._renderer.scale.y;\n            b = elem._leading / fill._renderer.scale.y;\n            ctx.font = [elem._style, elem._weight, toFixed(a) + 'px/',\n              toFixed(b) + 'px', elem._family].join(' ');\n\n            c = fill._renderer.offset.x / fill._renderer.scale.x;\n            d = fill._renderer.offset.y / fill._renderer.scale.y;\n\n            ctx.fillText(elem.value, toFixed(c), toFixed(d));\n            ctx.restore();\n\n          } else {\n            ctx.fillText(elem.value, 0, 0);\n          }\n\n        }\n\n        if (!webgl.isHidden.test(stroke)) {\n\n          if (stroke._renderer && stroke._renderer.offset) {\n\n            sx = toFixed(stroke._renderer.scale.x);\n            sy = toFixed(stroke._renderer.scale.y);\n\n            ctx.save();\n            ctx.translate(- toFixed(stroke._renderer.offset.x),\n              - toFixed(stroke._renderer.offset.y));\n            ctx.scale(sx, sy);\n\n            a = elem._size / stroke._renderer.scale.y;\n            b = elem._leading / stroke._renderer.scale.y;\n            ctx.font = [elem._style, elem._weight, toFixed(a) + 'px/',\n              toFixed(b) + 'px', elem._family].join(' ');\n\n            c = stroke._renderer.offset.x / stroke._renderer.scale.x;\n            d = stroke._renderer.offset.y / stroke._renderer.scale.y;\n            e = linewidth / stroke._renderer.scale.x;\n\n            ctx.lineWidth = toFixed(e);\n            ctx.strokeText(elem.value, toFixed(c), toFixed(d));\n            ctx.restore();\n\n          } else {\n            ctx.strokeText(elem.value, 0, 0);\n          }\n\n        }\n\n        ctx.restore();\n\n      },\n\n      getBoundingClientRect: function(elem, rect) {\n\n        var ctx = webgl.ctx;\n\n        ctx.font = [elem._style, elem._weight, elem._size + 'px/' +\n          elem._leading + 'px', elem._family].join(' ');\n\n        ctx.textAlign = 'center';\n        ctx.textBaseline = elem._baseline;\n\n        // TODO: Estimate this better\n        var width = ctx.measureText(elem._value).width;\n        var height = Math.max(elem._size || elem._leading);\n\n        if (this._linewidth && !webgl.isHidden.test(this._stroke)) {\n          // width += this._linewidth; // TODO: Not sure if the `measure` calcs this.\n          height += this._linewidth;\n        }\n\n        var w = width / 2;\n        var h = height / 2;\n\n        switch (webgl.alignments[elem._alignment] || elem._alignment) {\n\n          case webgl.alignments.left:\n            rect.left = 0;\n            rect.right = width;\n            break;\n          case webgl.alignments.right:\n            rect.left = - width;\n            rect.right = 0;\n            break;\n          default:\n            rect.left = - w;\n            rect.right = w;\n        }\n\n        // TODO: Gradients aren't inherited...\n        switch (elem._baseline) {\n          case 'bottom':\n            rect.top = - height;\n            rect.bottom = 0;\n            break;\n          case 'top':\n            rect.top = 0;\n            rect.bottom = height;\n            break;\n          default:\n            rect.top = - h;\n            rect.bottom = h;\n        }\n\n        rect.width = width;\n        rect.height = height;\n\n        if (!rect.centroid) {\n          rect.centroid = {};\n        }\n\n        // TODO:\n        rect.centroid.x = w;\n        rect.centroid.y = h;\n\n      },\n\n      render: function(gl, program, forcedParent) {\n\n        if (!this._visible || !this._opacity) {\n          return this;\n        }\n\n        this._update();\n\n        // Calculate what changed\n\n        var parent = this.parent;\n        var flagParentMatrix = parent._matrix.manual || parent._flagMatrix;\n        var flagMatrix = this._matrix.manual || this._flagMatrix;\n        var flagTexture = this._flagVertices || this._flagFill\n          || (this._fill instanceof Two.LinearGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagEndPoints))\n          || (this._fill instanceof Two.RadialGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagRadius || this._fill._flagCenter || this._fill._flagFocal))\n          || (this._fill instanceof Two.Texture && (this._fill._flagLoaded && this._fill.loaded))\n          || (this._stroke instanceof Two.LinearGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagEndPoints))\n          || (this._stroke instanceof Two.RadialGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagRadius || this._stroke._flagCenter || this._stroke._flagFocal))\n          || (this._texture instanceof Two.Texture && (this._texture._flagLoaded && this._texture.loaded))\n          || this._flagStroke || this._flagLinewidth || this._flagOpacity\n          || parent._flagOpacity || this._flagVisible || this._flagScale\n          || this._flagValue || this._flagFamily || this._flagSize\n          || this._flagLeading || this._flagAlignment || this._flagBaseline\n          || this._flagStyle || this._flagWeight || this._flagDecoration\n          || !this._renderer.texture;\n\n        if (flagParentMatrix || flagMatrix) {\n\n          if (!this._renderer.matrix) {\n            this._renderer.matrix = new Two.Array(9);\n          }\n\n          // Reduce amount of object / array creation / deletion\n\n          this._matrix.toArray(true, transformation);\n\n          multiplyMatrix(transformation, parent._renderer.matrix, this._renderer.matrix);\n          this._renderer.scale = this._scale * parent._renderer.scale;\n\n        }\n\n        if (flagTexture) {\n\n          if (!this._renderer.rect) {\n            this._renderer.rect = {};\n          }\n\n          if (!this._renderer.triangles) {\n            this._renderer.triangles = new Two.Array(12);\n          }\n\n          this._renderer.opacity = this._opacity * parent._renderer.opacity;\n\n          webgl.text.getBoundingClientRect(this, this._renderer.rect);\n          webgl.getTriangles(this._renderer.rect, this._renderer.triangles);\n\n          webgl.updateBuffer.call(webgl, gl, this, program);\n          webgl.updateTexture.call(webgl, gl, this);\n\n        }\n\n        // if (this._mask) {\n        //   webgl[this._mask._renderer.type].render.call(mask, gl, program, this);\n        // }\n\n        if (this._clip && !forcedParent) {\n          return;\n        }\n\n        // Draw Texture\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._renderer.textureCoordsBuffer);\n\n        gl.vertexAttribPointer(program.textureCoords, 2, gl.FLOAT, false, 0, 0);\n\n        gl.bindTexture(gl.TEXTURE_2D, this._renderer.texture);\n\n\n        // Draw Rect\n\n        gl.uniformMatrix3fv(program.matrix, false, this._renderer.matrix);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._renderer.buffer);\n\n        gl.vertexAttribPointer(program.position, 2, gl.FLOAT, false, 0, 0);\n\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    'linear-gradient': {\n\n      render: function(ctx, elem) {\n\n        if (!ctx.canvas.getContext('2d')) {\n          return;\n        }\n\n        this._update();\n\n        if (!this._renderer.effect || this._flagEndPoints || this._flagStops) {\n\n          this._renderer.effect = ctx.createLinearGradient(\n            this.left._x, this.left._y,\n            this.right._x, this.right._y\n          );\n\n          for (var i = 0; i < this.stops.length; i++) {\n            var stop = this.stops[i];\n            this._renderer.effect.addColorStop(stop._offset, stop._color);\n          }\n\n        }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    'radial-gradient': {\n\n      render: function(ctx, elem) {\n\n        if (!ctx.canvas.getContext('2d')) {\n          return;\n        }\n\n        this._update();\n\n        if (!this._renderer.effect || this._flagCenter || this._flagFocal\n            || this._flagRadius || this._flagStops) {\n\n          this._renderer.effect = ctx.createRadialGradient(\n            this.center._x, this.center._y, 0,\n            this.focal._x, this.focal._y, this._radius\n          );\n\n          for (var i = 0; i < this.stops.length; i++) {\n            var stop = this.stops[i];\n            this._renderer.effect.addColorStop(stop._offset, stop._color);\n          }\n\n        }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    texture: {\n\n      render: function(ctx, elem) {\n\n        if (!ctx.canvas.getContext('2d')) {\n          return;\n        }\n\n        this._update();\n\n        var image = this.image;\n        var repeat;\n\n        if (!this._renderer.effect || ((this._flagLoaded || this._flagRepeat) && this.loaded)) {\n          this._renderer.effect = ctx.createPattern(image, this._repeat);\n        }\n\n        if (this._flagOffset || this._flagLoaded || this._flagScale) {\n\n          if (!(this._renderer.offset instanceof Two.Vector)) {\n            this._renderer.offset = new Two.Vector();\n          }\n\n          this._renderer.offset.x = this._offset.x;\n          this._renderer.offset.y = this._offset.y;\n\n          if (image) {\n\n            this._renderer.offset.x -= image.width / 2;\n            this._renderer.offset.y += image.height / 2;\n\n            if (this._scale instanceof Two.Vector) {\n              this._renderer.offset.x *= this._scale.x;\n              this._renderer.offset.y *= this._scale.y;\n            } else {\n              this._renderer.offset.x *= this._scale;\n              this._renderer.offset.y *= this._scale;\n            }\n          }\n\n        }\n\n        if (this._flagScale || this._flagLoaded) {\n\n          if (!(this._renderer.scale instanceof Two.Vector)) {\n            this._renderer.scale = new Two.Vector();\n          }\n\n          if (this._scale instanceof Two.Vector) {\n            this._renderer.scale.copy(this._scale);\n          } else {\n            this._renderer.scale.set(this._scale, this._scale);\n          }\n\n        }\n\n        return this.flagReset();\n\n      }\n\n    },\n\n    getTriangles: function(rect, triangles) {\n\n      var top = rect.top,\n          left = rect.left,\n          right = rect.right,\n          bottom = rect.bottom;\n\n      // First Triangle\n\n      triangles[0] = left;\n      triangles[1] = top;\n\n      triangles[2] = right;\n      triangles[3] = top;\n\n      triangles[4] = left;\n      triangles[5] = bottom;\n\n      // Second Triangle\n\n      triangles[6] = left;\n      triangles[7] = bottom;\n\n      triangles[8] = right;\n      triangles[9] = top;\n\n      triangles[10] = right;\n      triangles[11] = bottom;\n\n    },\n\n    updateTexture: function(gl, elem) {\n\n      this[elem._renderer.type].updateCanvas.call(webgl, elem);\n\n      if (elem._renderer.texture) {\n        gl.deleteTexture(elem._renderer.texture);\n      }\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, elem._renderer.textureCoordsBuffer);\n\n      // TODO: Is this necessary every time or can we do once?\n      // TODO: Create a registry for textures\n      elem._renderer.texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, elem._renderer.texture);\n\n      // Set the parameters so we can render any size image.\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n      if (this.canvas.width <= 0 || this.canvas.height <= 0) {\n        return;\n      }\n\n      // Upload the image into the texture.\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.canvas);\n\n    },\n\n    updateBuffer: function(gl, elem, program) {\n\n      if (_.isObject(elem._renderer.buffer)) {\n        gl.deleteBuffer(elem._renderer.buffer);\n      }\n\n      elem._renderer.buffer = gl.createBuffer();\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, elem._renderer.buffer);\n      gl.enableVertexAttribArray(program.position);\n\n      gl.bufferData(gl.ARRAY_BUFFER, elem._renderer.triangles, gl.STATIC_DRAW);\n\n      if (_.isObject(elem._renderer.textureCoordsBuffer)) {\n        gl.deleteBuffer(elem._renderer.textureCoordsBuffer);\n      }\n\n      elem._renderer.textureCoordsBuffer = gl.createBuffer();\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, elem._renderer.textureCoordsBuffer);\n      gl.enableVertexAttribArray(program.textureCoords);\n\n      gl.bufferData(gl.ARRAY_BUFFER, this.uv, gl.STATIC_DRAW);\n\n    },\n\n    program: {\n\n      create: function(gl, shaders) {\n        var program, linked, error;\n        program = gl.createProgram();\n        _.each(shaders, function(s) {\n          gl.attachShader(program, s);\n        });\n\n        gl.linkProgram(program);\n        linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n          error = gl.getProgramInfoLog(program);\n          gl.deleteProgram(program);\n          throw new Two.Utils.Error('unable to link program: ' + error);\n        }\n\n        return program;\n\n      }\n\n    },\n\n    shaders: {\n\n      create: function(gl, source, type) {\n        var shader, compiled, error;\n        shader = gl.createShader(gl[type]);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n\n        compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n        if (!compiled) {\n          error = gl.getShaderInfoLog(shader);\n          gl.deleteShader(shader);\n          throw new Two.Utils.Error('unable to compile shader ' + shader + ': ' + error);\n        }\n\n        return shader;\n\n      },\n\n      types: {\n        vertex: 'VERTEX_SHADER',\n        fragment: 'FRAGMENT_SHADER'\n      },\n\n      vertex: [\n        'attribute vec2 a_position;',\n        'attribute vec2 a_textureCoords;',\n        '',\n        'uniform mat3 u_matrix;',\n        'uniform vec2 u_resolution;',\n        '',\n        'varying vec2 v_textureCoords;',\n        '',\n        'void main() {',\n        '   vec2 projected = (u_matrix * vec3(a_position, 1.0)).xy;',\n        '   vec2 normal = projected / u_resolution;',\n        '   vec2 clipspace = (normal * 2.0) - 1.0;',\n        '',\n        '   gl_Position = vec4(clipspace * vec2(1.0, -1.0), 0.0, 1.0);',\n        '   v_textureCoords = a_textureCoords;',\n        '}'\n      ].join('\\n'),\n\n      fragment: [\n        'precision mediump float;',\n        '',\n        'uniform sampler2D u_image;',\n        'varying vec2 v_textureCoords;',\n        '',\n        'void main() {',\n        '  gl_FragColor = texture2D(u_image, v_textureCoords);',\n        '}'\n      ].join('\\n')\n\n    },\n\n    TextureRegistry: new Two.Registry()\n\n  };\n\n  webgl.ctx = webgl.canvas.getContext('2d');\n\n  var Renderer = Two[Two.Types.webgl] = function(options) {\n\n    var params, gl, vs, fs;\n    this.domElement = options.domElement || document.createElement('canvas');\n\n    // Everything drawn on the canvas needs to come from the stage.\n    this.scene = new Two.Group();\n    this.scene.parent = this;\n\n    this._renderer = {\n      matrix: new Two.Array(identity),\n      scale: 1,\n      opacity: 1\n    };\n    this._flagMatrix = true;\n\n    // http://games.greggman.com/game/webgl-and-alpha/\n    // http://www.khronos.org/registry/webgl/specs/latest/#5.2\n    params = _.defaults(options || {}, {\n      antialias: false,\n      alpha: true,\n      premultipliedAlpha: true,\n      stencil: true,\n      preserveDrawingBuffer: true,\n      overdraw: false\n    });\n\n    this.overdraw = params.overdraw;\n\n    gl = this.ctx = this.domElement.getContext('webgl', params) ||\n      this.domElement.getContext('experimental-webgl', params);\n\n    if (!this.ctx) {\n      throw new Two.Utils.Error(\n        'unable to create a webgl context. Try using another renderer.');\n    }\n\n    // Compile Base Shaders to draw in pixel space.\n    vs = webgl.shaders.create(\n      gl, webgl.shaders.vertex, webgl.shaders.types.vertex);\n    fs = webgl.shaders.create(\n      gl, webgl.shaders.fragment, webgl.shaders.types.fragment);\n\n    this.program = webgl.program.create(gl, [vs, fs]);\n    gl.useProgram(this.program);\n\n    // Create and bind the drawing buffer\n\n    // look up where the vertex data needs to go.\n    this.program.position = gl.getAttribLocation(this.program, 'a_position');\n    this.program.matrix = gl.getUniformLocation(this.program, 'u_matrix');\n    this.program.textureCoords = gl.getAttribLocation(this.program, 'a_textureCoords');\n\n    // Copied from Three.js WebGLRenderer\n    gl.disable(gl.DEPTH_TEST);\n\n    // Setup some initial statements of the gl context\n    gl.enable(gl.BLEND);\n\n    // https://code.google.com/p/chromium/issues/detail?id=316393\n    // gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, gl.TRUE);\n\n    gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA,\n      gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n  };\n\n  _.extend(Renderer, {\n\n    Utils: webgl\n\n  });\n\n  _.extend(Renderer.prototype, Two.Utils.Events, {\n\n    setSize: function(width, height, ratio) {\n\n      this.width = width;\n      this.height = height;\n\n      this.ratio = _.isUndefined(ratio) ? getRatio(this.ctx) : ratio;\n\n      this.domElement.width = width * this.ratio;\n      this.domElement.height = height * this.ratio;\n\n      _.extend(this.domElement.style, {\n        width: width + 'px',\n        height: height + 'px'\n      });\n\n      width *= this.ratio;\n      height *= this.ratio;\n\n      // Set for this.stage parent scaling to account for HDPI\n      this._renderer.matrix[0] = this._renderer.matrix[4] = this._renderer.scale = this.ratio;\n\n      this._flagMatrix = true;\n\n      this.ctx.viewport(0, 0, width, height);\n\n      var resolutionLocation = this.ctx.getUniformLocation(\n        this.program, 'u_resolution');\n      this.ctx.uniform2f(resolutionLocation, width, height);\n\n      return this;\n\n    },\n\n    render: function() {\n\n      var gl = this.ctx;\n\n      if (!this.overdraw) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n      }\n\n      webgl.group.render.call(this.scene, gl, this.program);\n      this._flagMatrix = false;\n\n      return this;\n\n    }\n\n  });\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var _ = Two.Utils;\n\n  var Shape = Two.Shape = function() {\n\n    // Private object for renderer specific variables.\n    this._renderer = {};\n    this._renderer.flagMatrix = _.bind(Shape.FlagMatrix, this);\n    this.isShape = true;\n\n    this.id = Two.Identifier + Two.uniqueId();\n    this.classList = [];\n\n    // Define matrix properties which all inherited\n    // objects of Shape have.\n\n    this._matrix = new Two.Matrix();\n\n    this.translation = new Two.Vector();\n    this.rotation = 0;\n    this.scale = 1;\n\n  };\n\n  _.extend(Shape, {\n\n    FlagMatrix: function() {\n      this._flagMatrix = true;\n    },\n\n    MakeObservable: function(object) {\n\n      Object.defineProperty(object, 'translation', {\n        enumerable: true,\n        get: function() {\n          return this._translation;\n        },\n        set: function(v) {\n          if (this._translation) {\n            this._translation.unbind(Two.Events.change, this._renderer.flagMatrix);\n          }\n          this._translation = v;\n          this._translation.bind(Two.Events.change, this._renderer.flagMatrix);\n          Shape.FlagMatrix.call(this);\n        }\n      });\n\n      Object.defineProperty(object, 'rotation', {\n        enumerable: true,\n        get: function() {\n          return this._rotation;\n        },\n        set: function(v) {\n          this._rotation = v;\n          this._flagMatrix = true;\n        }\n      });\n\n      Object.defineProperty(object, 'scale', {\n        enumerable: true,\n        get: function() {\n          return this._scale;\n        },\n        set: function(v) {\n\n          if (this._scale instanceof Two.Vector) {\n            this._scale.unbind(Two.Events.change, this._renderer.flagMatrix);\n          }\n\n          this._scale = v;\n\n          if (this._scale instanceof Two.Vector) {\n            this._scale.bind(Two.Events.change, this._renderer.flagMatrix);\n          }\n\n          this._flagMatrix = true;\n          this._flagScale = true;\n\n        }\n      });\n\n    }\n\n  });\n\n  _.extend(Shape.prototype, Two.Utils.Events, {\n\n    // Flags\n\n    _flagMatrix: true,\n    _flagScale: false,\n\n    // _flagMask: false,\n    // _flagClip: false,\n\n    // Underlying Properties\n\n    _rotation: 0,\n    _scale: 1,\n    _translation: null,\n\n    // _mask: null,\n    // _clip: false,\n\n    addTo: function(group) {\n      group.add(this);\n      return this;\n    },\n\n    clone: function() {\n      var clone = new Shape();\n      clone.translation.copy(this.translation);\n      clone.rotation = this.rotation;\n      clone.scale = this.scale;\n      _.each(Shape.Properties, function(k) {\n        clone[k] = this[k];\n      }, this);\n      return clone._update();\n    },\n\n    /**\n     * To be called before render that calculates and collates all information\n     * to be as up-to-date as possible for the render. Called once a frame.\n     */\n    _update: function(deep) {\n\n      if (!this._matrix.manual && this._flagMatrix) {\n\n        this._matrix\n          .identity()\n          .translate(this.translation.x, this.translation.y);\n\n          if (this._scale instanceof Two.Vector) {\n            this._matrix.scale(this._scale.x, this._scale.y);\n          } else {\n            this._matrix.scale(this._scale);\n          }\n\n          this._matrix.rotate(this.rotation);\n\n      }\n\n      if (deep) {\n        // Bubble up to parents mainly for `getBoundingClientRect` method.\n        if (this.parent && this.parent._update) {\n          this.parent._update();\n        }\n      }\n\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagMatrix = this._flagScale = false;\n\n      return this;\n\n    }\n\n  });\n\n  Shape.MakeObservable(Shape.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  /**\n   * Constants\n   */\n\n  var min = Math.min, max = Math.max, round = Math.round,\n    getComputedMatrix = Two.Utils.getComputedMatrix;\n\n  var commands = {};\n  var _ = Two.Utils;\n\n  _.each(Two.Commands, function(v, k) {\n    commands[k] = new RegExp(v);\n  });\n\n  var Path = Two.Path = function(vertices, closed, curved, manual) {\n\n    Two.Shape.call(this);\n\n    this._renderer.type = 'path';\n    this._renderer.flagVertices = _.bind(Path.FlagVertices, this);\n    this._renderer.bindVertices = _.bind(Path.BindVertices, this);\n    this._renderer.unbindVertices = _.bind(Path.UnbindVertices, this);\n\n    this._renderer.flagFill = _.bind(Path.FlagFill, this);\n    this._renderer.flagStroke = _.bind(Path.FlagStroke, this);\n\n    this._closed = !!closed;\n    this._curved = !!curved;\n\n    this.beginning = 0;\n    this.ending = 1;\n\n    // Style properties\n\n    this.fill = '#fff';\n    this.stroke = '#000';\n    this.linewidth = 1.0;\n    this.opacity = 1.0;\n    this.visible = true;\n\n    this.cap = 'butt';      // Default of Adobe Illustrator\n    this.join = 'miter';    // Default of Adobe Illustrator\n    this.miter = 4;         // Default of Adobe Illustrator\n\n    this._vertices = [];\n    this.vertices = vertices;\n\n    // Determines whether or not two.js should calculate curves, lines, and\n    // commands automatically for you or to let the developer manipulate them\n    // for themselves.\n    this.automatic = !manual;\n\n  };\n\n  _.extend(Path, {\n\n    Properties: [\n      'fill',\n      'stroke',\n      'linewidth',\n      'opacity',\n      'visible',\n      'cap',\n      'join',\n      'miter',\n\n      'closed',\n      'curved',\n      'automatic',\n      'beginning',\n      'ending'\n    ],\n\n    FlagVertices: function() {\n      this._flagVertices = true;\n      this._flagLength = true;\n    },\n\n    BindVertices: function(items) {\n\n      // This function is called a lot\n      // when importing a large SVG\n      var i = items.length;\n      while (i--) {\n        items[i].bind(Two.Events.change, this._renderer.flagVertices);\n      }\n\n      this._renderer.flagVertices();\n\n    },\n\n    UnbindVertices: function(items) {\n\n      var i = items.length;\n      while (i--) {\n        items[i].unbind(Two.Events.change, this._renderer.flagVertices);\n      }\n\n      this._renderer.flagVertices();\n\n    },\n\n    FlagFill: function() {\n      this._flagFill = true;\n    },\n\n    FlagStroke: function() {\n      this._flagStroke = true;\n    },\n\n    MakeObservable: function(object) {\n\n      Two.Shape.MakeObservable(object);\n\n      // Only the 6 defined properties are flagged like this. The subsequent\n      // properties behave differently and need to be hand written.\n      _.each(Path.Properties.slice(2, 8), Two.Utils.defineProperty, object);\n\n      Object.defineProperty(object, 'fill', {\n        enumerable: true,\n        get: function() {\n          return this._fill;\n        },\n        set: function(f) {\n\n          if (this._fill instanceof Two.Gradient\n            || this._fill instanceof Two.LinearGradient\n            || this._fill instanceof Two.RadialGradient\n            || this._fill instanceof Two.Texture) {\n            this._fill.unbind(Two.Events.change, this._renderer.flagFill);\n          }\n\n          this._fill = f;\n          this._flagFill = true;\n\n          if (this._fill instanceof Two.Gradient\n            || this._fill instanceof Two.LinearGradient\n            || this._fill instanceof Two.RadialGradient\n            || this._fill instanceof Two.Texture) {\n            this._fill.bind(Two.Events.change, this._renderer.flagFill);\n          }\n\n        }\n      });\n\n      Object.defineProperty(object, 'stroke', {\n        enumerable: true,\n        get: function() {\n          return this._stroke;\n        },\n        set: function(f) {\n\n          if (this._stroke instanceof Two.Gradient\n            || this._stroke instanceof Two.LinearGradient\n            || this._stroke instanceof Two.RadialGradient\n            || this._stroke instanceof Two.Texture) {\n            this._stroke.unbind(Two.Events.change, this._renderer.flagStroke);\n          }\n\n          this._stroke = f;\n          this._flagStroke = true;\n\n          if (this._stroke instanceof Two.Gradient\n            || this._stroke instanceof Two.LinearGradient\n            || this._stroke instanceof Two.RadialGradient\n            || this._stroke instanceof Two.Texture) {\n            this._stroke.bind(Two.Events.change, this._renderer.flagStroke);\n          }\n\n        }\n      });\n\n      Object.defineProperty(object, 'length', {\n        get: function() {\n          if (this._flagLength) {\n            this._updateLength();\n          }\n          return this._length;\n        }\n      });\n\n      Object.defineProperty(object, 'closed', {\n        enumerable: true,\n        get: function() {\n          return this._closed;\n        },\n        set: function(v) {\n          this._closed = !!v;\n          this._flagVertices = true;\n        }\n      });\n\n      Object.defineProperty(object, 'curved', {\n        enumerable: true,\n        get: function() {\n          return this._curved;\n        },\n        set: function(v) {\n          this._curved = !!v;\n          this._flagVertices = true;\n        }\n      });\n\n      Object.defineProperty(object, 'automatic', {\n        enumerable: true,\n        get: function() {\n          return this._automatic;\n        },\n        set: function(v) {\n          if (v === this._automatic) {\n            return;\n          }\n          this._automatic = !!v;\n          var method = this._automatic ? 'ignore' : 'listen';\n          _.each(this.vertices, function(v) {\n            v[method]();\n          });\n        }\n      });\n\n      Object.defineProperty(object, 'beginning', {\n        enumerable: true,\n        get: function() {\n          return this._beginning;\n        },\n        set: function(v) {\n          this._beginning = v;\n          this._flagVertices = true;\n        }\n      });\n\n      Object.defineProperty(object, 'ending', {\n        enumerable: true,\n        get: function() {\n          return this._ending;\n        },\n        set: function(v) {\n          this._ending = v;\n          this._flagVertices = true;\n        }\n      });\n\n      Object.defineProperty(object, 'vertices', {\n\n        enumerable: true,\n\n        get: function() {\n          return this._collection;\n        },\n\n        set: function(vertices) {\n\n          var updateVertices = this._renderer.flagVertices;\n          var bindVertices = this._renderer.bindVertices;\n          var unbindVertices = this._renderer.unbindVertices;\n\n          // Remove previous listeners\n          if (this._collection) {\n            this._collection\n              .unbind(Two.Events.insert, bindVertices)\n              .unbind(Two.Events.remove, unbindVertices);\n          }\n\n          // Create new Collection with copy of vertices\n          this._collection = new Two.Utils.Collection((vertices || []).slice(0));\n\n          // Listen for Collection changes and bind / unbind\n          this._collection\n            .bind(Two.Events.insert, bindVertices)\n            .bind(Two.Events.remove, unbindVertices);\n\n          // Bind Initial Vertices\n          bindVertices(this._collection);\n\n        }\n\n      });\n\n      Object.defineProperty(object, 'clip', {\n        enumerable: true,\n        get: function() {\n          return this._clip;\n        },\n        set: function(v) {\n          this._clip = v;\n          this._flagClip = true;\n        }\n      });\n\n    }\n\n  });\n\n  _.extend(Path.prototype, Two.Shape.prototype, {\n\n    // Flags\n    // http://en.wikipedia.org/wiki/Flag\n\n    _flagVertices: true,\n    _flagLength: true,\n\n    _flagFill: true,\n    _flagStroke: true,\n    _flagLinewidth: true,\n    _flagOpacity: true,\n    _flagVisible: true,\n\n    _flagCap: true,\n    _flagJoin: true,\n    _flagMiter: true,\n\n    _flagClip: false,\n\n    // Underlying Properties\n\n    _length: 0,\n\n    _fill: '#fff',\n    _stroke: '#000',\n    _linewidth: 1.0,\n    _opacity: 1.0,\n    _visible: true,\n\n    _cap: 'round',\n    _join: 'round',\n    _miter: 4,\n\n    _closed: true,\n    _curved: false,\n    _automatic: true,\n    _beginning: 0,\n    _ending: 1.0,\n\n    _clip: false,\n\n    clone: function(parent) {\n\n      parent = parent || this.parent;\n\n      var points = _.map(this.vertices, function(v) {\n        return v.clone();\n      });\n\n      var clone = new Path(points, this.closed, this.curved, !this.automatic);\n\n      _.each(Two.Path.Properties, function(k) {\n        clone[k] = this[k];\n      }, this);\n\n      clone.translation.copy(this.translation);\n      clone.rotation = this.rotation;\n      clone.scale = this.scale;\n\n      if (parent) {\n        parent.add(clone);\n      }\n\n      return clone;\n\n    },\n\n    toObject: function() {\n\n      var result = {\n        vertices: _.map(this.vertices, function(v) {\n          return v.toObject();\n        })\n      };\n\n      _.each(Two.Shape.Properties, function(k) {\n        result[k] = this[k];\n      }, this);\n\n      result.translation = this.translation.toObject;\n      result.rotation = this.rotation;\n      result.scale = this.scale;\n\n      return result;\n\n    },\n\n    noFill: function() {\n      this.fill = 'transparent';\n      return this;\n    },\n\n    noStroke: function() {\n      this.stroke = 'transparent';\n      return this;\n    },\n\n    /**\n     * Orient the vertices of the shape to the upper lefthand\n     * corner of the path.\n     */\n    corner: function() {\n\n      var rect = this.getBoundingClientRect(true);\n\n      rect.centroid = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2\n      };\n\n      _.each(this.vertices, function(v) {\n        v.addSelf(rect.centroid);\n      });\n\n      return this;\n\n    },\n\n    /**\n     * Orient the vertices of the shape to the center of the\n     * path.\n     */\n    center: function() {\n\n      var rect = this.getBoundingClientRect(true);\n\n      rect.centroid = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2\n      };\n\n      _.each(this.vertices, function(v) {\n        v.subSelf(rect.centroid);\n      });\n\n      // this.translation.addSelf(rect.centroid);\n\n      return this;\n\n    },\n\n    /**\n     * Remove self from the scene / parent.\n     */\n    remove: function() {\n\n      if (!this.parent) {\n        return this;\n      }\n\n      this.parent.remove(this);\n\n      return this;\n\n    },\n\n    /**\n     * Return an object with top, left, right, bottom, width, and height\n     * parameters of the group.\n     */\n    getBoundingClientRect: function(shallow) {\n      var matrix, border, l, x, y, i, v;\n\n      var left = Infinity, right = -Infinity,\n          top = Infinity, bottom = -Infinity;\n\n      // TODO: Update this to not __always__ update. Just when it needs to.\n      this._update(true);\n\n      matrix = !!shallow ? this._matrix : getComputedMatrix(this);\n\n      border = this.linewidth / 2;\n      l = this._vertices.length;\n\n      if (l <= 0) {\n        v = matrix.multiply(0, 0, 1);\n        return {\n          top: v.y,\n          left: v.x,\n          right: v.x,\n          bottom: v.y,\n          width: 0,\n          height: 0\n        };\n      }\n\n      for (i = 0; i < l; i++) {\n        v = this._vertices[i];\n\n        x = v.x;\n        y = v.y;\n\n        v = matrix.multiply(x, y, 1);\n        top = min(v.y - border, top);\n        left = min(v.x - border, left);\n        right = max(v.x + border, right);\n        bottom = max(v.y + border, bottom);\n      }\n\n      return {\n        top: top,\n        left: left,\n        right: right,\n        bottom: bottom,\n        width: right - left,\n        height: bottom - top\n      };\n\n    },\n\n    /**\n     * Given a float `t` from 0 to 1, return a point or assign a passed `obj`'s\n     * coordinates to that percentage on this Two.Path's curve.\n     */\n    getPointAt: function(t, obj) {\n      var ia, ib;\n      var x, x1, x2, x3, x4, y, y1, y2, y3, y4, left, right;\n      var target = this.length * Math.min(Math.max(t, 0), 1);\n      var length = this.vertices.length;\n      var last = length - 1;\n\n      var a = null;\n      var b = null;\n\n      for (var i = 0, l = this._lengths.length, sum = 0; i < l; i++) {\n\n        if (sum + this._lengths[i] >= target) {\n\n          if (this._closed) {\n            ia = Two.Utils.mod(i, length);\n            ib = Two.Utils.mod(i - 1, length);\n            if (i === 0) {\n              ia = ib;\n              ib = i;\n            }\n          } else {\n            ia = i;\n            ib = Math.min(Math.max(i - 1, 0), last);\n          }\n\n          a = this.vertices[ia];\n          b = this.vertices[ib];\n          target -= sum;\n          if (this._lengths[i] !== 0) {\n            t = target / this._lengths[i];\n          }\n\n          break;\n\n        }\n\n        sum += this._lengths[i];\n\n      }\n\n      // console.log(sum, a.command, b.command);\n\n      if (_.isNull(a) || _.isNull(b)) {\n        return null;\n      }\n\n      right = b.controls && b.controls.right;\n      left = a.controls && a.controls.left;\n\n      x1 = b.x;\n      y1 = b.y;\n      x2 = (right || b).x;\n      y2 = (right || b).y;\n      x3 = (left || a).x;\n      y3 = (left || a).y;\n      x4 = a.x;\n      y4 = a.y;\n\n      if (right && b._relative) {\n        x2 += b.x;\n        y2 += b.y;\n      }\n\n      if (left && a._relative) {\n        x3 += a.x;\n        y3 += a.y;\n      }\n\n      x = Two.Utils.getPointOnCubicBezier(t, x1, x2, x3, x4);\n      y = Two.Utils.getPointOnCubicBezier(t, y1, y2, y3, y4);\n\n      if (_.isObject(obj)) {\n        obj.x = x;\n        obj.y = y;\n        return obj;\n      }\n\n      return new Two.Vector(x, y);\n\n    },\n\n    /**\n     * Based on closed / curved and sorting of vertices plot where all points\n     * should be and where the respective handles should be too.\n     */\n    plot: function() {\n\n      if (this.curved) {\n        Two.Utils.getCurveFromPoints(this._vertices, this.closed);\n        return this;\n      }\n\n      for (var i = 0; i < this._vertices.length; i++) {\n        this._vertices[i]._command = i === 0 ? Two.Commands.move : Two.Commands.line;\n      }\n\n      return this;\n\n    },\n\n    subdivide: function(limit) {\n      //TODO: DRYness (function below)\n      this._update();\n\n      var last = this.vertices.length - 1;\n      var b = this.vertices[last];\n      var closed = this._closed || this.vertices[last]._command === Two.Commands.close;\n      var points = [];\n      _.each(this.vertices, function(a, i) {\n\n        if (i <= 0 && !closed) {\n          b = a;\n          return;\n        }\n\n        if (a.command === Two.Commands.move) {\n          points.push(new Two.Anchor(b.x, b.y));\n          if (i > 0) {\n            points[points.length - 1].command = Two.Commands.line;\n          }\n          b = a;\n          return;\n        }\n\n        var verts = getSubdivisions(a, b, limit);\n        points = points.concat(verts);\n\n        // Assign commands to all the verts\n        _.each(verts, function(v, i) {\n          if (i <= 0 && b.command === Two.Commands.move) {\n            v.command = Two.Commands.move;\n          } else {\n            v.command = Two.Commands.line;\n          }\n        });\n\n        if (i >= last) {\n\n          // TODO: Add check if the two vectors in question are the same values.\n          if (this._closed && this._automatic) {\n\n            b = a;\n\n            verts = getSubdivisions(a, b, limit);\n            points = points.concat(verts);\n\n            // Assign commands to all the verts\n            _.each(verts, function(v, i) {\n              if (i <= 0 && b.command === Two.Commands.move) {\n                v.command = Two.Commands.move;\n              } else {\n                v.command = Two.Commands.line;\n              }\n            });\n\n          } else if (closed) {\n            points.push(new Two.Anchor(a.x, a.y));\n          }\n\n          points[points.length - 1].command = closed ? Two.Commands.close : Two.Commands.line;\n\n        }\n\n        b = a;\n\n      }, this);\n\n      this._automatic = false;\n      this._curved = false;\n      this.vertices = points;\n\n      return this;\n\n    },\n\n    _updateLength: function(limit) {\n      //TODO: DRYness (function above)\n      this._update();\n\n      var length = this.vertices.length;\n      var last = length - 1;\n      var b = this.vertices[last];\n      var closed = this._closed || this.vertices[last]._command === Two.Commands.close;\n      var sum = 0;\n\n      if (_.isUndefined(this._lengths)) {\n        this._lengths = [];\n      }\n\n      _.each(this.vertices, function(a, i) {\n\n        if ((i <= 0 && !closed) || a.command === Two.Commands.move) {\n          b = a;\n          this._lengths[i] = 0;\n          return;\n        }\n\n        this._lengths[i] = getCurveLength(a, b, limit);\n        sum += this._lengths[i];\n\n        if (i >= last && closed) {\n\n          b = this.vertices[(i + 1) % length];\n\n          this._lengths[i + 1] = getCurveLength(a, b, limit);\n          sum += this._lengths[i + 1];\n\n        }\n\n        b = a;\n\n      }, this);\n\n      this._length = sum;\n\n      return this;\n\n    },\n\n    _update: function() {\n\n      if (this._flagVertices) {\n\n        var l = this.vertices.length;\n        var last = l - 1, v;\n\n        // TODO: Should clamp this so that `ia` and `ib`\n        // cannot select non-verts.\n        var ia = round((this._beginning) * last);\n        var ib = round((this._ending) * last);\n\n        this._vertices.length = 0;\n\n        for (var i = ia; i < ib + 1; i++) {\n          v = this.vertices[i];\n          this._vertices.push(v);\n        }\n\n        if (this._automatic) {\n          this.plot();\n        }\n\n      }\n\n      Two.Shape.prototype._update.apply(this, arguments);\n\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagVertices =  this._flagFill =  this._flagStroke =\n         this._flagLinewidth = this._flagOpacity = this._flagVisible =\n         this._flagCap = this._flagJoin = this._flagMiter =\n         this._flagClip = false;\n\n      Two.Shape.prototype.flagReset.call(this);\n\n      return this;\n\n    }\n\n  });\n\n  Path.MakeObservable(Path.prototype);\n\n  /**\n   * Utility functions\n   */\n\n  function getCurveLength(a, b, limit) {\n    // TODO: DRYness\n    var x1, x2, x3, x4, y1, y2, y3, y4;\n\n    var right = b.controls && b.controls.right;\n    var left = a.controls && a.controls.left;\n\n    x1 = b.x;\n    y1 = b.y;\n    x2 = (right || b).x;\n    y2 = (right || b).y;\n    x3 = (left || a).x;\n    y3 = (left || a).y;\n    x4 = a.x;\n    y4 = a.y;\n\n    if (right && b._relative) {\n      x2 += b.x;\n      y2 += b.y;\n    }\n\n    if (left && a._relative) {\n      x3 += a.x;\n      y3 += a.y;\n    }\n\n    return Two.Utils.getCurveLength(x1, y1, x2, y2, x3, y3, x4, y4, limit);\n\n  }\n\n  function getSubdivisions(a, b, limit) {\n    // TODO: DRYness\n    var x1, x2, x3, x4, y1, y2, y3, y4;\n\n    var right = b.controls && b.controls.right;\n    var left = a.controls && a.controls.left;\n\n    x1 = b.x;\n    y1 = b.y;\n    x2 = (right || b).x;\n    y2 = (right || b).y;\n    x3 = (left || a).x;\n    y3 = (left || a).y;\n    x4 = a.x;\n    y4 = a.y;\n\n    if (right && b._relative) {\n      x2 += b.x;\n      y2 += b.y;\n    }\n\n    if (left && a._relative) {\n      x3 += a.x;\n      y3 += a.y;\n    }\n\n    return Two.Utils.subdivide(x1, y1, x2, y2, x3, y3, x4, y4, limit);\n\n  }\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var Path = Two.Path;\n  var _ = Two.Utils;\n\n  var Line = Two.Line = function(x1, y1, x2, y2) {\n\n    var width = x2 - x1;\n    var height = y2 - y1;\n\n    var w2 = width / 2;\n    var h2 = height / 2;\n\n    Path.call(this, [\n        new Two.Anchor(- w2, - h2),\n        new Two.Anchor(w2, h2)\n    ]);\n\n    this.translation.set(x1 + w2, y1 + h2);\n\n  };\n\n  _.extend(Line.prototype, Path.prototype);\n\n  Path.MakeObservable(Line.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var Path = Two.Path;\n  var _ = Two.Utils;\n\n  var Rectangle = Two.Rectangle = function(x, y, width, height) {\n\n    Path.call(this, [\n      new Two.Anchor(),\n      new Two.Anchor(),\n      new Two.Anchor(),\n      new Two.Anchor()\n    ], true);\n\n    this.width = width;\n    this.height = height;\n    this._update();\n\n    this.translation.set(x, y);\n\n  };\n\n  _.extend(Rectangle, {\n\n    Properties: ['width', 'height'],\n\n    MakeObservable: function(obj) {\n      Path.MakeObservable(obj);\n      _.each(Rectangle.Properties, Two.Utils.defineProperty, obj);\n    }\n\n  });\n\n  _.extend(Rectangle.prototype, Path.prototype, {\n\n    _width: 0,\n    _height: 0,\n\n    _flagWidth: 0,\n    _flagHeight: 0,\n\n    _update: function() {\n\n      if (this._flagWidth || this._flagHeight) {\n\n        var xr = this._width / 2;\n        var yr = this._height / 2;\n\n        this.vertices[0].set(-xr, -yr);\n        this.vertices[1].set(xr, -yr);\n        this.vertices[2].set(xr, yr);\n        this.vertices[3].set(-xr, yr);\n\n      }\n\n      Path.prototype._update.call(this);\n\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagWidth = this._flagHeight = false;\n      Path.prototype.flagReset.call(this);\n\n      return this;\n\n    }\n\n  });\n\n  Rectangle.MakeObservable(Rectangle.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var Path = Two.Path, TWO_PI = Math.PI * 2, cos = Math.cos, sin = Math.sin;\n  var _ = Two.Utils;\n\n  var Ellipse = Two.Ellipse = function(ox, oy, rx, ry) {\n\n    if (!_.isNumber(ry)) {\n      ry = rx;\n    }\n\n    var amount = Two.Resolution;\n\n    var points = _.map(_.range(amount), function(i) {\n      return new Two.Anchor();\n    }, this);\n\n    Path.call(this, points, true, true);\n\n    this.width = rx * 2;\n    this.height = ry * 2;\n\n    this._update();\n    this.translation.set(ox, oy);\n\n  };\n\n  _.extend(Ellipse, {\n\n    Properties: ['width', 'height'],\n\n    MakeObservable: function(obj) {\n\n      Path.MakeObservable(obj);\n      _.each(Ellipse.Properties, Two.Utils.defineProperty, obj);\n\n    }\n\n  });\n\n  _.extend(Ellipse.prototype, Path.prototype, {\n\n    _width: 0,\n    _height: 0,\n\n    _flagWidth: false,\n    _flagHeight: false,\n\n    _update: function() {\n\n      if (this._flagWidth || this._flagHeight) {\n        for (var i = 0, l = this.vertices.length; i < l; i++) {\n          var pct = i / l;\n          var theta = pct * TWO_PI;\n          var x = this._width * cos(theta) / 2;\n          var y = this._height * sin(theta) / 2;\n          this.vertices[i].set(x, y);\n        }\n      }\n\n      Path.prototype._update.call(this);\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagWidth = this._flagHeight = false;\n\n      Path.prototype.flagReset.call(this);\n      return this;\n\n    }\n\n  });\n\n  Ellipse.MakeObservable(Ellipse.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var Path = Two.Path, TWO_PI = Math.PI * 2, cos = Math.cos, sin = Math.sin;\n  var _ = Two.Utils;\n\n  var Circle = Two.Circle = function(ox, oy, r) {\n\n    var amount = Two.Resolution;\n\n    var points = _.map(_.range(amount), function(i) {\n      return new Two.Anchor();\n    }, this);\n\n    Path.call(this, points, true, true);\n\n    this.radius = r;\n\n    this._update();\n    this.translation.set(ox, oy);\n\n  };\n\n  _.extend(Circle, {\n\n    Properties: ['radius'],\n\n    MakeObservable: function(obj) {\n\n      Path.MakeObservable(obj);\n      _.each(Circle.Properties, Two.Utils.defineProperty, obj);\n\n    }\n\n  });\n\n  _.extend(Circle.prototype, Path.prototype, {\n\n    _radius: 0,\n    _flagRadius: false,\n\n    _update: function() {\n\n      if (this._flagRadius) {\n        for (var i = 0, l = this.vertices.length; i < l; i++) {\n          var pct = i / l;\n          var theta = pct * TWO_PI;\n          var x = this._radius * cos(theta);\n          var y = this._radius * sin(theta);\n          this.vertices[i].set(x, y);\n        }\n      }\n\n      Path.prototype._update.call(this);\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagRadius = false;\n\n      Path.prototype.flagReset.call(this);\n      return this;\n\n    }\n\n  });\n\n  Circle.MakeObservable(Circle.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var Path = Two.Path, TWO_PI = Math.PI * 2, cos = Math.cos, sin = Math.sin;\n  var _ = Two.Utils;\n\n  var Polygon = Two.Polygon = function(ox, oy, r, sides) {\n\n    sides = Math.max(sides || 0, 3);\n\n    var points = _.map(_.range(sides), function(i) {\n      return new Two.Anchor();\n    });\n\n    Path.call(this, points, true);\n\n    this.width = r * 2;\n    this.height = r * 2;\n    this.sides = sides;\n\n    this._update();\n    this.translation.set(ox, oy);\n\n  };\n\n  _.extend(Polygon, {\n\n    Properties: ['width', 'height', 'sides'],\n\n    MakeObservable: function(obj) {\n\n      Path.MakeObservable(obj);\n      _.each(Polygon.Properties, Two.Utils.defineProperty, obj);\n\n    }\n\n  });\n\n  _.extend(Polygon.prototype, Path.prototype, {\n\n    _width: 0,\n    _height: 0,\n    _sides: 0,\n\n    _flagWidth: false,\n    _flagHeight: false,\n    _flagSides: false,\n\n    _update: function() {\n\n      if (this._flagWidth || this._flagHeight || this._flagSides) {\n\n        var sides = this._sides;\n        var amount = this.vertices.length;\n\n        if (amount > sides) {\n          this.vertices.splice(sides - 1, amount - sides);\n        }\n\n        for (var i = 0; i < sides; i++) {\n\n          var pct = (i + 0.5) / sides;\n          var theta = TWO_PI * pct + Math.PI / 2;\n          var x = this._width * cos(theta);\n          var y = this._height * sin(theta);\n\n          if (i >= amount) {\n            this.vertices.push(new Two.Anchor(x, y));\n          } else {\n            this.vertices[i].set(x, y);\n          }\n\n        }\n\n      }\n\n      Path.prototype._update.call(this);\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagWidth = this._flagHeight = this._flagSides = false;\n      Path.prototype.flagReset.call(this);\n\n      return this;\n\n    }\n\n  });\n\n  Polygon.MakeObservable(Polygon.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var Path = Two.Path, PI = Math.PI, TWO_PI = Math.PI * 2, HALF_PI = Math.PI / 2,\n    cos = Math.cos, sin = Math.sin, abs = Math.abs, _ = Two.Utils;\n\n  var ArcSegment = Two.ArcSegment = function(ox, oy, ir, or, sa, ea, res) {\n\n    var points = _.map(_.range(res || (Two.Resolution * 3)), function() {\n      return new Two.Anchor();\n    });\n\n    Path.call(this, points, false, false, true);\n\n    this.innerRadius = ir;\n    this.outerRadius = or;\n\n    this.startAngle = sa;\n    this.endAngle = ea;\n\n    this._update();\n    this.translation.set(ox, oy);\n\n  }\n\n  _.extend(ArcSegment, {\n\n    Properties: ['startAngle', 'endAngle', 'innerRadius', 'outerRadius'],\n\n    MakeObservable: function(obj) {\n\n      Path.MakeObservable(obj);\n      _.each(ArcSegment.Properties, Two.Utils.defineProperty, obj);\n\n    }\n\n  });\n\n  _.extend(ArcSegment.prototype, Path.prototype, {\n\n    _flagStartAngle: false,\n    _flagEndAngle: false,\n    _flagInnerRadius: false,\n    _flagOuterRadius: false,\n\n    _startAngle: 0,\n    _endAngle: TWO_PI,\n    _innerRadius: 0,\n    _outerRadius: 0,\n\n    _update: function() {\n\n      if (this._flagStartAngle || this._flagEndAngle || this._flagInnerRadius\n        || this._flagOuterRadius) {\n\n        var sa = this._startAngle;\n        var ea = this._endAngle;\n\n        var ir = this._innerRadius;\n        var or = this._outerRadius;\n\n        var connected = mod(sa, TWO_PI) === mod(ea, TWO_PI);\n        var punctured = ir > 0;\n\n        var vertices = this.vertices;\n        var length = (punctured ? vertices.length / 2 : vertices.length);\n        var command, id = 0;\n\n        if (connected) {\n          length--;\n        } else if (!punctured) {\n          length -= 2;\n        }\n\n        /**\n         * Outer Circle\n         */\n        for (var i = 0, last = length - 1; i < length; i++) {\n\n          var pct = i / last;\n          var v = vertices[id];\n          var theta = pct * (ea - sa) + sa;\n          var step = (ea - sa) / length;\n\n          var x = or * Math.cos(theta);\n          var y = or * Math.sin(theta);\n\n          switch (i) {\n            case 0:\n              command = Two.Commands.move;\n              break;\n            default:\n              command = Two.Commands.curve;\n          }\n\n          v.command = command;\n          v.x = x;\n          v.y = y;\n          v.controls.left.clear();\n          v.controls.right.clear();\n\n          if (v.command === Two.Commands.curve) {\n            var amp = or * step / Math.PI;\n            v.controls.left.x = amp * Math.cos(theta - HALF_PI);\n            v.controls.left.y = amp * Math.sin(theta - HALF_PI);\n            v.controls.right.x = amp * Math.cos(theta + HALF_PI);\n            v.controls.right.y = amp * Math.sin(theta + HALF_PI);\n            if (i === 1) {\n              v.controls.left.multiplyScalar(2);\n            }\n            if (i === last) {\n              v.controls.right.multiplyScalar(2);\n            }\n          }\n\n          id++;\n\n        }\n\n        if (punctured) {\n\n          if (connected) {\n            vertices[id].command = Two.Commands.close;\n            id++;\n          } else {\n            length--;\n            last = length - 1;\n          }\n\n          /**\n           * Inner Circle\n           */\n          for (i = 0; i < length; i++) {\n\n            pct = i / last;\n            v = vertices[id];\n            theta = (1 - pct) * (ea - sa) + sa;\n            step = (ea - sa) / length;\n\n            x = ir * Math.cos(theta);\n            y = ir * Math.sin(theta);\n            command = Two.Commands.curve;\n            if (i <= 0) {\n              command = connected ? Two.Commands.move : Two.Commands.line;\n            }\n\n            v.command = command;\n            v.x = x;\n            v.y = y;\n            v.controls.left.clear();\n            v.controls.right.clear();\n\n            if (v.command === Two.Commands.curve) {\n              amp = ir * step / Math.PI;\n              v.controls.left.x = amp * Math.cos(theta + HALF_PI);\n              v.controls.left.y = amp * Math.sin(theta + HALF_PI);\n              v.controls.right.x = amp * Math.cos(theta - HALF_PI);\n              v.controls.right.y = amp * Math.sin(theta - HALF_PI);\n              if (i === 1) {\n                v.controls.left.multiplyScalar(2);\n              }\n              if (i === last) {\n                v.controls.right.multiplyScalar(2);\n              }\n            }\n\n            id++;\n\n          }\n\n        } else if (!connected) {\n\n          vertices[id].command = Two.Commands.line;\n          vertices[id].x = 0;\n          vertices[id].y = 0;\n          id++;\n\n        }\n\n        /**\n         * Final Point\n         */\n        vertices[id].command = Two.Commands.close;\n\n      }\n\n      Path.prototype._update.call(this);\n\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      Path.prototype.flagReset.call(this);\n\n      this._flagStartAngle = this._flagEndAngle\n        = this._flagInnerRadius = this._flagOuterRadius = false;\n\n      return this;\n\n    }\n\n  });\n\n  ArcSegment.MakeObservable(ArcSegment.prototype);\n\n  function mod(v, l) {\n    while (v < 0) {\n      v += l;\n    }\n    return v % l;\n  }\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var Path = Two.Path, TWO_PI = Math.PI * 2, cos = Math.cos, sin = Math.sin;\n  var _ = Two.Utils;\n\n  var Star = Two.Star = function(ox, oy, or, ir, sides) {\n\n    if (!_.isNumber(ir)) {\n      ir = or / 2;\n    }\n\n    if (!_.isNumber(sides) || sides <= 0) {\n      sides = 5;\n    }\n\n    var length = sides * 2;\n\n    var points = _.map(_.range(length), function(i) {\n      return new Two.Anchor();\n    });\n\n    Path.call(this, points, true);\n\n    this.innerRadius = ir;\n    this.outerRadius = or;\n    this.sides = sides;\n\n    this._update();\n    this.translation.set(ox, oy);\n\n  };\n\n  _.extend(Star, {\n\n    Properties: ['innerRadius', 'outerRadius', 'sides'],\n\n    MakeObservable: function(obj) {\n\n      Path.MakeObservable(obj);\n      _.each(Star.Properties, Two.Utils.defineProperty, obj);\n\n    }\n\n  });\n\n  _.extend(Star.prototype, Path.prototype, {\n\n    _innerRadius: 0,\n    _outerRadius: 0,\n    _sides: 0,\n\n    _flagInnerRadius: false,\n    _flagOuterRadius: false,\n    _flagSides: false,\n\n    _update: function() {\n\n      if (this._flagInnerRadius || this._flagOuterRadius || this._flagSides) {\n\n        var sides = this._sides * 2;\n        var amount = this.vertices.length;\n\n        if (amount > sides) {\n          this.vertices.splice(sides - 1, amount - sides);\n        }\n\n        for (var i = 0; i < sides; i++) {\n\n          var pct = (i + 0.5) / sides;\n          var theta = TWO_PI * pct;\n          var r = (i % 2 ? this._innerRadius : this._outerRadius);\n          var x = r * cos(theta);\n          var y = r * sin(theta);\n\n          if (i >= amount) {\n            this.vertices.push(new Two.Anchor(x, y));\n          } else {\n            this.vertices[i].set(x, y);\n          }\n\n        }\n\n      }\n\n      Path.prototype._update.call(this);\n\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagInnerRadius = this._flagOuterRadius = this._flagSides = false;\n      Path.prototype.flagReset.call(this);\n\n      return this;\n\n    }\n\n  });\n\n  Star.MakeObservable(Star.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var Path = Two.Path;\n  var _ = Two.Utils;\n\n  var RoundedRectangle = Two.RoundedRectangle = function(ox, oy, width, height, radius) {\n\n    if (!_.isNumber(radius)) {\n      radius = Math.floor(Math.min(width, height) / 12);\n    }\n\n    var amount = 10;\n\n    var points = _.map(_.range(amount), function(i) {\n      return new Two.Anchor(0, 0, 0, 0, 0, 0,\n        i === 0 ? Two.Commands.move : Two.Commands.curve);\n    });\n\n    points[points.length - 1].command = Two.Commands.close;\n\n    Path.call(this, points, false, false, true);\n\n    this.width = width;\n    this.height = height;\n    this.radius = radius;\n\n    this._update();\n    this.translation.set(ox, oy);\n\n  };\n\n  _.extend(RoundedRectangle, {\n\n    Properties: ['width', 'height', 'radius'],\n\n    MakeObservable: function(obj) {\n\n      Path.MakeObservable(obj);\n      _.each(RoundedRectangle.Properties, Two.Utils.defineProperty, obj);\n\n    }\n\n  });\n\n  _.extend(RoundedRectangle.prototype, Path.prototype, {\n\n    _width: 0,\n    _height: 0,\n    _radius: 0,\n\n    _flagWidth: false,\n    _flagHeight: false,\n    _flagRadius: false,\n\n    _update: function() {\n\n      if (this._flagWidth || this._flagHeight || this._flagRadius) {\n\n        var width = this._width;\n        var height = this._height;\n        var radius = Math.min(Math.max(this._radius, 0),\n          Math.min(width, height));\n\n        var v;\n        var w = width / 2;\n        var h = height / 2;\n\n        v = this.vertices[0];\n        v.x = - (w - radius);\n        v.y = - h;\n\n        // Upper Right Corner\n\n        v = this.vertices[1];\n        v.x = (w - radius);\n        v.y = - h;\n        v.controls.left.clear();\n        v.controls.right.x = radius;\n        v.controls.right.y = 0;\n\n        v = this.vertices[2];\n        v.x = w;\n        v.y = - (h - radius);\n        v.controls.right.clear();\n        v.controls.left.clear();\n\n        // Bottom Right Corner\n\n        v = this.vertices[3];\n        v.x = w;\n        v.y = (h - radius);\n        v.controls.left.clear();\n        v.controls.right.x = 0;\n        v.controls.right.y = radius;\n\n        v = this.vertices[4];\n        v.x = (w - radius);\n        v.y = h;\n        v.controls.right.clear();\n        v.controls.left.clear();\n\n        // Bottom Left Corner\n\n        v = this.vertices[5];\n        v.x = - (w - radius);\n        v.y = h;\n        v.controls.left.clear();\n        v.controls.right.x = - radius;\n        v.controls.right.y = 0;\n\n        v = this.vertices[6];\n        v.x = - w;\n        v.y = (h - radius);\n        v.controls.left.clear();\n        v.controls.right.clear();\n\n        // Upper Left Corner\n\n        v = this.vertices[7];\n        v.x = - w;\n        v.y = - (h - radius);\n        v.controls.left.clear();\n        v.controls.right.x = 0;\n        v.controls.right.y = - radius;\n\n        v = this.vertices[8];\n        v.x = - (w - radius);\n        v.y = - h;\n        v.controls.left.clear();\n        v.controls.right.clear();\n\n        v = this.vertices[9];\n        v.copy(this.vertices[8]);\n\n      }\n\n      Path.prototype._update.call(this);\n\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagWidth = this._flagHeight = this._flagRadius = false;\n      Path.prototype.flagReset.call(this);\n\n      return this;\n\n    }\n\n  });\n\n  RoundedRectangle.MakeObservable(RoundedRectangle.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var root = Two.root;\n  var getComputedMatrix = Two.Utils.getComputedMatrix;\n  var _ = Two.Utils;\n\n  var canvas = (root.document ? root.document.createElement('canvas') : { getContext: _.identity });\n  var ctx = canvas.getContext('2d');\n\n  var Text = Two.Text = function(message, x, y, styles) {\n\n    Two.Shape.call(this);\n\n    this._renderer.type = 'text';\n    this._renderer.flagFill = _.bind(Text.FlagFill, this);\n    this._renderer.flagStroke = _.bind(Text.FlagStroke, this);\n\n    this.value = message;\n\n    if (_.isNumber(x)) {\n        this.translation.x = x;\n    }\n    if (_.isNumber(y)) {\n        this.translation.y = y;\n    }\n\n    if (!_.isObject(styles)) {\n      return this;\n    }\n\n    _.each(Two.Text.Properties, function(property) {\n\n      if (property in styles) {\n        this[property] = styles[property];\n      }\n\n    }, this);\n\n  };\n\n  _.extend(Two.Text, {\n\n    Properties: [\n      'value', 'family', 'size', 'leading', 'alignment', 'linewidth', 'style',\n      'weight', 'decoration', 'baseline', 'opacity', 'visible', 'fill', 'stroke'\n    ],\n\n    FlagFill: function() {\n      this._flagFill = true;\n    },\n\n    FlagStroke: function() {\n      this._flagStroke = true;\n    },\n\n    MakeObservable: function(object) {\n\n      Two.Shape.MakeObservable(object);\n\n      _.each(Two.Text.Properties.slice(0, 12), Two.Utils.defineProperty, object);\n\n      Object.defineProperty(object, 'fill', {\n        enumerable: true,\n        get: function() {\n          return this._fill;\n        },\n        set: function(f) {\n\n          if (this._fill instanceof Two.Gradient\n            || this._fill instanceof Two.LinearGradient\n            || this._fill instanceof Two.RadialGradient\n            || this._fill instanceof Two.Texture) {\n            this._fill.unbind(Two.Events.change, this._renderer.flagFill);\n          }\n\n          this._fill = f;\n          this._flagFill = true;\n\n          if (this._fill instanceof Two.Gradient\n            || this._fill instanceof Two.LinearGradient\n            || this._fill instanceof Two.RadialGradient\n            || this._fill instanceof Two.Texture) {\n            this._fill.bind(Two.Events.change, this._renderer.flagFill);\n          }\n\n        }\n      });\n\n      Object.defineProperty(object, 'stroke', {\n        enumerable: true,\n        get: function() {\n          return this._stroke;\n        },\n        set: function(f) {\n\n          if (this._stroke instanceof Two.Gradient\n            || this._stroke instanceof Two.LinearGradient\n            || this._stroke instanceof Two.RadialGradient\n            || this._stroke instanceof Two.Texture) {\n            this._stroke.unbind(Two.Events.change, this._renderer.flagStroke);\n          }\n\n          this._stroke = f;\n          this._flagStroke = true;\n\n          if (this._stroke instanceof Two.Gradient\n            || this._stroke instanceof Two.LinearGradient\n            || this._stroke instanceof Two.RadialGradient\n            || this._stroke instanceof Two.Texture) {\n            this._stroke.bind(Two.Events.change, this._renderer.flagStroke);\n          }\n\n        }\n      });\n\n      Object.defineProperty(object, 'clip', {\n        enumerable: true,\n        get: function() {\n          return this._clip;\n        },\n        set: function(v) {\n          this._clip = v;\n          this._flagClip = true;\n        }\n      });\n\n    }\n\n  });\n\n  _.extend(Two.Text.prototype, Two.Shape.prototype, {\n\n    // Flags\n    // http://en.wikipedia.org/wiki/Flag\n\n    _flagValue: true,\n    _flagFamily: true,\n    _flagSize: true,\n    _flagLeading: true,\n    _flagAlignment: true,\n    _flagBaseline: true,\n    _flagStyle: true,\n    _flagWeight: true,\n    _flagDecoration: true,\n\n    _flagFill: true,\n    _flagStroke: true,\n    _flagLinewidth: true,\n    _flagOpacity: true,\n    _flagVisible: true,\n\n    _flagClip: false,\n\n    // Underlying Properties\n\n    _value: '',\n    _family: 'sans-serif',\n    _size: 13,\n    _leading: 17,\n    _alignment: 'center',\n    _baseline: 'middle',\n    _style: 'normal',\n    _weight: 500,\n    _decoration: 'none',\n\n    _fill: '#000',\n    _stroke: 'transparent',\n    _linewidth: 1,\n    _opacity: 1,\n    _visible: true,\n\n    _clip: false,\n\n    remove: function() {\n\n      if (!this.parent) {\n        return this;\n      }\n\n      this.parent.remove(this);\n\n      return this;\n\n    },\n\n    clone: function(parent) {\n\n      var parent = parent || this.parent;\n\n      var clone = new Two.Text(this.value);\n      clone.translation.copy(this.translation);\n      clone.rotation = this.rotation;\n      clone.scale = this.scale;\n\n      _.each(Two.Text.Properties, function(property) {\n        clone[property] = this[property];\n      }, this);\n\n      if (parent) {\n        parent.add(clone);\n      }\n\n      return clone;\n\n    },\n\n    toObject: function() {\n\n      var result = {\n        translation: this.translation.toObject(),\n        rotation: this.rotation,\n        scale: this.scale\n      };\n\n      _.each(Two.Text.Properties, function(property) {\n        result[property] = this[property];\n      }, this);\n\n      return result;\n\n    },\n\n    noStroke: function() {\n      this.stroke = 'transparent';\n      return this;\n    },\n\n    noFill: function() {\n      this.fill = 'transparent';\n      return this;\n    },\n\n    /**\n     * A shim to not break `getBoundingClientRect` calls. TODO: Implement a\n     * way to calculate proper bounding boxes of `Two.Text`.\n     */\n    getBoundingClientRect: function(shallow) {\n\n      var matrix, border, l, x, y, i, v;\n\n      var left = Infinity, right = -Infinity,\n          top = Infinity, bottom = -Infinity;\n\n      // TODO: Update this to not __always__ update. Just when it needs to.\n      this._update(true);\n\n      matrix = !!shallow ? this._matrix : getComputedMatrix(this);\n\n      v = matrix.multiply(0, 0, 1);\n\n      return {\n        top: v.x,\n        left: v.y,\n        right: v.x,\n        bottom: v.y,\n        width: 0,\n        height: 0\n      };\n\n    },\n\n    flagReset: function() {\n\n      this._flagValue = this._flagFamily = this._flagSize =\n        this._flagLeading = this._flagAlignment = this._flagFill =\n        this._flagStroke = this._flagLinewidth = this._flagOpaicty =\n        this._flagVisible = this._flagClip = this._flagDecoration =\n        this._flagBaseline = false;\n\n      Two.Shape.prototype.flagReset.call(this);\n\n      return this;\n\n    }\n\n  });\n\n  Two.Text.MakeObservable(Two.Text.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var _ = Two.Utils;\n\n  var Stop = Two.Stop = function(offset, color, opacity) {\n\n    this._renderer = {};\n    this._renderer.type = 'stop';\n\n    this.offset = _.isNumber(offset) ? offset\n      : Stop.Index <= 0 ? 0 : 1;\n\n    this.opacity = _.isNumber(opacity) ? opacity : 1;\n\n    this.color = _.isString(color) ? color\n      : Stop.Index <= 0 ? '#fff' : '#000';\n\n    Stop.Index = (Stop.Index + 1) % 2;\n\n  };\n\n  _.extend(Stop, {\n\n    Index: 0,\n\n    Properties: [\n      'offset',\n      'opacity',\n      'color'\n    ],\n\n    MakeObservable: function(object) {\n\n      _.each(Stop.Properties, function(property) {\n\n        var object = this;\n        var secret = '_' + property;\n        var flag = '_flag' + property.charAt(0).toUpperCase() + property.slice(1);\n\n        Object.defineProperty(object, property, {\n          enumerable: true,\n          get: function() {\n            return this[secret];\n          },\n          set: function(v) {\n            this[secret] = v;\n            this[flag] = true;\n            if (this.parent) {\n              this.parent._flagStops = true;\n            }\n          }\n        });\n\n      }, object);\n\n    }\n\n  });\n\n  _.extend(Stop.prototype, Two.Utils.Events, {\n\n    clone: function() {\n\n      var clone = new Stop();\n\n      _.each(Stop.Properties, function(property) {\n        clone[property] = this[property];\n      }, this);\n\n      return clone;\n\n    },\n\n    toObject: function() {\n\n      var result = {};\n\n      _.each(Stop.Properties, function(k) {\n        result[k] = this[k];\n      }, this);\n\n      return result;\n\n    },\n\n    flagReset: function() {\n\n      this._flagOffset = this._flagColor = this._flagOpacity = false;\n\n      return this;\n\n    }\n\n  });\n\n  Stop.MakeObservable(Stop.prototype);\n\n  var Gradient = Two.Gradient = function(stops) {\n\n    this._renderer = {};\n    this._renderer.type = 'gradient';\n\n    this.id = Two.Identifier + Two.uniqueId();\n    this.classList = [];\n\n    this._renderer.flagStops = _.bind(Gradient.FlagStops, this);\n    this._renderer.bindStops = _.bind(Gradient.BindStops, this);\n    this._renderer.unbindStops = _.bind(Gradient.UnbindStops, this);\n\n    this.spread = 'pad';\n\n    this.stops = stops;\n\n  };\n\n  _.extend(Gradient, {\n\n    Stop: Stop,\n\n    Properties: [\n      'spread'\n    ],\n\n    MakeObservable: function(object) {\n\n      _.each(Gradient.Properties, Two.Utils.defineProperty, object);\n\n      Object.defineProperty(object, 'stops', {\n\n        enumerable: true,\n\n        get: function() {\n          return this._stops;\n        },\n\n        set: function(stops) {\n\n          var updateStops = this._renderer.flagStops;\n          var bindStops = this._renderer.bindStops;\n          var unbindStops = this._renderer.unbindStops;\n\n          // Remove previous listeners\n          if (this._stops) {\n            this._stops\n              .unbind(Two.Events.insert, bindStops)\n              .unbind(Two.Events.remove, unbindStops);\n          }\n\n          // Create new Collection with copy of Stops\n          this._stops = new Two.Utils.Collection((stops || []).slice(0));\n\n          // Listen for Collection changes and bind / unbind\n          this._stops\n            .bind(Two.Events.insert, bindStops)\n            .bind(Two.Events.remove, unbindStops);\n\n          // Bind Initial Stops\n          bindStops(this._stops);\n\n        }\n\n      });\n\n    },\n\n    FlagStops: function() {\n      this._flagStops = true;\n    },\n\n    BindStops: function(items) {\n\n      // This function is called a lot\n      // when importing a large SVG\n      var i = items.length;\n      while(i--) {\n        items[i].bind(Two.Events.change, this._renderer.flagStops);\n        items[i].parent = this;\n      }\n\n      this._renderer.flagStops();\n\n    },\n\n    UnbindStops: function(items) {\n\n      var i = items.length;\n      while(i--) {\n        items[i].unbind(Two.Events.change, this._renderer.flagStops);\n        delete items[i].parent;\n      }\n\n      this._renderer.flagStops();\n\n    }\n\n  });\n\n  _.extend(Gradient.prototype, Two.Utils.Events, {\n\n    _flagStops: false,\n    _flagSpread: false,\n\n    clone: function(parent) {\n\n      parent = parent || this.parent;\n\n      var stops = _.map(this.stops, function(s) {\n        return s.clone();\n      });\n\n      var clone = new Gradient(stops);\n\n      _.each(Two.Gradient.Properties, function(k) {\n        clone[k] = this[k];\n      }, this);\n\n      if (parent) {\n        parent.add(clone);\n      }\n\n      return clone;\n\n    },\n\n    toObject: function() {\n\n      var result = {\n        stops: _.map(this.stops, function(s) {\n          return s.toObject();\n        })\n      };\n\n      _.each(Gradient.Properties, function(k) {\n        result[k] = this[k];\n      }, this);\n\n      return result;\n\n    },\n\n    _update: function() {\n\n      if (this._flagSpread || this._flagStops) {\n        this.trigger(Two.Events.change);\n      }\n\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagSpread = this._flagStops = false;\n\n      return this;\n\n    }\n\n  });\n\n  Gradient.MakeObservable(Gradient.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var _ = Two.Utils;\n\n  var LinearGradient = Two.LinearGradient = function(x1, y1, x2, y2, stops) {\n\n    Two.Gradient.call(this, stops);\n\n    this._renderer.type = 'linear-gradient';\n\n    var flagEndPoints = _.bind(LinearGradient.FlagEndPoints, this);\n    this.left = new Two.Vector().bind(Two.Events.change, flagEndPoints);\n    this.right = new Two.Vector().bind(Two.Events.change, flagEndPoints);\n\n    if (_.isNumber(x1)) {\n      this.left.x = x1;\n    }\n    if (_.isNumber(y1)) {\n      this.left.y = y1;\n    }\n    if (_.isNumber(x2)) {\n      this.right.x = x2;\n    }\n    if (_.isNumber(y2)) {\n      this.right.y = y2;\n    }\n\n  };\n\n  _.extend(LinearGradient, {\n\n    Stop: Two.Gradient.Stop,\n\n    MakeObservable: function(object) {\n      Two.Gradient.MakeObservable(object);\n    },\n\n    FlagEndPoints: function() {\n      this._flagEndPoints = true;\n    }\n\n  });\n\n  _.extend(LinearGradient.prototype, Two.Gradient.prototype, {\n\n    _flagEndPoints: false,\n\n    clone: function(parent) {\n\n      parent = parent || this.parent;\n\n      var stops = _.map(this.stops, function(stop) {\n        return stop.clone();\n      });\n\n      var clone = new LinearGradient(this.left._x, this.left._y,\n        this.right._x, this.right._y, stops);\n\n      _.each(Two.Gradient.Properties, function(k) {\n        clone[k] = this[k];\n      }, this);\n\n      if (parent) {\n        parent.add(clone);\n      }\n\n      return clone;\n\n    },\n\n    toObject: function() {\n\n      var result = Two.Gradient.prototype.toObject.call(this);\n\n      result.left = this.left.toObject();\n      result.right = this.right.toObject();\n\n      return result;\n\n    },\n\n    _update: function() {\n\n      if (this._flagEndPoints || this._flagSpread || this._flagStops) {\n        this.trigger(Two.Events.change);\n      }\n\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagEndPoints = false;\n\n      Two.Gradient.prototype.flagReset.call(this);\n\n      return this;\n\n    }\n\n  });\n\n  LinearGradient.MakeObservable(LinearGradient.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var _ = Two.Utils;\n\n  var RadialGradient = Two.RadialGradient = function(cx, cy, r, stops, fx, fy) {\n\n    Two.Gradient.call(this, stops);\n\n    this._renderer.type = 'radial-gradient';\n\n    this.center = new Two.Vector()\n      .bind(Two.Events.change, _.bind(function() {\n        this._flagCenter = true;\n      }, this));\n\n    this.radius = _.isNumber(r) ? r : 20;\n\n    this.focal = new Two.Vector()\n      .bind(Two.Events.change, _.bind(function() {\n        this._flagFocal = true;\n      }, this));\n\n    if (_.isNumber(cx)) {\n      this.center.x = cx;\n    }\n    if (_.isNumber(cy)) {\n      this.center.y = cy;\n    }\n\n    this.focal.copy(this.center);\n\n    if (_.isNumber(fx)) {\n      this.focal.x = fx;\n    }\n    if (_.isNumber(fy)) {\n      this.focal.y = fy;\n    }\n\n  };\n\n  _.extend(RadialGradient, {\n\n    Stop: Two.Gradient.Stop,\n\n    Properties: [\n      'radius'\n    ],\n\n    MakeObservable: function(object) {\n\n      Two.Gradient.MakeObservable(object);\n\n      _.each(RadialGradient.Properties, Two.Utils.defineProperty, object);\n\n    }\n\n  });\n\n  _.extend(RadialGradient.prototype, Two.Gradient.prototype, {\n\n    _flagRadius: false,\n    _flagCenter: false,\n    _flagFocal: false,\n\n    clone: function(parent) {\n\n      parent = parent || this.parent;\n\n      var stops = _.map(this.stops, function(stop) {\n        return stop.clone();\n      });\n\n      var clone = new RadialGradient(this.center._x, this.center._y,\n          this._radius, stops, this.focal._x, this.focal._y);\n\n      _.each(Two.Gradient.Properties.concat(RadialGradient.Properties), function(k) {\n        clone[k] = this[k];\n      }, this);\n\n      if (parent) {\n        parent.add(clone);\n      }\n\n      return clone;\n\n    },\n\n    toObject: function() {\n\n      var result = Two.Gradient.prototype.toObject.call(this);\n\n      _.each(RadialGradient.Properties, function(k) {\n        result[k] = this[k];\n      }, this);\n\n      result.center = this.center.toObject();\n      result.focal = this.focal.toObject();\n\n      return result;\n\n    },\n\n    _update: function() {\n\n      if (this._flagRadius || this._flatCenter || this._flagFocal\n        || this._flagSpread || this._flagStops) {\n        this.trigger(Two.Events.change);\n      }\n\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagRadius = this._flagCenter = this._flagFocal = false;\n\n      Two.Gradient.prototype.flagReset.call(this);\n\n      return this;\n\n    }\n\n  });\n\n  RadialGradient.MakeObservable(RadialGradient.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var _ = Two.Utils;\n  var anchor;\n  var regex = {\n    video: /\\.(mp4|webm)$/i,\n    image: /\\.(jpe?g|png|gif|tiff)$/i\n  };\n\n  if (this.document) {\n    anchor = document.createElement('a');\n  }\n\n  var Texture = Two.Texture = function(src, callback) {\n\n    this._renderer = {};\n    this._renderer.type = 'texture';\n    this._renderer.flagOffset = _.bind(Texture.FlagOffset, this);\n    this._renderer.flagScale = _.bind(Texture.FlagScale, this);\n\n    this.id = Two.Identifier + Two.uniqueId();\n    this.classList = [];\n\n    this.offset = new Two.Vector();\n\n    if (_.isFunction(callback)) {\n      var loaded = _.bind(function() {\n        this.unbind(Two.Events.load, loaded);\n        if (_.isFunction(callback)) {\n          callback();\n        }\n      }, this);\n      this.bind(Two.Events.load, loaded);\n    }\n\n    if (_.isString(src)) {\n      this.src = src;\n    } else if (_.isElement(src)) {\n      this.image = src;\n    }\n\n    this._update();\n\n  };\n\n  _.extend(Texture, {\n\n    Properties: [\n      'src',\n      'loaded',\n      'repeat'\n    ],\n\n    ImageRegistry: new Two.Registry(),\n\n    getAbsoluteURL: function(path) {\n      if (!anchor) {\n        // TODO: Fix for headless environment\n        return path;\n      }\n      anchor.href = path;\n      return anchor.href;\n    },\n\n    getImage: function(src) {\n\n      var absoluteSrc = Texture.getAbsoluteURL(src);\n\n      if (Texture.ImageRegistry.contains(absoluteSrc)) {\n        return Texture.ImageRegistry.get(absoluteSrc);\n      }\n\n      var image;\n\n      if (regex.video.test(absoluteSrc)) {\n        image = document.createElement('video');\n      } else {\n        image = document.createElement('img');\n      }\n\n      image.crossOrigin = 'anonymous';\n\n      return image;\n\n    },\n\n    Register: {\n      canvas: function(texture, callback) {\n        texture._src = '#' + texture.id;\n        Texture.ImageRegistry.add(texture.src, texture.image);\n        if (_.isFunction(callback)) {\n          callback();\n        }\n      },\n      img: function(texture, callback) {\n\n        var loaded = function(e) {\n          texture.image.removeEventListener('load', loaded, false);\n          texture.image.removeEventListener('error', error, false);\n          if (_.isFunction(callback)) {\n            callback();\n          }\n        };\n        var error = function(e) {\n          texture.image.removeEventListener('load', loaded, false);\n          texture.image.removeEventListener('error', error, false);\n          throw new Two.Utils.Error('unable to load ' + texture.src);\n        };\n\n        if (_.isNumber(texture.image.width) && texture.image.width > 0\n          && _.isNumber(texture.image.height) && texture.image.height > 0) {\n            loaded();\n        } else {\n          texture.image.addEventListener('load', loaded, false);\n          texture.image.addEventListener('error', error, false);\n        }\n\n        texture._src = Texture.getAbsoluteURL(texture._src);\n\n        if (texture.image && texture.image.getAttribute('two-src')) {\n          return;\n        }\n\n        texture.image.setAttribute('two-src', texture.src);\n        Texture.ImageRegistry.add(texture.src, texture.image);\n        texture.image.src = texture.src;\n\n      },\n      video: function(texture, callback) {\n\n        var loaded = function(e) {\n          texture.image.removeEventListener('load', loaded, false);\n          texture.image.removeEventListener('error', error, false);\n          texture.image.width = texture.image.videoWidth;\n          texture.image.height = texture.image.videoHeight;\n          texture.image.play();\n          if (_.isFunction(callback)) {\n            callback();\n          }\n        };\n        var error = function(e) {\n          texture.image.removeEventListener('load', loaded, false);\n          texture.image.removeEventListener('error', error, false);\n          throw new Two.Utils.Error('unable to load ' + texture.src);\n        };\n\n        texture._src = Texture.getAbsoluteURL(texture._src);\n        texture.image.addEventListener('canplaythrough', loaded, false);\n        texture.image.addEventListener('error', error, false);\n\n        if (texture.image && texture.image.getAttribute('two-src')) {\n          return;\n        }\n\n        texture.image.setAttribute('two-src', texture.src);\n        Texture.ImageRegistry.add(texture.src, texture.image);\n        texture.image.src = texture.src;\n        texture.image.loop = true;\n        texture.image.load();\n\n      }\n    },\n\n    load: function(texture, callback) {\n\n      var src = texture.src;\n      var image = texture.image;\n      var tag = image && image.nodeName.toLowerCase();\n\n      if (texture._flagImage) {\n        if (/canvas/i.test(tag)) {\n          Texture.Register.canvas(texture, callback);\n        } else {\n          texture._src = image.getAttribute('two-src') || image.src;\n          Texture.Register[tag](texture, callback);\n        }\n      }\n\n      if (texture._flagSrc) {\n        if (!image) {\n          texture.image = Texture.getImage(texture.src);\n        }\n        tag = texture.image.nodeName.toLowerCase();\n        Texture.Register[tag](texture, callback);\n      }\n\n    },\n\n    FlagOffset: function() {\n      this._flagOffset = true;\n    },\n\n    FlagScale: function() {\n      this._flagScale = true;\n    },\n\n    MakeObservable: function(object) {\n\n      _.each(Texture.Properties, Two.Utils.defineProperty, object);\n\n      Object.defineProperty(object, 'image', {\n        enumerable: true,\n        get: function() {\n          return this._image;\n        },\n        set: function(image) {\n\n          var tag = image && image.nodeName.toLowerCase();\n          var index;\n\n          switch (tag) {\n            case 'canvas':\n              index = '#' + image.id;\n              break;\n            default:\n              index = image.src;\n          }\n\n          if (Texture.ImageRegistry.contains(index)) {\n            this._image = Texture.ImageRegistry.get(image.src);\n          } else {\n            this._image = image;\n          }\n\n          this._flagImage = true;\n\n        }\n\n      });\n\n      Object.defineProperty(object, 'offset', {\n        enumerable: true,\n        get: function() {\n          return this._offset;\n        },\n        set: function(v) {\n          if (this._offset) {\n            this._offset.unbind(Two.Events.change, this._renderer.flagOffset);\n          }\n          this._offset = v;\n          this._offset.bind(Two.Events.change, this._renderer.flagOffset);\n          this._flagOffset = true;\n        }\n      });\n\n      Object.defineProperty(object, 'scale', {\n        enumerable: true,\n        get: function() {\n          return this._scale;\n        },\n        set: function(v) {\n\n          if (this._scale instanceof Two.Vector) {\n            this._scale.unbind(Two.Events.change, this._renderer.flagScale);\n          }\n\n          this._scale = v;\n\n          if (this._scale instanceof Two.Vector) {\n            this._scale.bind(Two.Events.change, this._renderer.flagScale);\n          }\n\n          this._flagScale = true;\n\n        }\n      });\n\n    }\n\n  });\n\n  _.extend(Texture.prototype, Two.Utils.Events, Two.Shape.prototype, {\n\n    _flagSrc: false,\n    _flagImage: false,\n    _flagVideo: false,\n    _flagLoaded: false,\n    _flagRepeat: false,\n\n    _flagOffset: false,\n    _flagScale: false,\n\n    _src: '',\n    _image: null,\n    _loaded: false,\n    _repeat: 'no-repeat',\n\n    _scale: 1,\n    _offset: null,\n\n    clone: function() {\n      return new Texture(this.src);\n    },\n\n    toObject: function() {\n      return {\n        src: this.src,\n        image: this.image\n      }\n    },\n\n    _update: function() {\n\n      if (this._flagSrc || this._flagImage || this._flagVideo) {\n\n        this.trigger(Two.Events.change);\n\n        if (this._flagSrc || this._flagImage) {\n          this.loaded = false;\n          Texture.load(this, _.bind(function() {\n            this.loaded = true;\n            this\n              .trigger(Two.Events.change)\n              .trigger(Two.Events.load);\n          }, this));\n        }\n\n      }\n\n      if (this._image && this._image.readyState >= 4) {\n        this._flagVideo = true;\n      }\n\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagSrc = this._flagImage = this._flagLoaded\n        = this._flagVideo = this._flagScale = this._flagOffset = false;\n\n      return this;\n\n    }\n\n  });\n\n  Texture.MakeObservable(Texture.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var _ = Two.Utils;\n  var Path = Two.Path;\n  var Rectangle = Two.Rectangle;\n\n  var Sprite = Two.Sprite = function(path, ox, oy, cols, rows, frameRate) {\n\n    Path.call(this, [\n      new Two.Anchor(),\n      new Two.Anchor(),\n      new Two.Anchor(),\n      new Two.Anchor()\n    ], true);\n\n    this.noStroke();\n    this.noFill();\n\n    if (path instanceof Two.Texture) {\n      this.texture = path;\n    } else if (_.isString(path)) {\n      this.texture = new Two.Texture(path);\n    }\n\n    this._update();\n    this.translation.set(ox || 0, oy || 0);\n\n    if (_.isNumber(cols)) {\n      this.columns = cols;\n    }\n    if (_.isNumber(rows)) {\n      this.rows = rows;\n    }\n    if (_.isNumber(frameRate)) {\n      this.frameRate = frameRate;\n    }\n\n  };\n\n  _.extend(Sprite, {\n\n    Properties: [\n      'texture', 'columns', 'rows', 'frameRate', 'index'\n    ],\n\n    MakeObservable: function(obj) {\n\n      Rectangle.MakeObservable(obj);\n      _.each(Sprite.Properties, Two.Utils.defineProperty, obj);\n\n    }\n\n  })\n\n  _.extend(Sprite.prototype, Rectangle.prototype, {\n\n    _flagTexture: false,\n    _flagColumns: false,\n    _flagRows: false,\n    _flagFrameRate: false,\n    flagIndex: false,\n\n    // Private variables\n    _amount: 1,\n    _duration: 0,\n    _startTime: 0,\n    _playing: false,\n    _firstFrame: 0,\n    _lastFrame: 0,\n    _loop: true,\n\n    // Exposed through getter-setter\n    _texture: null,\n    _columns: 1,\n    _rows: 1,\n    _frameRate: 0,\n    _index: 0,\n\n    play: function(firstFrame, lastFrame, onLastFrame) {\n\n      this._playing = true;\n      this._firstFrame = 0;\n      this._lastFrame = this.amount - 1;\n      this._startTime = _.performance.now();\n\n      if (_.isNumber(firstFrame)) {\n        this._firstFrame = firstFrame;\n      }\n      if (_.isNumber(lastFrame)) {\n        this._lastFrame = lastFrame;\n      }\n      if (_.isFunction(onLastFrame)) {\n        this._onLastFrame = onLastFrame;\n      } else {\n        delete this._onLastFrame;\n      }\n\n      if (this._index !== this._firstFrame) {\n        this._startTime -= 1000 * Math.abs(this._index - this._firstFrame)\n          / this._frameRate;\n      }\n\n      return this;\n\n    },\n\n    pause: function() {\n\n      this._playing = false;\n      return this;\n\n    },\n\n    stop: function() {\n\n      this._playing = false;\n      this._index = 0;\n\n      return this;\n\n    },\n\n    clone: function(parent) {\n\n      parent = parent || this.parent;\n\n      var clone = new Sprite(\n        this.texture, this.translation.x, this.translation.y,\n        this.columns, this.rows, this.frameRate\n      );\n\n      if (this.playing) {\n        clone.play(this._firstFrame, this._lastFrame);\n        clone._loop = this._loop;\n      }\n\n      if (parent) {\n        parent.add(clone);\n      }\n\n      return clone;\n\n    },\n\n    _update: function() {\n\n      var effect = this._texture;\n      var cols = this._columns;\n      var rows = this._rows;\n\n      var width, height, elapsed, amount, duration;\n      var index, iw, ih, isRange, frames;\n\n      if (this._flagColumns || this._flagRows) {\n        this._amount = this._columns * this._rows;\n      }\n\n      if (this._flagFrameRate) {\n        this._duration = 1000 * this._amount / this._frameRate;\n      }\n\n      if (this._flagTexture) {\n        this.fill = this._texture;\n      }\n\n      if (this._texture.loaded) {\n\n        iw = effect.image.width;\n        ih = effect.image.height;\n\n        width = iw / cols;\n        height = ih / rows;\n        amount = this._amount;\n\n        if (this.width !== width) {\n          this.width = width;\n        }\n        if (this.height !== height) {\n          this.height = height;\n        }\n\n        if (this._playing && this._frameRate > 0) {\n\n          if (_.isNaN(this._lastFrame)) {\n            this._lastFrame = amount - 1;\n          }\n\n          // TODO: Offload perf logic to instance of `Two`.\n          elapsed = _.performance.now() - this._startTime;\n          frames = this._lastFrame + 1;\n          duration = 1000 * (frames - this._firstFrame) / this._frameRate;\n\n          if (this._loop) {\n            elapsed = elapsed % duration;\n          } else {\n            elapsed = Math.min(elapsed, duration);\n          }\n\n          index = _.lerp(this._firstFrame, frames, elapsed / duration);\n          index = Math.floor(index);\n\n          if (index !== this._index) {\n            this._index = index;\n            if (index >= this._lastFrame - 1 && this._onLastFrame) {\n              this._onLastFrame();  // Shortcut for chainable sprite animations\n            }\n          }\n\n        }\n\n        var col = this._index % cols;\n        var row = Math.floor(this._index / cols);\n\n        var ox = - width * col + (iw - width) / 2;\n        var oy = - height * row + (ih - height) / 2;\n\n        // TODO: Improve performance\n        if (ox !== effect.offset.x) {\n          effect.offset.x = ox;\n        }\n        if (oy !== effect.offset.y) {\n          effect.offset.y = oy;\n        }\n\n      }\n\n      Rectangle.prototype._update.call(this);\n\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagTexture = this._flagColumns = this._flagRows\n        = this._flagFrameRate = false;\n\n      Rectangle.prototype.flagReset.call(this);\n\n      return this;\n    }\n\n\n  });\n\n  Sprite.MakeObservable(Sprite.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  var _ = Two.Utils;\n  var Path = Two.Path;\n  var Rectangle = Two.Rectangle;\n\n  var ImageSequence = Two.ImageSequence = function(paths, ox, oy, frameRate) {\n\n    Path.call(this, [\n      new Two.Anchor(),\n      new Two.Anchor(),\n      new Two.Anchor(),\n      new Two.Anchor()\n    ], true);\n\n    this._renderer.flagTextures = _.bind(ImageSequence.FlagTextures, this);\n    this._renderer.bindTextures = _.bind(ImageSequence.BindTextures, this);\n    this._renderer.unbindTextures = _.bind(ImageSequence.UnbindTextures, this);\n\n    this.noStroke();\n    this.noFill();\n\n    this.textures = _.map(paths, ImageSequence.GenerateTexture, this);\n\n    this._update();\n    this.translation.set(ox || 0, oy || 0);\n\n    if (_.isNumber(frameRate)) {\n      this.frameRate = frameRate;\n    } else {\n      this.frameRate = ImageSequence.DefaultFrameRate;\n    }\n\n  };\n\n  _.extend(ImageSequence, {\n\n    Properties: [\n      'frameRate',\n      'index'\n    ],\n\n    DefaultFrameRate: 30,\n\n    FlagTextures: function() {\n      this._flagTextures = true;\n    },\n\n    BindTextures: function(items) {\n\n      var i = items.length;\n      while (i--) {\n        items[i].bind(Two.Events.change, this._renderer.flagTextures);\n      }\n\n      this._renderer.flagTextures();\n\n    },\n\n    UnbindTextures: function(items) {\n\n      var i = items.length;\n      while (i--) {\n        items[i].unbind(Two.Events.change, this._renderer.flagTextures);\n      }\n\n      this._renderer.flagTextures();\n\n    },\n\n    MakeObservable: function(obj) {\n\n      Rectangle.MakeObservable(obj);\n      _.each(ImageSequence.Properties, Two.Utils.defineProperty, obj);\n\n      Object.defineProperty(obj, 'textures', {\n\n        enumerable: true,\n\n        get: function() {\n          return this._textures;\n        },\n\n        set: function(textures) {\n\n          var updateTextures = this._renderer.flagTextures;\n          var bindTextures = this._renderer.bindTextures;\n          var unbindTextures = this._renderer.unbindTextures;\n\n          // Remove previous listeners\n          if (this._textures) {\n            this._textures\n              .unbind(Two.Events.insert, bindTextures)\n              .unbind(Two.Events.remove, unbindTextures);\n          }\n\n          // Create new Collection with copy of vertices\n          this._textures = new Two.Utils.Collection((textures || []).slice(0));\n\n          // Listen for Collection changes and bind / unbind\n          this._textures\n            .bind(Two.Events.insert, bindTextures)\n            .bind(Two.Events.remove, unbindTextures);\n\n          // Bind Initial Textures\n          bindTextures(this._textures);\n\n        }\n\n      });\n\n    },\n\n    GenerateTexture: function(obj) {\n      if (obj instanceof Two.Texture) {\n        return obj;\n      } else if (_.isString(obj)) {\n        return new Two.Texture(obj);\n      }\n    }\n\n  });\n\n  _.extend(ImageSequence.prototype, Rectangle.prototype, {\n\n    _flagTextures: false,\n    _flagFrameRate: false,\n    _flagIndex: false,\n\n    // Private variables\n    _amount: 1,\n    _duration: 0,\n    _index: 0,\n    _startTime: 0,\n    _playing: false,\n    _firstFrame: 0,\n    _lastFrame: 0,\n    _loop: true,\n\n    // Exposed through getter-setter\n    _textures: null,\n    _frameRate: 0,\n\n    play: function(firstFrame, lastFrame, onLastFrame) {\n\n      this._playing = true;\n      this._firstFrame = 0;\n      this._lastFrame = this.amount - 1;\n      this._startTime = _.performance.now();\n\n      if (_.isNumber(firstFrame)) {\n        this._firstFrame = firstFrame;\n      }\n      if (_.isNumber(lastFrame)) {\n        this._lastFrame = lastFrame;\n      }\n      if (_.isFunction(onLastFrame)) {\n        this._onLastFrame = onLastFrame;\n      } else {\n        delete this._onLastFrame;\n      }\n\n      if (this._index !== this._firstFrame) {\n        this._startTime -= 1000 * Math.abs(this._index - this._firstFrame)\n          / this._frameRate;\n      }\n\n      return this;\n\n    },\n\n    pause: function() {\n\n      this._playing = false;\n      return this;\n\n    },\n\n    stop: function() {\n\n      this._playing = false;\n      this._index = 0;\n\n      return this;\n\n    },\n\n    clone: function(parent) {\n\n      parent = parent || this.parent;\n\n      var clone = new ImageSequence(this.textures, this.translation.x,\n        this.translation.y, this.frameRate)\n\n        clone._loop = this._loop;\n\n        if (this._playing) {\n          clone.play();\n        }\n\n        if (parent) {\n          parent.add(clone);\n        }\n\n        return clone;\n\n    },\n\n    _update: function() {\n\n      var effects = this._textures;\n      var width, height, elapsed, amount, duration, texture;\n      var index, frames;\n\n      if (this._flagTextures) {\n        this._amount = effects.length;\n      }\n\n      if (this._flagFrameRate) {\n        this._duration = 1000 * this._amount / this._frameRate;\n      }\n\n      if (this._playing && this._frameRate > 0) {\n\n        amount = this._amount;\n\n        if (_.isNaN(this._lastFrame)) {\n          this._lastFrame = amount - 1;\n        }\n\n        // TODO: Offload perf logic to instance of `Two`.\n        elapsed = _.performance.now() - this._startTime;\n        frames = this._lastFrame + 1;\n        duration = 1000 * (frames - this._firstFrame) / this._frameRate;\n\n        if (this._loop) {\n          elapsed = elapsed % duration;\n        } else {\n          elapsed = Math.min(elapsed, duration);\n        }\n\n        index = _.lerp(this._firstFrame, frames, elapsed / duration);\n        index = Math.floor(index);\n\n        if (index !== this._index) {\n\n          this._index = index;\n          texture = effects[this._index];\n\n          if (texture.loaded) {\n\n            width = texture.image.width;\n            height = texture.image.height;\n\n            if (this.width !== width) {\n              this.width = width;\n            }\n            if (this.height !== height) {\n              this.height = height;\n            }\n\n            this.fill = texture;\n\n            if (index >= this._lastFrame - 1 && this._onLastFrame) {\n              this._onLastFrame();  // Shortcut for chainable sprite animations\n            }\n\n          }\n\n        }\n\n      } else if (this._flagIndex || !(this.fill instanceof Two.Texture)) {\n\n        texture = effects[this._index];\n\n        if (texture.loaded) {\n\n          width = texture.image.width;\n          height = texture.image.height;\n\n          if (this.width !== width) {\n            this.width = width;\n          }\n          if (this.height !== height) {\n            this.height = height;\n          }\n\n        }\n\n        this.fill = texture;\n\n      }\n\n      Rectangle.prototype._update.call(this);\n\n      return this;\n\n    },\n\n    flagReset: function() {\n\n      this._flagTextures = this._flagFrameRate = false;\n      Rectangle.prototype.flagReset.call(this);\n\n      return this;\n\n    }\n\n  });\n\n  ImageSequence.MakeObservable(ImageSequence.prototype);\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n(function(Two) {\n\n  /**\n   * Constants\n   */\n  var min = Math.min, max = Math.max;\n  var _ = Two.Utils;\n\n  /**\n   * A children collection which is accesible both by index and by object id\n   * @constructor\n   */\n  var Children = function() {\n\n    Two.Utils.Collection.apply(this, arguments);\n\n    Object.defineProperty(this, '_events', {\n      value : {},\n      enumerable: false\n    });\n\n    this.ids = {};\n\n    this.on(Two.Events.insert, this.attach);\n    this.on(Two.Events.remove, this.detach);\n    Children.prototype.attach.apply(this, arguments);\n\n  };\n\n  Children.prototype = new Two.Utils.Collection();\n  Children.prototype.constructor = Children;\n\n  _.extend(Children.prototype, {\n\n    attach: function(children) {\n      for (var i = 0; i < children.length; i++) {\n        this.ids[children[i].id] = children[i];\n      }\n      return this;\n    },\n\n    detach: function(children) {\n      for (var i = 0; i < children.length; i++) {\n        delete this.ids[children[i].id];\n      }\n      return this;\n    }\n\n  });\n\n  var Group = Two.Group = function() {\n\n    Two.Shape.call(this, true);\n\n    this._renderer.type = 'group';\n\n    this.additions = [];\n    this.subtractions = [];\n\n    this.children = arguments;\n\n  };\n\n  _.extend(Group, {\n\n    Children: Children,\n\n    InsertChildren: function(children) {\n      for (var i = 0; i < children.length; i++) {\n        replaceParent.call(this, children[i], this);\n      }\n    },\n\n    RemoveChildren: function(children) {\n      for (var i = 0; i < children.length; i++) {\n        replaceParent.call(this, children[i]);\n      }\n    },\n\n    OrderChildren: function(children) {\n      this._flagOrder = true;\n    },\n\n    MakeObservable: function(object) {\n\n      var properties = Two.Path.Properties.slice(0);\n      var oi = _.indexOf(properties, 'opacity');\n\n      if (oi >= 0) {\n\n        properties.splice(oi, 1);\n\n        Object.defineProperty(object, 'opacity', {\n\n          enumerable: true,\n\n          get: function() {\n            return this._opacity;\n          },\n\n          set: function(v) {\n            // Only set flag if there is an actual difference\n            this._flagOpacity = (this._opacity != v);\n            this._opacity = v;\n          }\n\n        });\n\n      }\n\n      Two.Shape.MakeObservable(object);\n      Group.MakeGetterSetters(object, properties);\n\n      Object.defineProperty(object, 'children', {\n\n        enumerable: true,\n\n        get: function() {\n          return this._children;\n        },\n\n        set: function(children) {\n\n          var insertChildren = _.bind(Group.InsertChildren, this);\n          var removeChildren = _.bind(Group.RemoveChildren, this);\n          var orderChildren = _.bind(Group.OrderChildren, this);\n\n          if (this._children) {\n            this._children.unbind();\n          }\n\n          this._children = new Children(children);\n          this._children.bind(Two.Events.insert, insertChildren);\n          this._children.bind(Two.Events.remove, removeChildren);\n          this._children.bind(Two.Events.order, orderChildren);\n\n        }\n\n      });\n\n      Object.defineProperty(object, 'mask', {\n\n        enumerable: true,\n\n        get: function() {\n          return this._mask;\n        },\n\n        set: function(v) {\n          this._mask = v;\n          this._flagMask = true;\n          if (!v.clip) {\n            v.clip = true;\n          }\n        }\n\n      });\n\n    },\n\n    MakeGetterSetters: function(group, properties) {\n\n      if (!_.isArray(properties)) {\n        properties = [properties];\n      }\n\n      _.each(properties, function(k) {\n        Group.MakeGetterSetter(group, k);\n      });\n\n    },\n\n    MakeGetterSetter: function(group, k) {\n\n      var secret = '_' + k;\n\n      Object.defineProperty(group, k, {\n\n        enumerable: true,\n\n        get: function() {\n          return this[secret];\n        },\n\n        set: function(v) {\n          this[secret] = v;\n          _.each(this.children, function(child) { // Trickle down styles\n            child[k] = v;\n          });\n        }\n\n      });\n\n    }\n\n  });\n\n  _.extend(Group.prototype, Two.Shape.prototype, {\n\n    // Flags\n    // http://en.wikipedia.org/wiki/Flag\n\n    _flagAdditions: false,\n    _flagSubtractions: false,\n    _flagOrder: false,\n    _flagOpacity: true,\n\n    _flagMask: false,\n\n    // Underlying Properties\n\n    _fill: '#fff',\n    _stroke: '#000',\n    _linewidth: 1.0,\n    _opacity: 1.0,\n    _visible: true,\n\n    _cap: 'round',\n    _join: 'round',\n    _miter: 4,\n\n    _closed: true,\n    _curved: false,\n    _automatic: true,\n    _beginning: 0,\n    _ending: 1.0,\n\n    _mask: null,\n\n    /**\n     * TODO: Group has a gotcha in that it's at the moment required to be bound to\n     * an instance of two in order to add elements correctly. This needs to\n     * be rethought and fixed.\n     */\n    clone: function(parent) {\n\n      parent = parent || this.parent;\n\n      var group = new Group();\n      var children = _.map(this.children, function(child) {\n        return child.clone(group);\n      });\n\n      group.add(children);\n\n      group.opacity = this.opacity;\n\n      if (this.mask) {\n        group.mask = this.mask;\n      }\n\n      group.translation.copy(this.translation);\n      group.rotation = this.rotation;\n      group.scale = this.scale;\n\n      if (parent) {\n        parent.add(group);\n      }\n\n      return group;\n\n    },\n\n    /**\n     * Export the data from the instance of Two.Group into a plain JavaScript\n     * object. This also makes all children plain JavaScript objects. Great\n     * for turning into JSON and storing in a database.\n     */\n    toObject: function() {\n\n      var result = {\n        children: [],\n        translation: this.translation.toObject(),\n        rotation: this.rotation,\n        scale: this.scale,\n        opacity: this.opacity,\n        mask: (this.mask ? this.mask.toObject() : null)\n      };\n\n      _.each(this.children, function(child, i) {\n        result.children[i] = child.toObject();\n      }, this);\n\n      return result;\n\n    },\n\n    /**\n     * Anchor all children to the upper left hand corner\n     * of the group.\n     */\n    corner: function() {\n\n      var rect = this.getBoundingClientRect(true),\n       corner = { x: rect.left, y: rect.top };\n\n      this.children.forEach(function(child) {\n        child.translation.subSelf(corner);\n      });\n\n      return this;\n\n    },\n\n    /**\n     * Anchors all children around the center of the group,\n     * effectively placing the shape around the unit circle.\n     */\n    center: function() {\n\n      var rect = this.getBoundingClientRect(true);\n\n      rect.centroid = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2\n      };\n\n      this.children.forEach(function(child) {\n        if (child.isShape) {\n          child.translation.subSelf(rect.centroid);\n        }\n      });\n\n      // this.translation.copy(rect.centroid);\n\n      return this;\n\n    },\n\n    /**\n     * Recursively search for id. Returns the first element found.\n     * Returns null if none found.\n     */\n    getById: function (id) {\n      var search = function (node, id) {\n        if (node.id === id) {\n          return node;\n        } else if (node.children) {\n          var i = node.children.length;\n          while (i--) {\n            var found = search(node.children[i], id);\n            if (found) return found;\n          }\n        }\n\n      };\n      return search(this, id) || null;\n    },\n\n    /**\n     * Recursively search for classes. Returns an array of matching elements.\n     * Empty array if none found.\n     */\n    getByClassName: function (cl) {\n      var found = [];\n      var search = function (node, cl) {\n        if (node.classList.indexOf(cl) != -1) {\n          found.push(node);\n        } else if (node.children) {\n          node.children.forEach(function (child) {\n            search(child, cl);\n          });\n        }\n        return found;\n      };\n      return search(this, cl);\n    },\n\n    /**\n     * Recursively search for children of a specific type,\n     * e.g. Two.Polygon. Pass a reference to this type as the param.\n     * Returns an empty array if none found.\n     */\n    getByType: function(type) {\n      var found = [];\n      var search = function (node, type) {\n        for (var id in node.children) {\n          if (node.children[id] instanceof type) {\n            found.push(node.children[id]);\n          } else if (node.children[id] instanceof Two.Group) {\n            search(node.children[id], type);\n          }\n        }\n        return found;\n      };\n      return search(this, type);\n    },\n\n    /**\n     * Add objects to the group.\n     */\n    add: function(objects) {\n\n      // Allow to pass multiple objects either as array or as multiple arguments\n      // If it's an array also create copy of it in case we're getting passed\n      // a childrens array directly.\n      if (!(objects instanceof Array)) {\n        objects = _.toArray(arguments);\n      } else {\n        objects = objects.slice();\n      }\n\n      // Add the objects\n      for (var i = 0; i < objects.length; i++) {\n        if (!(objects[i] && objects[i].id)) continue;\n        this.children.push(objects[i]);\n      }\n\n      return this;\n\n    },\n\n    /**\n     * Remove objects from the group.\n     */\n    remove: function(objects) {\n\n      var l = arguments.length,\n        grandparent = this.parent;\n\n      // Allow to call remove without arguments\n      // This will detach the object from the scene.\n      if (l <= 0 && grandparent) {\n        grandparent.remove(this);\n        return this;\n      }\n\n      // Allow to pass multiple objects either as array or as multiple arguments\n      // If it's an array also create copy of it in case we're getting passed\n      // a childrens array directly.\n      if (!(objects instanceof Array)) {\n        objects = _.toArray(arguments);\n      } else {\n        objects = objects.slice();\n      }\n\n      // Remove the objects\n      for (var i = 0; i < objects.length; i++) {\n        if (!objects[i] || !(this.children.ids[objects[i].id])) continue;\n        this.children.splice(_.indexOf(this.children, objects[i]), 1);\n      }\n\n      return this;\n\n    },\n\n    /**\n     * Return an object with top, left, right, bottom, width, and height\n     * parameters of the group.\n     */\n    getBoundingClientRect: function(shallow) {\n      var rect;\n\n      // TODO: Update this to not __always__ update. Just when it needs to.\n      this._update(true);\n\n      // Variables need to be defined here, because of nested nature of groups.\n      var left = Infinity, right = -Infinity,\n          top = Infinity, bottom = -Infinity;\n\n      this.children.forEach(function(child) {\n\n        if (/(linear-gradient|radial-gradient|gradient)/.test(child._renderer.type)) {\n          return;\n        }\n\n        rect = child.getBoundingClientRect(shallow);\n\n        if (!_.isNumber(rect.top)   || !_.isNumber(rect.left)   ||\n            !_.isNumber(rect.right) || !_.isNumber(rect.bottom)) {\n          return;\n        }\n\n        top = min(rect.top, top);\n        left = min(rect.left, left);\n        right = max(rect.right, right);\n        bottom = max(rect.bottom, bottom);\n\n      }, this);\n\n      return {\n        top: top,\n        left: left,\n        right: right,\n        bottom: bottom,\n        width: right - left,\n        height: bottom - top\n      };\n\n    },\n\n    /**\n     * Trickle down of noFill\n     */\n    noFill: function() {\n      this.children.forEach(function(child) {\n        child.noFill();\n      });\n      return this;\n    },\n\n    /**\n     * Trickle down of noStroke\n     */\n    noStroke: function() {\n      this.children.forEach(function(child) {\n        child.noStroke();\n      });\n      return this;\n    },\n\n    /**\n     * Trickle down subdivide\n     */\n    subdivide: function() {\n      var args = arguments;\n      this.children.forEach(function(child) {\n        child.subdivide.apply(child, args);\n      });\n      return this;\n    },\n\n    flagReset: function() {\n\n      if (this._flagAdditions) {\n        this.additions.length = 0;\n        this._flagAdditions = false;\n      }\n\n      if (this._flagSubtractions) {\n        this.subtractions.length = 0;\n        this._flagSubtractions = false;\n      }\n\n      this._flagOrder = this._flagMask = this._flagOpacity = false;\n\n      Two.Shape.prototype.flagReset.call(this);\n\n      return this;\n\n    }\n\n  });\n\n  Group.MakeObservable(Group.prototype);\n\n  /**\n   * Helper function used to sync parent-child relationship within the\n   * `Two.Group.children` object.\n   *\n   * Set the parent of the passed object to another object\n   * and updates parent-child relationships\n   * Calling with one arguments will simply remove the parenting\n   */\n  function replaceParent(child, newParent) {\n\n    var parent = child.parent;\n    var index;\n\n    if (parent === newParent) {\n      this.additions.push(child);\n      this._flagAdditions = true;\n      return;\n    }\n\n    if (parent && parent.children.ids[child.id]) {\n\n      index = _.indexOf(parent.children, child);\n      parent.children.splice(index, 1);\n\n      // If we're passing from one parent to another...\n      index = _.indexOf(parent.additions, child);\n\n      if (index >= 0) {\n        parent.additions.splice(index, 1);\n      } else {\n        parent.subtractions.push(child);\n        parent._flagSubtractions = true;\n      }\n\n    }\n\n    if (newParent) {\n      child.parent = newParent;\n      this.additions.push(child);\n      this._flagAdditions = true;\n      return;\n    }\n\n    // If we're passing from one parent to another...\n    index = _.indexOf(this.additions, child);\n\n    if (index >= 0) {\n      this.additions.splice(index, 1);\n    } else {\n      this.subtractions.push(child);\n      this._flagSubtractions = true;\n    }\n\n    delete child.parent;\n\n  }\n\n})((typeof global !== 'undefined' ? global : this).Two);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/twojs/two.js\n// module id = XZu1\n// module chunks = 1"],"sourceRoot":""}